ARM GAS  /tmp/ccq3ohDK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ssd1306.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ssd1306_WriteCommand:
  26              	.LVL0:
  27              	.LFB309:
  28              		.file 1 "Src/ssd1306.c"
   1:Src/ssd1306.c **** 
   2:Src/ssd1306.c **** #include"ssd1306.h"
   3:Src/ssd1306.c **** 
   4:Src/ssd1306.c **** 
   5:Src/ssd1306.c **** // Screenbuffer
   6:Src/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_WIDTH * SSD1306_HEIGHT / 8];
   7:Src/ssd1306.c **** 
   8:Src/ssd1306.c **** // Screen object
   9:Src/ssd1306.c **** static SSD1306_t SSD1306;
  10:Src/ssd1306.c **** 
  11:Src/ssd1306.c **** 
  12:Src/ssd1306.c **** //
  13:Src/ssd1306.c **** //  Send a byte to the command register
  14:Src/ssd1306.c **** //
  15:Src/ssd1306.c **** static void ssd1306_WriteCommand(uint8_t command)
  16:Src/ssd1306.c **** {
  29              		.loc 1 16 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 16 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 8DF81700 		strb	r0, [sp, #23]
  17:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(&hi2c1,SSD1306_I2C_ADDR,0x00,1,&command,1,10);
ARM GAS  /tmp/ccq3ohDK.s 			page 2


  42              		.loc 1 17 2 is_stmt 1 view .LVU2
  43 0008 0A23     		movs	r3, #10
  44 000a 0293     		str	r3, [sp, #8]
  45 000c 0123     		movs	r3, #1
  46 000e 0193     		str	r3, [sp, #4]
  47 0010 0DF11702 		add	r2, sp, #23
  48 0014 0092     		str	r2, [sp]
  49 0016 0022     		movs	r2, #0
  50 0018 7821     		movs	r1, #120
  51 001a 0348     		ldr	r0, .L3
  52              	.LVL1:
  53              		.loc 1 17 2 is_stmt 0 view .LVU3
  54 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
  55              	.LVL2:
  18:Src/ssd1306.c **** }
  56              		.loc 1 18 1 view .LVU4
  57 0020 07B0     		add	sp, sp, #28
  58              	.LCFI2:
  59              		.cfi_def_cfa_offset 4
  60              		@ sp needed
  61 0022 5DF804FB 		ldr	pc, [sp], #4
  62              	.L4:
  63 0026 00BF     		.align	2
  64              	.L3:
  65 0028 00000000 		.word	hi2c1
  66              		.cfi_endproc
  67              	.LFE309:
  69              		.section	.text.ssd1306_Fill,"ax",%progbits
  70              		.align	1
  71              		.global	ssd1306_Fill
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	ssd1306_Fill:
  78              	.LVL3:
  79              	.LFB311:
  19:Src/ssd1306.c **** 
  20:Src/ssd1306.c **** 
  21:Src/ssd1306.c **** //
  22:Src/ssd1306.c **** //	Initialize the oled screen
  23:Src/ssd1306.c **** //
  24:Src/ssd1306.c **** uint8_t ssd1306_Init(void)
  25:Src/ssd1306.c **** {	
  26:Src/ssd1306.c **** 	// Wait for the screen to boot
  27:Src/ssd1306.c **** 	HAL_Delay(100);
  28:Src/ssd1306.c **** 	
  29:Src/ssd1306.c **** 	/* Init LCD */
  30:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAE); //display off
  31:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
  32:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
  33:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  34:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  35:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
  36:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
  37:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
  38:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
ARM GAS  /tmp/ccq3ohDK.s 			page 3


  39:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
  40:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
  41:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
  42:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
  43:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
  57:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
  58:Src/ssd1306.c **** 	
  59:Src/ssd1306.c **** 	// Clear screen
  60:Src/ssd1306.c **** 	ssd1306_Fill(Black);
  61:Src/ssd1306.c **** 	
  62:Src/ssd1306.c **** 	// Flush buffer to screen
  63:Src/ssd1306.c **** 	ssd1306_UpdateScreen();
  64:Src/ssd1306.c **** 	
  65:Src/ssd1306.c **** 	// Set default values for screen object
  66:Src/ssd1306.c **** 	SSD1306.CurrentX = 0;
  67:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
  68:Src/ssd1306.c **** 	
  69:Src/ssd1306.c **** 	SSD1306.Initialized = 1;
  70:Src/ssd1306.c **** 	
  71:Src/ssd1306.c **** 	return 1;
  72:Src/ssd1306.c **** }
  73:Src/ssd1306.c **** 
  74:Src/ssd1306.c **** //
  75:Src/ssd1306.c **** //  Fill the whole screen with the given color
  76:Src/ssd1306.c **** //
  77:Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) 
  78:Src/ssd1306.c **** {
  80              		.loc 1 78 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  79:Src/ssd1306.c **** 	/* Set memory */
  80:Src/ssd1306.c **** 	uint32_t i;
  85              		.loc 1 80 2 view .LVU6
  81:Src/ssd1306.c **** 
  82:Src/ssd1306.c **** 	for(i = 0; i < sizeof(SSD1306_Buffer); i++)
  86              		.loc 1 82 2 view .LVU7
  87              		.loc 1 82 8 is_stmt 0 view .LVU8
  88 0000 0023     		movs	r3, #0
  89              		.loc 1 82 2 view .LVU9
  90 0002 03E0     		b	.L6
  91              	.LVL4:
  92              	.L9:
ARM GAS  /tmp/ccq3ohDK.s 			page 4


  83:Src/ssd1306.c **** 	{
  84:Src/ssd1306.c **** 		SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
  93              		.loc 1 84 21 view .LVU10
  94 0004 FF21     		movs	r1, #255
  95              	.L7:
  96              		.loc 1 84 21 discriminator 4 view .LVU11
  97 0006 054A     		ldr	r2, .L11
  98 0008 D154     		strb	r1, [r2, r3]
  82:Src/ssd1306.c **** 	{
  99              		.loc 1 82 41 is_stmt 1 discriminator 4 view .LVU12
  82:Src/ssd1306.c **** 	{
 100              		.loc 1 82 42 is_stmt 0 discriminator 4 view .LVU13
 101 000a 0133     		adds	r3, r3, #1
 102              	.LVL5:
 103              	.L6:
  82:Src/ssd1306.c **** 	{
 104              		.loc 1 82 13 is_stmt 1 discriminator 2 view .LVU14
  82:Src/ssd1306.c **** 	{
 105              		.loc 1 82 2 is_stmt 0 discriminator 2 view .LVU15
 106 000c B3F5806F 		cmp	r3, #1024
 107 0010 03D2     		bcs	.L10
 108              		.loc 1 84 3 is_stmt 1 view .LVU16
 109              		.loc 1 84 21 is_stmt 0 view .LVU17
 110 0012 0028     		cmp	r0, #0
 111 0014 F6D1     		bne	.L9
 112 0016 0146     		mov	r1, r0
 113 0018 F5E7     		b	.L7
 114              	.L10:
  85:Src/ssd1306.c **** 	}
  86:Src/ssd1306.c **** }
 115              		.loc 1 86 1 view .LVU18
 116 001a 7047     		bx	lr
 117              	.L12:
 118              		.align	2
 119              	.L11:
 120 001c 00000000 		.word	.LANCHOR0
 121              		.cfi_endproc
 122              	.LFE311:
 124              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 125              		.align	1
 126              		.global	ssd1306_UpdateScreen
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	ssd1306_UpdateScreen:
 133              	.LFB312:
  87:Src/ssd1306.c **** 
  88:Src/ssd1306.c **** //
  89:Src/ssd1306.c **** //  Write the screenbuffer with changed to the screen
  90:Src/ssd1306.c **** //
  91:Src/ssd1306.c **** void ssd1306_UpdateScreen(void) 
  92:Src/ssd1306.c **** {
 134              		.loc 1 92 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccq3ohDK.s 			page 5


 138 0000 10B5     		push	{r4, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
 143 0002 84B0     		sub	sp, sp, #16
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 24
  93:Src/ssd1306.c **** 	uint8_t i;
 146              		.loc 1 93 2 view .LVU20
  94:Src/ssd1306.c **** 	
  95:Src/ssd1306.c **** 	for (i = 0; i < 8; i++) {
 147              		.loc 1 95 2 view .LVU21
 148              	.LVL6:
 149              		.loc 1 95 9 is_stmt 0 view .LVU22
 150 0004 0024     		movs	r4, #0
 151              		.loc 1 95 2 view .LVU23
 152 0006 1AE0     		b	.L14
 153              	.LVL7:
 154              	.L15:
  96:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 155              		.loc 1 96 3 is_stmt 1 discriminator 3 view .LVU24
 156 0008 A4F15000 		sub	r0, r4, #80
 157 000c C0B2     		uxtb	r0, r0
 158 000e FFF7FEFF 		bl	ssd1306_WriteCommand
 159              	.LVL8:
  97:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x00);
 160              		.loc 1 97 3 discriminator 3 view .LVU25
 161 0012 0020     		movs	r0, #0
 162 0014 FFF7FEFF 		bl	ssd1306_WriteCommand
 163              	.LVL9:
  98:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x10);
 164              		.loc 1 98 3 discriminator 3 view .LVU26
 165 0018 1020     		movs	r0, #16
 166 001a FFF7FEFF 		bl	ssd1306_WriteCommand
 167              	.LVL10:
  99:Src/ssd1306.c **** 
 100:Src/ssd1306.c **** 		HAL_I2C_Mem_Write(&hi2c1,SSD1306_I2C_ADDR,0x40,1,&SSD1306_Buffer[SSD1306_WIDTH * i],SSD1306_WIDTH
 168              		.loc 1 100 3 discriminator 3 view .LVU27
 169 001e 6423     		movs	r3, #100
 170 0020 0293     		str	r3, [sp, #8]
 171 0022 8023     		movs	r3, #128
 172 0024 0193     		str	r3, [sp, #4]
 173 0026 084B     		ldr	r3, .L17
 174 0028 03EBC413 		add	r3, r3, r4, lsl #7
 175 002c 0093     		str	r3, [sp]
 176 002e 0123     		movs	r3, #1
 177 0030 4022     		movs	r2, #64
 178 0032 7821     		movs	r1, #120
 179 0034 0548     		ldr	r0, .L17+4
 180 0036 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 181              	.LVL11:
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 182              		.loc 1 95 21 discriminator 3 view .LVU28
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 183              		.loc 1 95 22 is_stmt 0 discriminator 3 view .LVU29
 184 003a 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccq3ohDK.s 			page 6


 185              	.LVL12:
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 186              		.loc 1 95 22 discriminator 3 view .LVU30
 187 003c E4B2     		uxtb	r4, r4
 188              	.LVL13:
 189              	.L14:
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 190              		.loc 1 95 14 is_stmt 1 discriminator 1 view .LVU31
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 191              		.loc 1 95 2 is_stmt 0 discriminator 1 view .LVU32
 192 003e 072C     		cmp	r4, #7
 193 0040 E2D9     		bls	.L15
 101:Src/ssd1306.c **** 	}
 102:Src/ssd1306.c **** }
 194              		.loc 1 102 1 view .LVU33
 195 0042 04B0     		add	sp, sp, #16
 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 8
 198              		@ sp needed
 199 0044 10BD     		pop	{r4, pc}
 200              	.LVL14:
 201              	.L18:
 202              		.loc 1 102 1 view .LVU34
 203 0046 00BF     		.align	2
 204              	.L17:
 205 0048 00000000 		.word	.LANCHOR0
 206 004c 00000000 		.word	hi2c1
 207              		.cfi_endproc
 208              	.LFE312:
 210              		.section	.text.ssd1306_Init,"ax",%progbits
 211              		.align	1
 212              		.global	ssd1306_Init
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	ssd1306_Init:
 219              	.LFB310:
  25:Src/ssd1306.c **** 	// Wait for the screen to boot
 220              		.loc 1 25 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
  27:Src/ssd1306.c **** 	
 229              		.loc 1 27 2 view .LVU36
 230 0002 6420     		movs	r0, #100
 231 0004 FFF7FEFF 		bl	HAL_Delay
 232              	.LVL15:
  30:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
 233              		.loc 1 30 2 view .LVU37
 234 0008 AE20     		movs	r0, #174
 235 000a FFF7FEFF 		bl	ssd1306_WriteCommand
ARM GAS  /tmp/ccq3ohDK.s 			page 7


 236              	.LVL16:
  31:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
 237              		.loc 1 31 2 view .LVU38
 238 000e 2020     		movs	r0, #32
 239 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 240              	.LVL17:
  32:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 241              		.loc 1 32 2 view .LVU39
 242 0014 1020     		movs	r0, #16
 243 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 244              	.LVL18:
  33:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 245              		.loc 1 33 2 view .LVU40
 246 001a B020     		movs	r0, #176
 247 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 248              	.LVL19:
  34:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
 249              		.loc 1 34 2 view .LVU41
 250 0020 C820     		movs	r0, #200
 251 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 252              	.LVL20:
  35:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
 253              		.loc 1 35 2 view .LVU42
 254 0026 0020     		movs	r0, #0
 255 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 256              	.LVL21:
  36:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
 257              		.loc 1 36 2 view .LVU43
 258 002c 1020     		movs	r0, #16
 259 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 260              	.LVL22:
  37:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
 261              		.loc 1 37 2 view .LVU44
 262 0032 4020     		movs	r0, #64
 263 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 264              	.LVL23:
  38:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
 265              		.loc 1 38 2 view .LVU45
 266 0038 8120     		movs	r0, #129
 267 003a FFF7FEFF 		bl	ssd1306_WriteCommand
 268              	.LVL24:
  39:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
 269              		.loc 1 39 2 view .LVU46
 270 003e FF20     		movs	r0, #255
 271 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 272              	.LVL25:
  40:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
 273              		.loc 1 40 2 view .LVU47
 274 0044 A120     		movs	r0, #161
 275 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 276              	.LVL26:
  41:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
 277              		.loc 1 41 2 view .LVU48
 278 004a A620     		movs	r0, #166
 279 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 280              	.LVL27:
  42:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
ARM GAS  /tmp/ccq3ohDK.s 			page 8


 281              		.loc 1 42 2 view .LVU49
 282 0050 A820     		movs	r0, #168
 283 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 284              	.LVL28:
  43:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 285              		.loc 1 43 2 view .LVU50
 286 0056 3F20     		movs	r0, #63
 287 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 288              	.LVL29:
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
 289              		.loc 1 44 2 view .LVU51
 290 005c A420     		movs	r0, #164
 291 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 292              	.LVL30:
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
 293              		.loc 1 45 2 view .LVU52
 294 0062 D320     		movs	r0, #211
 295 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 296              	.LVL31:
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 297              		.loc 1 46 2 view .LVU53
 298 0068 0020     		movs	r0, #0
 299 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 300              	.LVL32:
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
 301              		.loc 1 47 2 view .LVU54
 302 006e D520     		movs	r0, #213
 303 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 304              	.LVL33:
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
 305              		.loc 1 48 2 view .LVU55
 306 0074 F020     		movs	r0, #240
 307 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 308              	.LVL34:
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
 309              		.loc 1 49 2 view .LVU56
 310 007a D920     		movs	r0, #217
 311 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 312              	.LVL35:
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
 313              		.loc 1 50 2 view .LVU57
 314 0080 2220     		movs	r0, #34
 315 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 316              	.LVL36:
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
 317              		.loc 1 51 2 view .LVU58
 318 0086 DA20     		movs	r0, #218
 319 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 320              	.LVL37:
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
 321              		.loc 1 52 2 view .LVU59
 322 008c 1220     		movs	r0, #18
 323 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 324              	.LVL38:
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 325              		.loc 1 53 2 view .LVU60
 326 0092 DB20     		movs	r0, #219
ARM GAS  /tmp/ccq3ohDK.s 			page 9


 327 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 328              	.LVL39:
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 329              		.loc 1 54 2 view .LVU61
 330 0098 2020     		movs	r0, #32
 331 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 332              	.LVL40:
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
 333              		.loc 1 55 2 view .LVU62
 334 009e 8D20     		movs	r0, #141
 335 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 336              	.LVL41:
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 337              		.loc 1 56 2 view .LVU63
 338 00a4 1420     		movs	r0, #20
 339 00a6 FFF7FEFF 		bl	ssd1306_WriteCommand
 340              	.LVL42:
  57:Src/ssd1306.c **** 	
 341              		.loc 1 57 2 view .LVU64
 342 00aa AF20     		movs	r0, #175
 343 00ac FFF7FEFF 		bl	ssd1306_WriteCommand
 344              	.LVL43:
  60:Src/ssd1306.c **** 	
 345              		.loc 1 60 2 view .LVU65
 346 00b0 0020     		movs	r0, #0
 347 00b2 FFF7FEFF 		bl	ssd1306_Fill
 348              	.LVL44:
  63:Src/ssd1306.c **** 	
 349              		.loc 1 63 2 view .LVU66
 350 00b6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 351              	.LVL45:
  66:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
 352              		.loc 1 66 2 view .LVU67
  66:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
 353              		.loc 1 66 19 is_stmt 0 view .LVU68
 354 00ba 034B     		ldr	r3, .L21
 355 00bc 0022     		movs	r2, #0
 356 00be 1A80     		strh	r2, [r3]	@ movhi
  67:Src/ssd1306.c **** 	
 357              		.loc 1 67 2 is_stmt 1 view .LVU69
  67:Src/ssd1306.c **** 	
 358              		.loc 1 67 19 is_stmt 0 view .LVU70
 359 00c0 5A80     		strh	r2, [r3, #2]	@ movhi
  69:Src/ssd1306.c **** 	
 360              		.loc 1 69 2 is_stmt 1 view .LVU71
  69:Src/ssd1306.c **** 	
 361              		.loc 1 69 22 is_stmt 0 view .LVU72
 362 00c2 0120     		movs	r0, #1
 363 00c4 5871     		strb	r0, [r3, #5]
  71:Src/ssd1306.c **** }
 364              		.loc 1 71 2 is_stmt 1 view .LVU73
  72:Src/ssd1306.c **** 
 365              		.loc 1 72 1 is_stmt 0 view .LVU74
 366 00c6 08BD     		pop	{r3, pc}
 367              	.L22:
 368              		.align	2
 369              	.L21:
ARM GAS  /tmp/ccq3ohDK.s 			page 10


 370 00c8 00000000 		.word	.LANCHOR1
 371              		.cfi_endproc
 372              	.LFE310:
 374              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 375              		.align	1
 376              		.global	ssd1306_DrawPixel
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu fpv4-sp-d16
 382              	ssd1306_DrawPixel:
 383              	.LVL46:
 384              	.LFB313:
 103:Src/ssd1306.c **** 
 104:Src/ssd1306.c **** //
 105:Src/ssd1306.c **** //	Draw one pixel in the screenbuffer
 106:Src/ssd1306.c **** //	X => X Coordinate
 107:Src/ssd1306.c **** //	Y => Y Coordinate
 108:Src/ssd1306.c **** //	color => Pixel color
 109:Src/ssd1306.c **** //
 110:Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color)
 111:Src/ssd1306.c **** {
 385              		.loc 1 111 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 112:Src/ssd1306.c **** 	if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) 
 390              		.loc 1 112 2 view .LVU76
 391              		.loc 1 112 5 is_stmt 0 view .LVU77
 392 0000 10F0800F 		tst	r0, #128
 393 0004 15D1     		bne	.L23
 394              		.loc 1 112 25 discriminator 1 view .LVU78
 395 0006 3F29     		cmp	r1, #63
 396 0008 13D8     		bhi	.L23
 113:Src/ssd1306.c **** 	{
 114:Src/ssd1306.c **** 		// Don't write outside the buffer
 115:Src/ssd1306.c **** 		return;
 116:Src/ssd1306.c **** 	}
 117:Src/ssd1306.c **** 	
 118:Src/ssd1306.c **** 	// Check if pixel should be inverted
 119:Src/ssd1306.c **** 	if (SSD1306.Inverted) 
 397              		.loc 1 119 2 is_stmt 1 view .LVU79
 398              		.loc 1 119 13 is_stmt 0 view .LVU80
 399 000a 104B     		ldr	r3, .L28
 400 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 401              		.loc 1 119 5 view .LVU81
 402 000e 13B1     		cbz	r3, .L25
 120:Src/ssd1306.c **** 	{
 121:Src/ssd1306.c **** 		color = (SSD1306_COLOR)!color;
 403              		.loc 1 121 3 is_stmt 1 view .LVU82
 404              		.loc 1 121 11 is_stmt 0 view .LVU83
 405 0010 B2FA82F2 		clz	r2, r2
 406              	.LVL47:
 407              		.loc 1 121 11 view .LVU84
 408 0014 5209     		lsrs	r2, r2, #5
 409              	.LVL48:
ARM GAS  /tmp/ccq3ohDK.s 			page 11


 410              	.L25:
 122:Src/ssd1306.c **** 	}
 123:Src/ssd1306.c **** 	
 124:Src/ssd1306.c **** 	// Draw in the right color
 125:Src/ssd1306.c **** 	if (color == White)
 411              		.loc 1 125 2 is_stmt 1 view .LVU85
 412              		.loc 1 125 5 is_stmt 0 view .LVU86
 413 0016 012A     		cmp	r2, #1
 414 0018 0CD0     		beq	.L27
 126:Src/ssd1306.c **** 	{
 127:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 128:Src/ssd1306.c **** 	} 
 129:Src/ssd1306.c **** 	else 
 130:Src/ssd1306.c **** 	{
 131:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 415              		.loc 1 131 3 is_stmt 1 view .LVU87
 416              		.loc 1 131 47 is_stmt 0 view .LVU88
 417 001a CB08     		lsrs	r3, r1, #3
 418 001c 00EBC310 		add	r0, r0, r3, lsl #7
 419              	.LVL49:
 420              		.loc 1 131 60 view .LVU89
 421 0020 01F00701 		and	r1, r1, #7
 422              	.LVL50:
 423              		.loc 1 131 54 view .LVU90
 424 0024 0123     		movs	r3, #1
 425 0026 8B40     		lsls	r3, r3, r1
 426              		.loc 1 131 47 view .LVU91
 427 0028 094A     		ldr	r2, .L28+4
 428              	.LVL51:
 429              		.loc 1 131 47 view .LVU92
 430 002a 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 431 002c 21EA0301 		bic	r1, r1, r3
 432 0030 1154     		strb	r1, [r2, r0]
 433              	.L23:
 132:Src/ssd1306.c **** 	}
 133:Src/ssd1306.c **** }
 434              		.loc 1 133 1 view .LVU93
 435 0032 7047     		bx	lr
 436              	.LVL52:
 437              	.L27:
 127:Src/ssd1306.c **** 	} 
 438              		.loc 1 127 3 is_stmt 1 view .LVU94
 127:Src/ssd1306.c **** 	} 
 439              		.loc 1 127 47 is_stmt 0 view .LVU95
 440 0034 CB08     		lsrs	r3, r1, #3
 441 0036 00EBC310 		add	r0, r0, r3, lsl #7
 442              	.LVL53:
 127:Src/ssd1306.c **** 	} 
 443              		.loc 1 127 58 view .LVU96
 444 003a 01F00701 		and	r1, r1, #7
 445              	.LVL54:
 127:Src/ssd1306.c **** 	} 
 446              		.loc 1 127 52 view .LVU97
 447 003e 0123     		movs	r3, #1
 448 0040 8B40     		lsls	r3, r3, r1
 127:Src/ssd1306.c **** 	} 
 449              		.loc 1 127 47 view .LVU98
ARM GAS  /tmp/ccq3ohDK.s 			page 12


 450 0042 034A     		ldr	r2, .L28+4
 451              	.LVL55:
 127:Src/ssd1306.c **** 	} 
 452              		.loc 1 127 47 view .LVU99
 453 0044 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 454 0046 1943     		orrs	r1, r1, r3
 455 0048 1154     		strb	r1, [r2, r0]
 456 004a 7047     		bx	lr
 457              	.L29:
 458              		.align	2
 459              	.L28:
 460 004c 00000000 		.word	.LANCHOR1
 461 0050 00000000 		.word	.LANCHOR0
 462              		.cfi_endproc
 463              	.LFE313:
 465              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 466              		.align	1
 467              		.global	ssd1306_WriteChar
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	ssd1306_WriteChar:
 474              	.LVL56:
 475              	.LFB314:
 134:Src/ssd1306.c **** 
 135:Src/ssd1306.c **** //
 136:Src/ssd1306.c **** //  Draw 1 char to the screen buffer
 137:Src/ssd1306.c **** //	ch 		=> char om weg te schrijven
 138:Src/ssd1306.c **** //	Font 	=> Font waarmee we gaan schrijven
 139:Src/ssd1306.c **** //	color 	=> Black or White
 140:Src/ssd1306.c **** //
 141:Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color)
 142:Src/ssd1306.c **** {
 476              		.loc 1 142 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 8
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		.loc 1 142 1 is_stmt 0 view .LVU101
 481 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 482              	.LCFI7:
 483              		.cfi_def_cfa_offset 36
 484              		.cfi_offset 4, -36
 485              		.cfi_offset 5, -32
 486              		.cfi_offset 6, -28
 487              		.cfi_offset 7, -24
 488              		.cfi_offset 8, -20
 489              		.cfi_offset 9, -16
 490              		.cfi_offset 10, -12
 491              		.cfi_offset 11, -8
 492              		.cfi_offset 14, -4
 493 0004 83B0     		sub	sp, sp, #12
 494              	.LCFI8:
 495              		.cfi_def_cfa_offset 48
 496 0006 8146     		mov	r9, r0
 497 0008 02A8     		add	r0, sp, #8
 498              	.LVL57:
ARM GAS  /tmp/ccq3ohDK.s 			page 13


 499              		.loc 1 142 1 view .LVU102
 500 000a 00E90600 		stmdb	r0, {r1, r2}
 501 000e 9846     		mov	r8, r3
 143:Src/ssd1306.c **** 	uint32_t i, b, j;
 502              		.loc 1 143 2 is_stmt 1 view .LVU103
 144:Src/ssd1306.c **** 	
 145:Src/ssd1306.c **** 	// Check remaining space on current line
 146:Src/ssd1306.c **** 	if (SSD1306_WIDTH <= (SSD1306.CurrentX + Font.FontWidth) ||
 503              		.loc 1 146 2 view .LVU104
 504              		.loc 1 146 31 is_stmt 0 view .LVU105
 505 0010 234B     		ldr	r3, .L43
 506              	.LVL58:
 507              		.loc 1 146 31 view .LVU106
 508 0012 1B88     		ldrh	r3, [r3]
 509              		.loc 1 146 47 view .LVU107
 510 0014 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 511              		.loc 1 146 41 view .LVU108
 512 0018 3344     		add	r3, r3, r6
 513              		.loc 1 146 5 view .LVU109
 514 001a 7F2B     		cmp	r3, #127
 515 001c 3CDC     		bgt	.L38
 147:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 516              		.loc 1 147 29 discriminator 1 view .LVU110
 517 001e 204B     		ldr	r3, .L43
 518 0020 5B88     		ldrh	r3, [r3, #2]
 519              		.loc 1 147 45 discriminator 1 view .LVU111
 520 0022 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 521 0026 D346     		mov	fp, r10
 522              		.loc 1 147 39 discriminator 1 view .LVU112
 523 0028 5344     		add	r3, r3, r10
 146:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 524              		.loc 1 146 59 discriminator 1 view .LVU113
 525 002a 3F2B     		cmp	r3, #63
 526 002c 36DC     		bgt	.L39
 148:Src/ssd1306.c **** 	{
 149:Src/ssd1306.c **** 		// Not enough space on current line
 150:Src/ssd1306.c **** 		return 0;
 151:Src/ssd1306.c **** 	}
 152:Src/ssd1306.c **** 	
 153:Src/ssd1306.c **** 	// Use the font to write
 154:Src/ssd1306.c **** 	for (i = 0; i < Font.FontHeight; i++)
 527              		.loc 1 154 9 view .LVU114
 528 002e 0025     		movs	r5, #0
 529 0030 1FE0     		b	.L32
 530              	.LVL59:
 531              	.L34:
 155:Src/ssd1306.c **** 	{
 156:Src/ssd1306.c **** 		b = Font.data[(ch - 32) * Font.FontHeight + i];
 157:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 158:Src/ssd1306.c **** 		{
 159:Src/ssd1306.c **** 			if ((b << j) & 0x8000) 
 160:Src/ssd1306.c **** 			{
 161:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 162:Src/ssd1306.c **** 			} 
 163:Src/ssd1306.c **** 			else 
 164:Src/ssd1306.c **** 			{
 165:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
ARM GAS  /tmp/ccq3ohDK.s 			page 14


 532              		.loc 1 165 5 is_stmt 1 view .LVU115
 533              		.loc 1 165 30 is_stmt 0 view .LVU116
 534 0032 1B4B     		ldr	r3, .L43
 535 0034 1888     		ldrh	r0, [r3]
 536              		.loc 1 165 53 view .LVU117
 537 0036 5988     		ldrh	r1, [r3, #2]
 538              		.loc 1 165 5 view .LVU118
 539 0038 2944     		add	r1, r1, r5
 540 003a 2044     		add	r0, r0, r4
 541 003c B8FA88F2 		clz	r2, r8
 542 0040 5209     		lsrs	r2, r2, #5
 543 0042 C9B2     		uxtb	r1, r1
 544 0044 C0B2     		uxtb	r0, r0
 545 0046 FFF7FEFF 		bl	ssd1306_DrawPixel
 546              	.LVL60:
 547              	.L35:
 157:Src/ssd1306.c **** 		{
 548              		.loc 1 157 35 is_stmt 1 discriminator 2 view .LVU119
 157:Src/ssd1306.c **** 		{
 549              		.loc 1 157 36 is_stmt 0 discriminator 2 view .LVU120
 550 004a 0134     		adds	r4, r4, #1
 551              	.LVL61:
 552              	.L33:
 157:Src/ssd1306.c **** 		{
 553              		.loc 1 157 15 is_stmt 1 discriminator 1 view .LVU121
 157:Src/ssd1306.c **** 		{
 554              		.loc 1 157 3 is_stmt 0 discriminator 1 view .LVU122
 555 004c A642     		cmp	r6, r4
 556 004e 0FD9     		bls	.L41
 159:Src/ssd1306.c **** 			{
 557              		.loc 1 159 4 is_stmt 1 view .LVU123
 159:Src/ssd1306.c **** 			{
 558              		.loc 1 159 11 is_stmt 0 view .LVU124
 559 0050 07FA04F3 		lsl	r3, r7, r4
 159:Src/ssd1306.c **** 			{
 560              		.loc 1 159 7 view .LVU125
 561 0054 13F4004F 		tst	r3, #32768
 562 0058 EBD0     		beq	.L34
 161:Src/ssd1306.c **** 			} 
 563              		.loc 1 161 5 is_stmt 1 view .LVU126
 161:Src/ssd1306.c **** 			} 
 564              		.loc 1 161 30 is_stmt 0 view .LVU127
 565 005a 114B     		ldr	r3, .L43
 566 005c 1888     		ldrh	r0, [r3]
 161:Src/ssd1306.c **** 			} 
 567              		.loc 1 161 53 view .LVU128
 568 005e 5988     		ldrh	r1, [r3, #2]
 161:Src/ssd1306.c **** 			} 
 569              		.loc 1 161 5 view .LVU129
 570 0060 2944     		add	r1, r1, r5
 571 0062 2044     		add	r0, r0, r4
 572 0064 4246     		mov	r2, r8
 573 0066 C9B2     		uxtb	r1, r1
 574 0068 C0B2     		uxtb	r0, r0
 575 006a FFF7FEFF 		bl	ssd1306_DrawPixel
 576              	.LVL62:
 577 006e ECE7     		b	.L35
ARM GAS  /tmp/ccq3ohDK.s 			page 15


 578              	.L41:
 154:Src/ssd1306.c **** 	{
 579              		.loc 1 154 35 is_stmt 1 discriminator 2 view .LVU130
 154:Src/ssd1306.c **** 	{
 580              		.loc 1 154 36 is_stmt 0 discriminator 2 view .LVU131
 581 0070 0135     		adds	r5, r5, #1
 582              	.LVL63:
 583              	.L32:
 154:Src/ssd1306.c **** 	{
 584              		.loc 1 154 14 is_stmt 1 discriminator 1 view .LVU132
 154:Src/ssd1306.c **** 	{
 585              		.loc 1 154 2 is_stmt 0 discriminator 1 view .LVU133
 586 0072 AA45     		cmp	r10, r5
 587 0074 08D9     		bls	.L42
 156:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 588              		.loc 1 156 3 is_stmt 1 view .LVU134
 156:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 589              		.loc 1 156 21 is_stmt 0 view .LVU135
 590 0076 A9F12003 		sub	r3, r9, #32
 156:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 591              		.loc 1 156 45 view .LVU136
 592 007a 03FB0B53 		mla	r3, r3, fp, r5
 156:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 593              		.loc 1 156 16 view .LVU137
 594 007e 019A     		ldr	r2, [sp, #4]
 595 0080 32F81370 		ldrh	r7, [r2, r3, lsl #1]
 596              	.LVL64:
 157:Src/ssd1306.c **** 		{
 597              		.loc 1 157 3 is_stmt 1 view .LVU138
 157:Src/ssd1306.c **** 		{
 598              		.loc 1 157 10 is_stmt 0 view .LVU139
 599 0084 0024     		movs	r4, #0
 157:Src/ssd1306.c **** 		{
 600              		.loc 1 157 3 view .LVU140
 601 0086 E1E7     		b	.L33
 602              	.LVL65:
 603              	.L42:
 166:Src/ssd1306.c **** 			}
 167:Src/ssd1306.c **** 		}
 168:Src/ssd1306.c **** 	}
 169:Src/ssd1306.c **** 	
 170:Src/ssd1306.c **** 	// The current space is now taken
 171:Src/ssd1306.c **** 	SSD1306.CurrentX += Font.FontWidth;
 604              		.loc 1 171 2 is_stmt 1 view .LVU141
 605              		.loc 1 171 19 is_stmt 0 view .LVU142
 606 0088 054B     		ldr	r3, .L43
 607 008a 1A88     		ldrh	r2, [r3]
 608 008c 1644     		add	r6, r6, r2
 609 008e 1E80     		strh	r6, [r3]	@ movhi
 172:Src/ssd1306.c **** 	
 173:Src/ssd1306.c **** 	// Return written char for validation
 174:Src/ssd1306.c **** 	return ch;
 610              		.loc 1 174 2 is_stmt 1 view .LVU143
 611              		.loc 1 174 9 is_stmt 0 view .LVU144
 612 0090 4846     		mov	r0, r9
 613              	.LVL66:
 614              	.L31:
ARM GAS  /tmp/ccq3ohDK.s 			page 16


 175:Src/ssd1306.c **** }
 615              		.loc 1 175 1 view .LVU145
 616 0092 03B0     		add	sp, sp, #12
 617              	.LCFI9:
 618              		.cfi_remember_state
 619              		.cfi_def_cfa_offset 36
 620              		@ sp needed
 621 0094 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 622              	.L38:
 623              	.LCFI10:
 624              		.cfi_restore_state
 150:Src/ssd1306.c **** 	}
 625              		.loc 1 150 10 view .LVU146
 626 0098 0020     		movs	r0, #0
 627 009a FAE7     		b	.L31
 628              	.L39:
 629 009c 0020     		movs	r0, #0
 630 009e F8E7     		b	.L31
 631              	.L44:
 632              		.align	2
 633              	.L43:
 634 00a0 00000000 		.word	.LANCHOR1
 635              		.cfi_endproc
 636              	.LFE314:
 638              		.section	.text.ssd1306_WriteString,"ax",%progbits
 639              		.align	1
 640              		.global	ssd1306_WriteString
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv4-sp-d16
 646              	ssd1306_WriteString:
 647              	.LVL67:
 648              	.LFB315:
 176:Src/ssd1306.c **** 
 177:Src/ssd1306.c **** //
 178:Src/ssd1306.c **** //  Write full string to screenbuffer
 179:Src/ssd1306.c **** //
 180:Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color)
 181:Src/ssd1306.c **** {
 649              		.loc 1 181 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 181 1 is_stmt 0 view .LVU148
 654 0000 30B5     		push	{r4, r5, lr}
 655              	.LCFI11:
 656              		.cfi_def_cfa_offset 12
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              	.LCFI12:
 662              		.cfi_def_cfa_offset 24
 663 0004 0446     		mov	r4, r0
 664 0006 02A8     		add	r0, sp, #8
 665              	.LVL68:
ARM GAS  /tmp/ccq3ohDK.s 			page 17


 666              		.loc 1 181 1 view .LVU149
 667 0008 00E90600 		stmdb	r0, {r1, r2}
 668 000c 1D46     		mov	r5, r3
 182:Src/ssd1306.c **** 	// Write until null-byte
 183:Src/ssd1306.c **** 	while (*str) 
 669              		.loc 1 183 2 is_stmt 1 view .LVU150
 670              	.LVL69:
 671              	.L46:
 672              		.loc 1 183 8 view .LVU151
 673              		.loc 1 183 9 is_stmt 0 view .LVU152
 674 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 675              		.loc 1 183 8 view .LVU153
 676 0010 58B1     		cbz	r0, .L47
 184:Src/ssd1306.c **** 	{
 185:Src/ssd1306.c **** 		if (ssd1306_WriteChar(*str, Font, color) != *str)
 677              		.loc 1 185 3 is_stmt 1 view .LVU154
 678              		.loc 1 185 7 is_stmt 0 view .LVU155
 679 0012 2B46     		mov	r3, r5
 680 0014 02AA     		add	r2, sp, #8
 681 0016 12E90600 		ldmdb	r2, {r1, r2}
 682 001a FFF7FEFF 		bl	ssd1306_WriteChar
 683              	.LVL70:
 684 001e 0246     		mov	r2, r0
 685              		.loc 1 185 47 view .LVU156
 686 0020 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 687              		.loc 1 185 6 view .LVU157
 688 0022 8242     		cmp	r2, r0
 689 0024 01D1     		bne	.L47
 186:Src/ssd1306.c **** 		{
 187:Src/ssd1306.c **** 			// Char could not be written
 188:Src/ssd1306.c **** 			return *str;
 189:Src/ssd1306.c **** 		}
 190:Src/ssd1306.c **** 		
 191:Src/ssd1306.c **** 		// Next char
 192:Src/ssd1306.c **** 		str++;
 690              		.loc 1 192 3 is_stmt 1 view .LVU158
 691              		.loc 1 192 6 is_stmt 0 view .LVU159
 692 0026 0134     		adds	r4, r4, #1
 693              	.LVL71:
 694              		.loc 1 192 6 view .LVU160
 695 0028 F1E7     		b	.L46
 696              	.L47:
 193:Src/ssd1306.c **** 	}
 194:Src/ssd1306.c **** 	
 195:Src/ssd1306.c **** 	// Everything ok
 196:Src/ssd1306.c **** 	return *str;
 197:Src/ssd1306.c **** }
 697              		.loc 1 197 1 view .LVU161
 698 002a 03B0     		add	sp, sp, #12
 699              	.LCFI13:
 700              		.cfi_def_cfa_offset 12
 701              		@ sp needed
 702 002c 30BD     		pop	{r4, r5, pc}
 703              		.loc 1 197 1 view .LVU162
 704              		.cfi_endproc
 705              	.LFE315:
 707              		.section	.text.ssd1306_SetCursor,"ax",%progbits
ARM GAS  /tmp/ccq3ohDK.s 			page 18


 708              		.align	1
 709              		.global	ssd1306_SetCursor
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu fpv4-sp-d16
 715              	ssd1306_SetCursor:
 716              	.LVL72:
 717              	.LFB316:
 198:Src/ssd1306.c **** 
 199:Src/ssd1306.c **** //
 200:Src/ssd1306.c **** //	Position the cursor
 201:Src/ssd1306.c **** //
 202:Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) 
 203:Src/ssd1306.c **** {
 718              		.loc 1 203 1 is_stmt 1 view -0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 204:Src/ssd1306.c **** 	SSD1306.CurrentX = x;
 723              		.loc 1 204 2 view .LVU164
 724              		.loc 1 204 19 is_stmt 0 view .LVU165
 725 0000 014B     		ldr	r3, .L51
 726 0002 1880     		strh	r0, [r3]	@ movhi
 205:Src/ssd1306.c **** 	SSD1306.CurrentY = y;
 727              		.loc 1 205 2 is_stmt 1 view .LVU166
 728              		.loc 1 205 19 is_stmt 0 view .LVU167
 729 0004 5980     		strh	r1, [r3, #2]	@ movhi
 206:Src/ssd1306.c **** }
 730              		.loc 1 206 1 view .LVU168
 731 0006 7047     		bx	lr
 732              	.L52:
 733              		.align	2
 734              	.L51:
 735 0008 00000000 		.word	.LANCHOR1
 736              		.cfi_endproc
 737              	.LFE316:
 739              		.section	.bss.SSD1306,"aw",%nobits
 740              		.align	2
 741              		.set	.LANCHOR1,. + 0
 744              	SSD1306:
 745 0000 00000000 		.space	6
 745      0000
 746              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 747              		.align	2
 748              		.set	.LANCHOR0,. + 0
 751              	SSD1306_Buffer:
 752 0000 00000000 		.space	1024
 752      00000000 
 752      00000000 
 752      00000000 
 752      00000000 
 753              		.text
 754              	.Letext0:
 755              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 756              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccq3ohDK.s 			page 19


 757              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 758              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 759              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 760              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 761              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 762              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 763              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 764              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 765              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 766              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 767              		.file 14 "Inc/fonts.h"
 768              		.file 15 "Inc/ssd1306.h"
 769              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccq3ohDK.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
     /tmp/ccq3ohDK.s:18     .text.ssd1306_WriteCommand:0000000000000000 $t
     /tmp/ccq3ohDK.s:25     .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
     /tmp/ccq3ohDK.s:65     .text.ssd1306_WriteCommand:0000000000000028 $d
     /tmp/ccq3ohDK.s:70     .text.ssd1306_Fill:0000000000000000 $t
     /tmp/ccq3ohDK.s:77     .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
     /tmp/ccq3ohDK.s:120    .text.ssd1306_Fill:000000000000001c $d
     /tmp/ccq3ohDK.s:125    .text.ssd1306_UpdateScreen:0000000000000000 $t
     /tmp/ccq3ohDK.s:132    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
     /tmp/ccq3ohDK.s:205    .text.ssd1306_UpdateScreen:0000000000000048 $d
     /tmp/ccq3ohDK.s:211    .text.ssd1306_Init:0000000000000000 $t
     /tmp/ccq3ohDK.s:218    .text.ssd1306_Init:0000000000000000 ssd1306_Init
     /tmp/ccq3ohDK.s:370    .text.ssd1306_Init:00000000000000c8 $d
     /tmp/ccq3ohDK.s:375    .text.ssd1306_DrawPixel:0000000000000000 $t
     /tmp/ccq3ohDK.s:382    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
     /tmp/ccq3ohDK.s:460    .text.ssd1306_DrawPixel:000000000000004c $d
     /tmp/ccq3ohDK.s:466    .text.ssd1306_WriteChar:0000000000000000 $t
     /tmp/ccq3ohDK.s:473    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
     /tmp/ccq3ohDK.s:634    .text.ssd1306_WriteChar:00000000000000a0 $d
     /tmp/ccq3ohDK.s:639    .text.ssd1306_WriteString:0000000000000000 $t
     /tmp/ccq3ohDK.s:646    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
     /tmp/ccq3ohDK.s:708    .text.ssd1306_SetCursor:0000000000000000 $t
     /tmp/ccq3ohDK.s:715    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
     /tmp/ccq3ohDK.s:735    .text.ssd1306_SetCursor:0000000000000008 $d
     /tmp/ccq3ohDK.s:740    .bss.SSD1306:0000000000000000 $d
     /tmp/ccq3ohDK.s:744    .bss.SSD1306:0000000000000000 SSD1306
     /tmp/ccq3ohDK.s:747    .bss.SSD1306_Buffer:0000000000000000 $d
     /tmp/ccq3ohDK.s:751    .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
