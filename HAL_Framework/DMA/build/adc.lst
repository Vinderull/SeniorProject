ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"adc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	2
  22              		.global	MX_ADC1_Init
  23              		.thumb
  24              		.thumb_func
  26              	MX_ADC1_Init:
  27              	.LFB306:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 2


  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** 
  48:Src/adc.c     **** /* USER CODE END 0 */
  49:Src/adc.c     **** 
  50:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  51:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  52:Src/adc.c     **** 
  53:Src/adc.c     **** /* ADC1 init function */
  54:Src/adc.c     **** void MX_ADC1_Init(void)
  55:Src/adc.c     **** {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  56:Src/adc.c     ****   ADC_MultiModeTypeDef multimode;
  57:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  58:Src/adc.c     **** 
  59:Src/adc.c     ****     /**Common config
  60:Src/adc.c     ****     */
  61:Src/adc.c     ****   hadc1.Instance = ADC1;
  40              		.loc 1 61 0
  41 0004 2448     		ldr	r0, .L6
  42 0006 254B     		ldr	r3, .L6+4
  43 0008 0360     		str	r3, [r0]
  62:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  44              		.loc 1 62 0
  45 000a 4FF40033 		mov	r3, #131072
  46 000e 4360     		str	r3, [r0, #4]
  63:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  47              		.loc 1 63 0
  48 0010 0023     		movs	r3, #0
  49 0012 8360     		str	r3, [r0, #8]
  64:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_LEFT;
  50              		.loc 1 64 0
  51 0014 2022     		movs	r2, #32
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 3


  52 0016 C260     		str	r2, [r0, #12]
  65:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  53              		.loc 1 65 0
  54 0018 0361     		str	r3, [r0, #16]
  66:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  55              		.loc 1 66 0
  56 001a 0422     		movs	r2, #4
  57 001c 4261     		str	r2, [r0, #20]
  67:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  58              		.loc 1 67 0
  59 001e 8361     		str	r3, [r0, #24]
  68:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  60              		.loc 1 68 0
  61 0020 C361     		str	r3, [r0, #28]
  69:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  62              		.loc 1 69 0
  63 0022 0122     		movs	r2, #1
  64 0024 0262     		str	r2, [r0, #32]
  70:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  65              		.loc 1 70 0
  66 0026 4362     		str	r3, [r0, #36]
  71:Src/adc.c     ****   hadc1.Init.NbrOfDiscConversion = 1;
  67              		.loc 1 71 0
  68 0028 8262     		str	r2, [r0, #40]
  72:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = LL_ADC_REG_TRIG_EXT_TIM4_TRGO;
  69              		.loc 1 72 0
  70 002a 4FF4E061 		mov	r1, #1792
  71 002e C162     		str	r1, [r0, #44]
  73:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  72              		.loc 1 73 0
  73 0030 4FF48061 		mov	r1, #1024
  74 0034 0163     		str	r1, [r0, #48]
  74:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  75              		.loc 1 74 0
  76 0036 4263     		str	r2, [r0, #52]
  75:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  77              		.loc 1 75 0
  78 0038 4FF48052 		mov	r2, #4096
  79 003c 8263     		str	r2, [r0, #56]
  76:Src/adc.c     ****   hadc1.Init.OversamplingMode = DISABLE;
  80              		.loc 1 76 0
  81 003e C363     		str	r3, [r0, #60]
  77:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  82              		.loc 1 77 0
  83 0040 FFF7FEFF 		bl	HAL_ADC_Init
  84              	.LVL0:
  85 0044 18B1     		cbz	r0, .L2
  78:Src/adc.c     ****   {
  79:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  86              		.loc 1 79 0
  87 0046 1648     		ldr	r0, .L6+8
  88 0048 4F21     		movs	r1, #79
  89 004a FFF7FEFF 		bl	_Error_Handler
  90              	.LVL1:
  91              	.L2:
  80:Src/adc.c     ****   }
  81:Src/adc.c     **** 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 4


  82:Src/adc.c     ****     /**Configure the ADC multi-mode
  83:Src/adc.c     ****     */
  84:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
  92              		.loc 1 84 0
  93 004e 0AA9     		add	r1, sp, #40
  94 0050 0023     		movs	r3, #0
  95 0052 41F80C3D 		str	r3, [r1, #-12]!
  85:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
  96              		.loc 1 85 0
  97 0056 1048     		ldr	r0, .L6
  98 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
  99              	.LVL2:
 100 005c 18B1     		cbz	r0, .L3
  86:Src/adc.c     ****   {
  87:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 101              		.loc 1 87 0
 102 005e 1048     		ldr	r0, .L6+8
 103 0060 5721     		movs	r1, #87
 104 0062 FFF7FEFF 		bl	_Error_Handler
 105              	.LVL3:
 106              	.L3:
  88:Src/adc.c     ****   }
  89:Src/adc.c     **** 
  90:Src/adc.c     ****     /**Configure Regular Channel
  91:Src/adc.c     ****     */
  92:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_6;
 107              		.loc 1 92 0
 108 0066 0F4B     		ldr	r3, .L6+12
 109 0068 0193     		str	r3, [sp, #4]
  93:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 110              		.loc 1 93 0
 111 006a 0623     		movs	r3, #6
 112 006c 0293     		str	r3, [sp, #8]
  94:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_92CYCLES_5;
 113              		.loc 1 94 0
 114 006e 0523     		movs	r3, #5
 115 0070 0393     		str	r3, [sp, #12]
  95:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 116              		.loc 1 95 0
 117 0072 7F23     		movs	r3, #127
 118 0074 0493     		str	r3, [sp, #16]
  96:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 119              		.loc 1 96 0
 120 0076 0423     		movs	r3, #4
 121 0078 0593     		str	r3, [sp, #20]
  97:Src/adc.c     ****   sConfig.Offset = 0;
 122              		.loc 1 97 0
 123 007a 0023     		movs	r3, #0
 124 007c 0693     		str	r3, [sp, #24]
  98:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 125              		.loc 1 98 0
 126 007e 0648     		ldr	r0, .L6
 127 0080 01A9     		add	r1, sp, #4
 128 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 129              	.LVL4:
 130 0086 18B1     		cbz	r0, .L1
  99:Src/adc.c     ****   {
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 5


 100:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 131              		.loc 1 100 0
 132 0088 0548     		ldr	r0, .L6+8
 133 008a 6421     		movs	r1, #100
 134 008c FFF7FEFF 		bl	_Error_Handler
 135              	.LVL5:
 136              	.L1:
 101:Src/adc.c     ****   }
 102:Src/adc.c     **** 
 103:Src/adc.c     **** }
 137              		.loc 1 103 0
 138 0090 0BB0     		add	sp, sp, #44
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 4
 141              		@ sp needed
 142 0092 5DF804FB 		ldr	pc, [sp], #4
 143              	.L7:
 144 0096 00BF     		.align	2
 145              	.L6:
 146 0098 00000000 		.word	hadc1
 147 009c 00000450 		.word	1342439424
 148 00a0 00000000 		.word	.LC0
 149 00a4 40002019 		.word	421527616
 150              		.cfi_endproc
 151              	.LFE306:
 153              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 154              		.align	2
 155              		.global	HAL_ADC_MspInit
 156              		.thumb
 157              		.thumb_func
 159              	HAL_ADC_MspInit:
 160              	.LFB307:
 104:Src/adc.c     **** 
 105:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 106:Src/adc.c     **** {
 161              		.loc 1 106 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 24
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              	.LVL6:
 107:Src/adc.c     **** 
 108:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 109:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 166              		.loc 1 109 0
 167 0000 0268     		ldr	r2, [r0]
 168 0002 274B     		ldr	r3, .L13
 169 0004 9A42     		cmp	r2, r3
 170 0006 49D1     		bne	.L12
 106:Src/adc.c     **** 
 171              		.loc 1 106 0
 172 0008 30B5     		push	{r4, r5, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 12
 175              		.cfi_offset 4, -12
 176              		.cfi_offset 5, -8
 177              		.cfi_offset 14, -4
 178 000a 87B0     		sub	sp, sp, #28
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 6


 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 40
 181 000c 0446     		mov	r4, r0
 182              	.LBB2:
 110:Src/adc.c     ****   {
 111:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 112:Src/adc.c     **** 
 113:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 114:Src/adc.c     ****     /* ADC1 clock enable */
 115:Src/adc.c     ****     __HAL_RCC_ADC_CLK_ENABLE();
 183              		.loc 1 115 0
 184 000e 03F17043 		add	r3, r3, #-268435456
 185 0012 A3F5F833 		sub	r3, r3, #126976
 186 0016 DA6C     		ldr	r2, [r3, #76]
 187 0018 42F40052 		orr	r2, r2, #8192
 188 001c DA64     		str	r2, [r3, #76]
 189 001e DB6C     		ldr	r3, [r3, #76]
 190 0020 03F40053 		and	r3, r3, #8192
 191 0024 0093     		str	r3, [sp]
 192 0026 009B     		ldr	r3, [sp]
 193              	.LBE2:
 116:Src/adc.c     **** 
 117:Src/adc.c     ****     /**ADC1 GPIO Configuration
 118:Src/adc.c     ****     PA1     ------> ADC1_IN6
 119:Src/adc.c     ****     */
 120:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 194              		.loc 1 120 0
 195 0028 0223     		movs	r3, #2
 196 002a 0193     		str	r3, [sp, #4]
 121:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 197              		.loc 1 121 0
 198 002c 0B23     		movs	r3, #11
 199 002e 0293     		str	r3, [sp, #8]
 122:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 200              		.loc 1 122 0
 201 0030 0025     		movs	r5, #0
 202 0032 0395     		str	r5, [sp, #12]
 123:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 203              		.loc 1 123 0
 204 0034 4FF09040 		mov	r0, #1207959552
 205              	.LVL7:
 206 0038 01A9     		add	r1, sp, #4
 207 003a FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL8:
 124:Src/adc.c     **** 
 125:Src/adc.c     ****     /* ADC1 DMA Init */
 126:Src/adc.c     ****     /* ADC1 Init */
 127:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 209              		.loc 1 127 0
 210 003e 1948     		ldr	r0, .L13+4
 211 0040 194B     		ldr	r3, .L13+8
 212 0042 0360     		str	r3, [r0]
 128:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_0;
 213              		.loc 1 128 0
 214 0044 4560     		str	r5, [r0, #4]
 129:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 215              		.loc 1 129 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 7


 216 0046 8560     		str	r5, [r0, #8]
 130:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 217              		.loc 1 130 0
 218 0048 C560     		str	r5, [r0, #12]
 131:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 219              		.loc 1 131 0
 220 004a 8023     		movs	r3, #128
 221 004c 0361     		str	r3, [r0, #16]
 132:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 222              		.loc 1 132 0
 223 004e 4FF40073 		mov	r3, #512
 224 0052 4361     		str	r3, [r0, #20]
 133:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 225              		.loc 1 133 0
 226 0054 4FF40063 		mov	r3, #2048
 227 0058 8361     		str	r3, [r0, #24]
 134:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 228              		.loc 1 134 0
 229 005a 2023     		movs	r3, #32
 230 005c C361     		str	r3, [r0, #28]
 135:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 231              		.loc 1 135 0
 232 005e 4FF40053 		mov	r3, #8192
 233 0062 0362     		str	r3, [r0, #32]
 136:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 234              		.loc 1 136 0
 235 0064 FFF7FEFF 		bl	HAL_DMA_Init
 236              	.LVL9:
 237 0068 18B1     		cbz	r0, .L10
 137:Src/adc.c     ****     {
 138:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 238              		.loc 1 138 0
 239 006a 1048     		ldr	r0, .L13+12
 240 006c 8A21     		movs	r1, #138
 241 006e FFF7FEFF 		bl	_Error_Handler
 242              	.LVL10:
 243              	.L10:
 139:Src/adc.c     ****     }
 140:Src/adc.c     **** 
 141:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 244              		.loc 1 141 0
 245 0072 0C4B     		ldr	r3, .L13+4
 246 0074 2365     		str	r3, [r4, #80]
 247 0076 9C62     		str	r4, [r3, #40]
 142:Src/adc.c     **** 
 143:Src/adc.c     **** 
 144:Src/adc.c     ****     HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 248              		.loc 1 144 0
 249 0078 0B20     		movs	r0, #11
 250 007a 0021     		movs	r1, #0
 251 007c 0A46     		mov	r2, r1
 252 007e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 253              	.LVL11:
 145:Src/adc.c     ****     HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 254              		.loc 1 145 0
 255 0082 0B20     		movs	r0, #11
 256 0084 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 8


 257              	.LVL12:
 146:Src/adc.c     **** 
 147:Src/adc.c     ****     /* ADC1 interrupt Init */
 148:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 258              		.loc 1 148 0
 259 0088 1220     		movs	r0, #18
 260 008a 0021     		movs	r1, #0
 261 008c 0A46     		mov	r2, r1
 262 008e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 263              	.LVL13:
 149:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 264              		.loc 1 149 0
 265 0092 1220     		movs	r0, #18
 266 0094 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 267              	.LVL14:
 150:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 151:Src/adc.c     **** 
 152:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 153:Src/adc.c     ****   }
 154:Src/adc.c     **** }
 268              		.loc 1 154 0
 269 0098 07B0     		add	sp, sp, #28
 270              	.LCFI5:
 271              		.cfi_def_cfa_offset 12
 272              		@ sp needed
 273 009a 30BD     		pop	{r4, r5, pc}
 274              	.LVL15:
 275              	.L12:
 276              	.LCFI6:
 277              		.cfi_def_cfa_offset 0
 278              		.cfi_restore 4
 279              		.cfi_restore 5
 280              		.cfi_restore 14
 281 009c 7047     		bx	lr
 282              	.L14:
 283 009e 00BF     		.align	2
 284              	.L13:
 285 00a0 00000450 		.word	1342439424
 286 00a4 00000000 		.word	hdma_adc1
 287 00a8 08000240 		.word	1073872904
 288 00ac 00000000 		.word	.LC0
 289              		.cfi_endproc
 290              	.LFE307:
 292              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 293              		.align	2
 294              		.global	HAL_ADC_MspDeInit
 295              		.thumb
 296              		.thumb_func
 298              	HAL_ADC_MspDeInit:
 299              	.LFB308:
 155:Src/adc.c     **** 
 156:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 157:Src/adc.c     **** {
 300              		.loc 1 157 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 9


 304              	.LVL16:
 158:Src/adc.c     **** 
 159:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 305              		.loc 1 159 0
 306 0000 0268     		ldr	r2, [r0]
 307 0002 0B4B     		ldr	r3, .L19
 308 0004 9A42     		cmp	r2, r3
 309 0006 12D1     		bne	.L18
 157:Src/adc.c     **** 
 310              		.loc 1 157 0
 311 0008 10B5     		push	{r4, lr}
 312              	.LCFI7:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 4, -8
 315              		.cfi_offset 14, -4
 316 000a 0446     		mov	r4, r0
 160:Src/adc.c     ****   {
 161:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 162:Src/adc.c     **** 
 163:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 164:Src/adc.c     ****     /* Peripheral clock disable */
 165:Src/adc.c     ****     __HAL_RCC_ADC_CLK_DISABLE();
 317              		.loc 1 165 0
 318 000c 094A     		ldr	r2, .L19+4
 319 000e D36C     		ldr	r3, [r2, #76]
 320 0010 23F40053 		bic	r3, r3, #8192
 321 0014 D364     		str	r3, [r2, #76]
 166:Src/adc.c     **** 
 167:Src/adc.c     ****     /**ADC1 GPIO Configuration
 168:Src/adc.c     ****     PA1     ------> ADC1_IN6
 169:Src/adc.c     ****     */
 170:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 322              		.loc 1 170 0
 323 0016 4FF09040 		mov	r0, #1207959552
 324              	.LVL17:
 325 001a 0221     		movs	r1, #2
 326 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 327              	.LVL18:
 171:Src/adc.c     **** 
 172:Src/adc.c     ****     /* ADC1 DMA DeInit */
 173:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 328              		.loc 1 173 0
 329 0020 206D     		ldr	r0, [r4, #80]
 330 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 331              	.LVL19:
 174:Src/adc.c     **** 
 175:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 176:Src/adc.c     ****     HAL_NVIC_DisableIRQ(ADC1_2_IRQn);
 332              		.loc 1 176 0
 333 0026 1220     		movs	r0, #18
 334 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 335              	.LVL20:
 336 002c 10BD     		pop	{r4, pc}
 337              	.LVL21:
 338              	.L18:
 339              	.LCFI8:
 340              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 10


 341              		.cfi_restore 4
 342              		.cfi_restore 14
 343 002e 7047     		bx	lr
 344              	.L20:
 345              		.align	2
 346              	.L19:
 347 0030 00000450 		.word	1342439424
 348 0034 00100240 		.word	1073876992
 349              		.cfi_endproc
 350              	.LFE308:
 352              		.comm	hdma_adc1,72,4
 353              		.comm	hadc1,104,4
 354              		.section	.rodata.str1.4,"aMS",%progbits,1
 355              		.align	2
 356              	.LC0:
 357 0000 5372632F 		.ascii	"Src/adc.c\000"
 357      6164632E 
 357      6300
 358              		.text
 359              	.Letext0:
 360              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 361              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/machine/_default_ty
 362              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/sys/_stdint.h"
 363              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 364              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 365              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 366              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 367              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 368              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 369              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 370              		.file 12 "Inc/dma.h"
 371              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:21     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:146    .text.MX_ADC1_Init:0000000000000098 $d
                            *COM*:0000000000000068 hadc1
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:154    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:159    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:285    .text.HAL_ADC_MspInit:00000000000000a0 $d
                            *COM*:0000000000000048 hdma_adc1
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:293    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:298    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:347    .text.HAL_ADC_MspDeInit:0000000000000030 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccY6Ix1a.s:355    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
_Error_Handler
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
