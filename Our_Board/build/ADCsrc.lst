ARM GAS  /tmp/ccgoDI2u.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ADCsrc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TIM4_Config,"ax",%progbits
  18              		.align	1
  19              		.global	TIM4_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	TIM4_Config:
  27              	.LVL0:
  28              	.LFB342:
  29              		.file 1 "Src/ADCsrc.c"
   1:Src/ADCsrc.c  **** ///big source file
   2:Src/ADCsrc.c  **** 
   3:Src/ADCsrc.c  **** #include "ADCsrc.h"
   4:Src/ADCsrc.c  **** #include "stm32l476xx.h"
   5:Src/ADCsrc.c  **** #include "arm_math.h"
   6:Src/ADCsrc.c  **** 
   7:Src/ADCsrc.c  **** 
   8:Src/ADCsrc.c  **** 
   9:Src/ADCsrc.c  **** 
  10:Src/ADCsrc.c  **** ///ADC1 Initialization
  11:Src/ADCsrc.c  **** /// NOTE: ADC needs HSI
  12:Src/ADCsrc.c  **** 
  13:Src/ADCsrc.c  **** 
  14:Src/ADCsrc.c  **** void TIM4_Config(uint16_t fs)
  15:Src/ADCsrc.c  ****  {
  30              		.loc 1 15 2 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 15 2 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 85B0     		sub	sp, sp, #20
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccgoDI2u.s 			page 2


  16:Src/ADCsrc.c  **** static TIM_HandleTypeDef htim;
  44              		.loc 1 16 1 is_stmt 1 view .LVU2
  17:Src/ADCsrc.c  **** TIM_MasterConfigTypeDef  sMasterConfig;
  45              		.loc 1 17 1 view .LVU3
  18:Src/ADCsrc.c  **** 
  19:Src/ADCsrc.c  **** htim.Instance = TIM4;
  46              		.loc 1 19 1 view .LVU4
  47              		.loc 1 19 15 is_stmt 0 view .LVU5
  48 0004 0B4C     		ldr	r4, .L3
  49 0006 0C4B     		ldr	r3, .L3+4
  50 0008 2360     		str	r3, [r4]
  20:Src/ADCsrc.c  **** 
  21:Src/ADCsrc.c  ****   /* Number of timer counts per ADC sample....  The timer 4 clock frequency is
  22:Src/ADCsrc.c  ****   * the APB1 Bus frequency: 80 MHz.  For example, To get 50 ksps, we're
  23:Src/ADCsrc.c  ****   * counting (50 MHz)/(50 ksps) = 1600 counts
  24:Src/ADCsrc.c  ****   */
  25:Src/ADCsrc.c  ****   htim.Init.Period = fs;
  51              		.loc 1 25 3 is_stmt 1 view .LVU6
  52              		.loc 1 25 20 is_stmt 0 view .LVU7
  53 000a E060     		str	r0, [r4, #12]
  26:Src/ADCsrc.c  ****   htim.Init.Prescaler = 0;
  54              		.loc 1 26 3 is_stmt 1 view .LVU8
  55              		.loc 1 26 23 is_stmt 0 view .LVU9
  56 000c 0025     		movs	r5, #0
  57 000e 6560     		str	r5, [r4, #4]
  27:Src/ADCsrc.c  ****   htim.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  58              		.loc 1 27 3 is_stmt 1 view .LVU10
  59              		.loc 1 27 27 is_stmt 0 view .LVU11
  60 0010 2561     		str	r5, [r4, #16]
  28:Src/ADCsrc.c  ****   htim.Init.CounterMode = TIM_COUNTERMODE_UP;
  61              		.loc 1 28 3 is_stmt 1 view .LVU12
  62              		.loc 1 28 25 is_stmt 0 view .LVU13
  63 0012 A560     		str	r5, [r4, #8]
  29:Src/ADCsrc.c  ****   HAL_TIM_Base_Init(&htim);
  64              		.loc 1 29 3 is_stmt 1 view .LVU14
  65 0014 2046     		mov	r0, r4
  66              	.LVL1:
  67              		.loc 1 29 3 is_stmt 0 view .LVU15
  68 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
  69              	.LVL2:
  30:Src/ADCsrc.c  **** 
  31:Src/ADCsrc.c  ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
  70              		.loc 1 31 3 is_stmt 1 view .LVU16
  71              		.loc 1 31 37 is_stmt 0 view .LVU17
  72 001a 2023     		movs	r3, #32
  73 001c 0193     		str	r3, [sp, #4]
  32:Src/ADCsrc.c  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  74              		.loc 1 32 3 is_stmt 1 view .LVU18
  75              		.loc 1 32 33 is_stmt 0 view .LVU19
  76 001e 0395     		str	r5, [sp, #12]
  33:Src/ADCsrc.c  **** 
  34:Src/ADCsrc.c  ****   HAL_TIMEx_MasterConfigSynchronization(&htim, &sMasterConfig);
  77              		.loc 1 34 3 is_stmt 1 view .LVU20
  78 0020 01A9     		add	r1, sp, #4
  79 0022 2046     		mov	r0, r4
  80 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  81              	.LVL3:
ARM GAS  /tmp/ccgoDI2u.s 			page 3


  35:Src/ADCsrc.c  **** 
  36:Src/ADCsrc.c  ****   /*##-2- Enable TIM peripheral counter ######################################*/
  37:Src/ADCsrc.c  ****   HAL_TIM_Base_Start(&htim);
  82              		.loc 1 37 3 view .LVU21
  83 0028 2046     		mov	r0, r4
  84 002a FFF7FEFF 		bl	HAL_TIM_Base_Start
  85              	.LVL4:
  38:Src/ADCsrc.c  **** }
  86              		.loc 1 38 1 is_stmt 0 view .LVU22
  87 002e 05B0     		add	sp, sp, #20
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 12
  90              		@ sp needed
  91 0030 30BD     		pop	{r4, r5, pc}
  92              	.L4:
  93 0032 00BF     		.align	2
  94              	.L3:
  95 0034 00000000 		.word	.LANCHOR0
  96 0038 00080040 		.word	1073743872
  97              		.cfi_endproc
  98              	.LFE342:
 100              		.section	.text.ADC1_Wakeup,"ax",%progbits
 101              		.align	1
 102              		.global	ADC1_Wakeup
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	ADC1_Wakeup:
 109              	.LFB344:
  39:Src/ADCsrc.c  **** 
  40:Src/ADCsrc.c  **** void ADC1_Init(void)
  41:Src/ADCsrc.c  **** {
  42:Src/ADCsrc.c  ****   /*Enable clock to ADC */
  43:Src/ADCsrc.c  ****   RCC->AHB2ENR |= RCC_AHB2ENR_ADCEN;
  44:Src/ADCsrc.c  **** 
  45:Src/ADCsrc.c  ****   /*disable ADC1 by clearing */
  46:Src/ADCsrc.c  ****   ADC1->CR &= ~ADC_CR_ADEN;
  47:Src/ADCsrc.c  **** 
  48:Src/ADCsrc.c  **** 
  49:Src/ADCsrc.c  ****   /*Enable I/O analog switches voltage booster */
  50:Src/ADCsrc.c  ****   SYSCFG->CFGR1 |= SYSCFG_CFGR1_BOOSTEN;
  51:Src/ADCsrc.c  **** 
  52:Src/ADCsrc.c  ****   /*Enable conversion of internal channels */
  53:Src/ADCsrc.c  ****   ADC123_COMMON->CCR |= ADC_CCR_VREFEN;
  54:Src/ADCsrc.c  **** 
  55:Src/ADCsrc.c  ****   /*Configure ADC prescalar to select ADC clock frequency */
  56:Src/ADCsrc.c  **** /*The clock is common for all the ADCs.
  57:Src/ADCsrc.c  **** 0000: input ADC clock not divided
  58:Src/ADCsrc.c  **** 0001: input ADC clock divided by 2
  59:Src/ADCsrc.c  **** 0010: input ADC clock divided by 4
  60:Src/ADCsrc.c  **** 0011: input ADC clock divided by 6
  61:Src/ADCsrc.c  **** 0100: input ADC clock divided by 8
  62:Src/ADCsrc.c  **** 0101: input ADC clock divided by 10
  63:Src/ADCsrc.c  **** 0110: input ADC clock divided by 12
  64:Src/ADCsrc.c  **** 0111: input ADC clock divided by 16
  65:Src/ADCsrc.c  **** 1000: input ADC clock divided by 32
ARM GAS  /tmp/ccgoDI2u.s 			page 4


  66:Src/ADCsrc.c  **** 1001: input ADC clock divided by 64
  67:Src/ADCsrc.c  **** 1010: input ADC clock divided by 128
  68:Src/ADCsrc.c  **** 1011: input ADC clock divided by 256
  69:Src/ADCsrc.c  **** */
  70:Src/ADCsrc.c  ****   ADC123_COMMON->CCR &= ~ADC_CCR_PRESC;
  71:Src/ADCsrc.c  ****   // ADC123_COMMON->CCR |= ADC_CCR_PRESC_0;
  72:Src/ADCsrc.c  **** 
  73:Src/ADCsrc.c  ****   /*configure ADC clock to be synchonous HCLK/1 */
  74:Src/ADCsrc.c  **** /*
  75:Src/ADCsrc.c  **** 00: CK_ADCx (x=123) (Asynchronous clock mode), generated at product level (refer to
  76:Src/ADCsrc.c  **** Section 6: Reset and clock control (RCC))
  77:Src/ADCsrc.c  **** 01: HCLK/1 (Synchronous clock mode). This configuration must be enabled only if the AHB
  78:Src/ADCsrc.c  **** clock prescaler is set to 1 (HPRE[3:0] = 0xxx in RCC_CFGR register) and if the system clock
  79:Src/ADCsrc.c  **** has a 50% duty cycle.
  80:Src/ADCsrc.c  **** 10: HCLK/2 (Synchronous clock mode)
  81:Src/ADCsrc.c  **** 11: HCLK/4 (Synchronous clock mode)
  82:Src/ADCsrc.c  **** */
  83:Src/ADCsrc.c  ****   ADC123_COMMON->CCR &= ~ADC_CCR_CKMODE;
  84:Src/ADCsrc.c  ****   ADC123_COMMON->CCR |= ADC_CCR_CKMODE_0;
  85:Src/ADCsrc.c  **** 
  86:Src/ADCsrc.c  ****   /*Configure all ADCs as independent mode */
  87:Src/ADCsrc.c  ****   ADC123_COMMON->CCR &= ~ADC_CCR_DUAL;
  88:Src/ADCsrc.c  **** 
  89:Src/ADCsrc.c  ****   /*Wait for ADC come out of deep-power-down mode */
  90:Src/ADCsrc.c  ****   ADC1_Wakeup();
  91:Src/ADCsrc.c  **** 
  92:Src/ADCsrc.c  ****   /*Configure resoltion, 00= 12bit */
  93:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_RES_0;
  94:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_RES_1;
  95:Src/ADCsrc.c  **** 
  96:Src/ADCsrc.c  ****   /*Select right alignment */
  97:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_ALIGN;
  98:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_ALIGN;
  99:Src/ADCsrc.c  **** 
 100:Src/ADCsrc.c  ****   /*Select nnumber of conversions */
 101:Src/ADCsrc.c  ****   ADC1->SQR1 &= ~(ADC_SQR1_L);
 102:Src/ADCsrc.c  **** 
 103:Src/ADCsrc.c  ****   //select channel 6 for conversions
 104:Src/ADCsrc.c  ****   ADC1->SQR1 |= ADC_SQR1_SQ1_2 | ADC_SQR1_SQ1_1;
 105:Src/ADCsrc.c  **** 
 106:Src/ADCsrc.c  ****   /*Configure channel 6 as single ended */
 107:Src/ADCsrc.c  ****   ADC1->DIFSEL &= ~ADC_DIFSEL_DIFSEL_6;
 108:Src/ADCsrc.c  **** 
 109:Src/ADCsrc.c  ****   /*Configure sample time, needs to be long enough for cap of */
 110:Src/ADCsrc.c  ****   /* sample and hold circuit to be charged */
 111:Src/ADCsrc.c  ****   /*
 112:Src/ADCsrc.c  ****   //000: 2.5 ADC clock cycles
 113:Src/ADCsrc.c  ****   //001: 6.5 ADC clock cycles
 114:Src/ADCsrc.c  ****   //010: 12.5 ADC clock cycles
 115:Src/ADCsrc.c  ****   //011: 24.5 ADC clock cycles
 116:Src/ADCsrc.c  ****   //100: 47.5 ADC clock cycles
 117:Src/ADCsrc.c  ****   //101: 92.5 ADC clock cycles
 118:Src/ADCsrc.c  ****   //110: 247.5 ADC clock cycles
 119:Src/ADCsrc.c  ****   //111: 640.5 ADC clock cycles
 120:Src/ADCsrc.c  ****  */
 121:Src/ADCsrc.c  ****   ADC1->SMPR1 &= ~ADC_SMPR1_SMP6;
 122:Src/ADCsrc.c  ****   ADC1->SMPR1 |= ADC_SMPR1_SMP6_0 | ADC_SMPR1_SMP6_2;
ARM GAS  /tmp/ccgoDI2u.s 			page 5


 123:Src/ADCsrc.c  **** 
 124:Src/ADCsrc.c  ****   /*Set ADC in discontinuous mode */
 125:Src/ADCsrc.c  ****   // 0 = discontinuous
 126:Src/ADCsrc.c  ****   // 1 = continuous
 127:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_CONT;
 128:Src/ADCsrc.c  ****   //ADC1->CFGR |= ADC_CFGR_CONT;
 129:Src/ADCsrc.c  **** 
 130:Src/ADCsrc.c  ****   // configure ADC for DMA in circular mode
 131:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_DMACFG;
 132:Src/ADCsrc.c  ****   //DMA enable?
 133:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_DMAEN;
 134:Src/ADCsrc.c  **** 
 135:Src/ADCsrc.c  ****   /* set overrun to overwrite */
 136:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_OVRMOD;
 137:Src/ADCsrc.c  ****   //ADC1->CFGR &= ~ADC_CFGR_OVRMOD;
 138:Src/ADCsrc.c  **** 
 139:Src/ADCsrc.c  **** 
 140:Src/ADCsrc.c  **** 
 141:Src/ADCsrc.c  **** 
 142:Src/ADCsrc.c  ****     //select TIm4_TRGO
 143:Src/ADCsrc.c  ****     ADC1->CFGR &= ~ADC_CFGR_EXTSEL;
 144:Src/ADCsrc.c  ****     ADC1->CFGR |= ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2;
 145:Src/ADCsrc.c  **** 
 146:Src/ADCsrc.c  ****   /*Select software trigger */
 147:Src/ADCsrc.c  ****   //select rising edge of hardware triggers
 148:Src/ADCsrc.c  ****   // 00: software triggers
 149:Src/ADCsrc.c  ****   // 01: hardware trigger, rising edge
 150:Src/ADCsrc.c  ****   // 10 HW trig, falling edge
 151:Src/ADCsrc.c  ****   // 11:HW trigg, both
 152:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_EXTEN;
 153:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_EXTEN_0;
 154:Src/ADCsrc.c  **** 
 155:Src/ADCsrc.c  ****   /*enable end of conversion flag */
 156:Src/ADCsrc.c  ****    ADC1->IER |= ADC_IER_EOCIE;
 157:Src/ADCsrc.c  **** 
 158:Src/ADCsrc.c  ****   //set DMA interrupt priority
 159:Src/ADCsrc.c  ****   NVIC_SetPriority(ADC1_2_IRQn, 0);
 160:Src/ADCsrc.c  **** 
 161:Src/ADCsrc.c  ****   //enable DMA INTERRUPT
 162:Src/ADCsrc.c  ****   NVIC_EnableIRQ(ADC1_2_IRQn);
 163:Src/ADCsrc.c  ****   //trigger becomes immediately effective once software starts ADC
 164:Src/ADCsrc.c  ****   ADC1->CR |= ADC_CR_ADSTART;
 165:Src/ADCsrc.c  **** 
 166:Src/ADCsrc.c  ****   /*enable ADC1 */
 167:Src/ADCsrc.c  ****   ADC1->CR &= ~ADC_CR_ADEN;
 168:Src/ADCsrc.c  ****   ADC1->CR |= ADC_CR_ADEN;
 169:Src/ADCsrc.c  **** 
 170:Src/ADCsrc.c  ****   /*wait for ADC1 to be ready */
 171:Src/ADCsrc.c  ****   while(!(ADC1->ISR & ADC_ISR_ADRDY));
 172:Src/ADCsrc.c  **** }
 173:Src/ADCsrc.c  **** 
 174:Src/ADCsrc.c  **** 
 175:Src/ADCsrc.c  **** /* This ADC1_Wakeup wakes the ADC on the STM32L476 MCU*/
 176:Src/ADCsrc.c  **** 
 177:Src/ADCsrc.c  **** void ADC1_Wakeup(void){
 110              		.loc 1 177 23 is_stmt 1 view -0
 111              		.cfi_startproc
ARM GAS  /tmp/ccgoDI2u.s 			page 6


 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 178:Src/ADCsrc.c  ****   int wait_time = 0;
 115              		.loc 1 178 3 view .LVU24
 116              	.LVL5:
 179:Src/ADCsrc.c  ****   /*Start ADC operations: DEEPPWD = 0: ADC not in deep pwoer mode*/
 180:Src/ADCsrc.c  ****   /*DEEPPWD = 1: ADC in deep power mode (reset state) */
 181:Src/ADCsrc.c  ****   if ((ADC1->CR & ADC_CR_DEEPPWD) == ADC_CR_DEEPPWD){
 117              		.loc 1 181 3 view .LVU25
 118              		.loc 1 181 12 is_stmt 0 view .LVU26
 119 0000 0A4B     		ldr	r3, .L10
 120 0002 9B68     		ldr	r3, [r3, #8]
 121              		.loc 1 181 6 view .LVU27
 122 0004 13F0005F 		tst	r3, #536870912
 123 0008 04D0     		beq	.L6
 182:Src/ADCsrc.c  ****     ADC1->CR &= ~ADC_CR_DEEPPWD;
 124              		.loc 1 182 5 is_stmt 1 view .LVU28
 125              		.loc 1 182 14 is_stmt 0 view .LVU29
 126 000a 084A     		ldr	r2, .L10
 127 000c 9368     		ldr	r3, [r2, #8]
 128 000e 23F00053 		bic	r3, r3, #536870912
 129 0012 9360     		str	r3, [r2, #8]
 130              	.L6:
 183:Src/ADCsrc.c  ****   }
 184:Src/ADCsrc.c  **** 
 185:Src/ADCsrc.c  ****   /* Enable the ADC voltage Regulator */
 186:Src/ADCsrc.c  ****   /* must enable before calibration of ADC, use software */
 187:Src/ADCsrc.c  ****   /* to wait for regulator startup time */
 188:Src/ADCsrc.c  ****   ADC1->CR |= ADC_CR_ADVREGEN;
 131              		.loc 1 188 3 is_stmt 1 view .LVU30
 132              		.loc 1 188 12 is_stmt 0 view .LVU31
 133 0014 054A     		ldr	r2, .L10
 134 0016 9368     		ldr	r3, [r2, #8]
 135 0018 43F08053 		orr	r3, r3, #268435456
 136 001c 9360     		str	r3, [r2, #8]
 189:Src/ADCsrc.c  **** 
 190:Src/ADCsrc.c  ****   /* wait for ADC regulator */
 191:Src/ADCsrc.c  ****   wait_time = 20 * (80000000 / 100000);
 137              		.loc 1 191 3 is_stmt 1 view .LVU32
 138              	.LVL6:
 192:Src/ADCsrc.c  ****   while (wait_time != 0){
 139              		.loc 1 192 3 view .LVU33
 191:Src/ADCsrc.c  ****   while (wait_time != 0){
 140              		.loc 1 191 13 is_stmt 0 view .LVU34
 141 001e 4FF47A53 		mov	r3, #16000
 142              	.LVL7:
 143              	.L7:
 144              		.loc 1 192 9 is_stmt 1 view .LVU35
 145 0022 0BB1     		cbz	r3, .L9
 193:Src/ADCsrc.c  ****   wait_time--;
 146              		.loc 1 193 3 view .LVU36
 147              		.loc 1 193 12 is_stmt 0 view .LVU37
 148 0024 013B     		subs	r3, r3, #1
 149              	.LVL8:
 150              		.loc 1 193 12 view .LVU38
 151 0026 FCE7     		b	.L7
ARM GAS  /tmp/ccgoDI2u.s 			page 7


 152              	.L9:
 194:Src/ADCsrc.c  ****   }
 195:Src/ADCsrc.c  **** 
 196:Src/ADCsrc.c  **** }
 153              		.loc 1 196 1 view .LVU39
 154 0028 7047     		bx	lr
 155              	.L11:
 156 002a 00BF     		.align	2
 157              	.L10:
 158 002c 00000450 		.word	1342439424
 159              		.cfi_endproc
 160              	.LFE344:
 162              		.section	.text.ADC1_Init,"ax",%progbits
 163              		.align	1
 164              		.global	ADC1_Init
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	ADC1_Init:
 171              	.LFB343:
  41:Src/ADCsrc.c  ****   /*Enable clock to ADC */
 172              		.loc 1 41 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
  43:Src/ADCsrc.c  **** 
 181              		.loc 1 43 3 view .LVU41
  43:Src/ADCsrc.c  **** 
 182              		.loc 1 43 16 is_stmt 0 view .LVU42
 183 0002 454A     		ldr	r2, .L15
 184 0004 D36C     		ldr	r3, [r2, #76]
 185 0006 43F40053 		orr	r3, r3, #8192
 186 000a D364     		str	r3, [r2, #76]
  46:Src/ADCsrc.c  **** 
 187              		.loc 1 46 3 is_stmt 1 view .LVU43
  46:Src/ADCsrc.c  **** 
 188              		.loc 1 46 12 is_stmt 0 view .LVU44
 189 000c 434C     		ldr	r4, .L15+4
 190 000e A368     		ldr	r3, [r4, #8]
 191 0010 23F00103 		bic	r3, r3, #1
 192 0014 A360     		str	r3, [r4, #8]
  50:Src/ADCsrc.c  **** 
 193              		.loc 1 50 3 is_stmt 1 view .LVU45
  50:Src/ADCsrc.c  **** 
 194              		.loc 1 50 17 is_stmt 0 view .LVU46
 195 0016 A2F58832 		sub	r2, r2, #69632
 196 001a 5368     		ldr	r3, [r2, #4]
 197 001c 43F48073 		orr	r3, r3, #256
 198 0020 5360     		str	r3, [r2, #4]
  53:Src/ADCsrc.c  **** 
 199              		.loc 1 53 3 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccgoDI2u.s 			page 8


  53:Src/ADCsrc.c  **** 
 200              		.loc 1 53 22 is_stmt 0 view .LVU48
 201 0022 3F4B     		ldr	r3, .L15+8
 202 0024 9A68     		ldr	r2, [r3, #8]
 203 0026 42F48002 		orr	r2, r2, #4194304
 204 002a 9A60     		str	r2, [r3, #8]
  70:Src/ADCsrc.c  ****   // ADC123_COMMON->CCR |= ADC_CCR_PRESC_0;
 205              		.loc 1 70 3 is_stmt 1 view .LVU49
  70:Src/ADCsrc.c  ****   // ADC123_COMMON->CCR |= ADC_CCR_PRESC_0;
 206              		.loc 1 70 22 is_stmt 0 view .LVU50
 207 002c 9A68     		ldr	r2, [r3, #8]
 208 002e 22F47012 		bic	r2, r2, #3932160
 209 0032 9A60     		str	r2, [r3, #8]
  83:Src/ADCsrc.c  ****   ADC123_COMMON->CCR |= ADC_CCR_CKMODE_0;
 210              		.loc 1 83 3 is_stmt 1 view .LVU51
  83:Src/ADCsrc.c  ****   ADC123_COMMON->CCR |= ADC_CCR_CKMODE_0;
 211              		.loc 1 83 22 is_stmt 0 view .LVU52
 212 0034 9A68     		ldr	r2, [r3, #8]
 213 0036 22F44032 		bic	r2, r2, #196608
 214 003a 9A60     		str	r2, [r3, #8]
  84:Src/ADCsrc.c  **** 
 215              		.loc 1 84 3 is_stmt 1 view .LVU53
  84:Src/ADCsrc.c  **** 
 216              		.loc 1 84 22 is_stmt 0 view .LVU54
 217 003c 9A68     		ldr	r2, [r3, #8]
 218 003e 42F48032 		orr	r2, r2, #65536
 219 0042 9A60     		str	r2, [r3, #8]
  87:Src/ADCsrc.c  **** 
 220              		.loc 1 87 3 is_stmt 1 view .LVU55
  87:Src/ADCsrc.c  **** 
 221              		.loc 1 87 22 is_stmt 0 view .LVU56
 222 0044 9A68     		ldr	r2, [r3, #8]
 223 0046 22F01F02 		bic	r2, r2, #31
 224 004a 9A60     		str	r2, [r3, #8]
  90:Src/ADCsrc.c  **** 
 225              		.loc 1 90 3 is_stmt 1 view .LVU57
 226 004c FFF7FEFF 		bl	ADC1_Wakeup
 227              	.LVL9:
  93:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_RES_1;
 228              		.loc 1 93 3 view .LVU58
  93:Src/ADCsrc.c  ****   ADC1->CFGR &= ~ADC_CFGR_RES_1;
 229              		.loc 1 93 14 is_stmt 0 view .LVU59
 230 0050 E368     		ldr	r3, [r4, #12]
 231 0052 23F00803 		bic	r3, r3, #8
 232 0056 E360     		str	r3, [r4, #12]
  94:Src/ADCsrc.c  **** 
 233              		.loc 1 94 3 is_stmt 1 view .LVU60
  94:Src/ADCsrc.c  **** 
 234              		.loc 1 94 14 is_stmt 0 view .LVU61
 235 0058 E368     		ldr	r3, [r4, #12]
 236 005a 23F01003 		bic	r3, r3, #16
 237 005e E360     		str	r3, [r4, #12]
  97:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_ALIGN;
 238              		.loc 1 97 3 is_stmt 1 view .LVU62
  97:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_ALIGN;
 239              		.loc 1 97 14 is_stmt 0 view .LVU63
 240 0060 E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccgoDI2u.s 			page 9


 241 0062 23F02003 		bic	r3, r3, #32
 242 0066 E360     		str	r3, [r4, #12]
  98:Src/ADCsrc.c  **** 
 243              		.loc 1 98 3 is_stmt 1 view .LVU64
  98:Src/ADCsrc.c  **** 
 244              		.loc 1 98 14 is_stmt 0 view .LVU65
 245 0068 E368     		ldr	r3, [r4, #12]
 246 006a 43F02003 		orr	r3, r3, #32
 247 006e E360     		str	r3, [r4, #12]
 101:Src/ADCsrc.c  **** 
 248              		.loc 1 101 3 is_stmt 1 view .LVU66
 101:Src/ADCsrc.c  **** 
 249              		.loc 1 101 14 is_stmt 0 view .LVU67
 250 0070 236B     		ldr	r3, [r4, #48]
 251 0072 23F00F03 		bic	r3, r3, #15
 252 0076 2363     		str	r3, [r4, #48]
 104:Src/ADCsrc.c  **** 
 253              		.loc 1 104 3 is_stmt 1 view .LVU68
 104:Src/ADCsrc.c  **** 
 254              		.loc 1 104 14 is_stmt 0 view .LVU69
 255 0078 236B     		ldr	r3, [r4, #48]
 256 007a 43F4C073 		orr	r3, r3, #384
 257 007e 2363     		str	r3, [r4, #48]
 107:Src/ADCsrc.c  **** 
 258              		.loc 1 107 3 is_stmt 1 view .LVU70
 107:Src/ADCsrc.c  **** 
 259              		.loc 1 107 16 is_stmt 0 view .LVU71
 260 0080 D4F8B030 		ldr	r3, [r4, #176]
 261 0084 23F04003 		bic	r3, r3, #64
 262 0088 C4F8B030 		str	r3, [r4, #176]
 121:Src/ADCsrc.c  ****   ADC1->SMPR1 |= ADC_SMPR1_SMP6_0 | ADC_SMPR1_SMP6_2;
 263              		.loc 1 121 3 is_stmt 1 view .LVU72
 121:Src/ADCsrc.c  ****   ADC1->SMPR1 |= ADC_SMPR1_SMP6_0 | ADC_SMPR1_SMP6_2;
 264              		.loc 1 121 15 is_stmt 0 view .LVU73
 265 008c 6369     		ldr	r3, [r4, #20]
 266 008e 23F4E013 		bic	r3, r3, #1835008
 267 0092 6361     		str	r3, [r4, #20]
 122:Src/ADCsrc.c  **** 
 268              		.loc 1 122 3 is_stmt 1 view .LVU74
 122:Src/ADCsrc.c  **** 
 269              		.loc 1 122 15 is_stmt 0 view .LVU75
 270 0094 6369     		ldr	r3, [r4, #20]
 271 0096 43F4A013 		orr	r3, r3, #1310720
 272 009a 6361     		str	r3, [r4, #20]
 127:Src/ADCsrc.c  ****   //ADC1->CFGR |= ADC_CFGR_CONT;
 273              		.loc 1 127 3 is_stmt 1 view .LVU76
 127:Src/ADCsrc.c  ****   //ADC1->CFGR |= ADC_CFGR_CONT;
 274              		.loc 1 127 14 is_stmt 0 view .LVU77
 275 009c E368     		ldr	r3, [r4, #12]
 276 009e 23F40053 		bic	r3, r3, #8192
 277 00a2 E360     		str	r3, [r4, #12]
 131:Src/ADCsrc.c  ****   //DMA enable?
 278              		.loc 1 131 3 is_stmt 1 view .LVU78
 131:Src/ADCsrc.c  ****   //DMA enable?
 279              		.loc 1 131 14 is_stmt 0 view .LVU79
 280 00a4 E368     		ldr	r3, [r4, #12]
 281 00a6 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/ccgoDI2u.s 			page 10


 282 00aa E360     		str	r3, [r4, #12]
 133:Src/ADCsrc.c  **** 
 283              		.loc 1 133 3 is_stmt 1 view .LVU80
 133:Src/ADCsrc.c  **** 
 284              		.loc 1 133 14 is_stmt 0 view .LVU81
 285 00ac E368     		ldr	r3, [r4, #12]
 286 00ae 43F00103 		orr	r3, r3, #1
 287 00b2 E360     		str	r3, [r4, #12]
 136:Src/ADCsrc.c  ****   //ADC1->CFGR &= ~ADC_CFGR_OVRMOD;
 288              		.loc 1 136 3 is_stmt 1 view .LVU82
 136:Src/ADCsrc.c  ****   //ADC1->CFGR &= ~ADC_CFGR_OVRMOD;
 289              		.loc 1 136 14 is_stmt 0 view .LVU83
 290 00b4 E368     		ldr	r3, [r4, #12]
 291 00b6 43F48053 		orr	r3, r3, #4096
 292 00ba E360     		str	r3, [r4, #12]
 143:Src/ADCsrc.c  ****     ADC1->CFGR |= ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2;
 293              		.loc 1 143 5 is_stmt 1 view .LVU84
 143:Src/ADCsrc.c  ****     ADC1->CFGR |= ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2;
 294              		.loc 1 143 16 is_stmt 0 view .LVU85
 295 00bc E368     		ldr	r3, [r4, #12]
 296 00be 23F47073 		bic	r3, r3, #960
 297 00c2 E360     		str	r3, [r4, #12]
 144:Src/ADCsrc.c  **** 
 298              		.loc 1 144 5 is_stmt 1 view .LVU86
 144:Src/ADCsrc.c  **** 
 299              		.loc 1 144 16 is_stmt 0 view .LVU87
 300 00c4 E368     		ldr	r3, [r4, #12]
 301 00c6 43F44073 		orr	r3, r3, #768
 302 00ca E360     		str	r3, [r4, #12]
 152:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_EXTEN_0;
 303              		.loc 1 152 3 is_stmt 1 view .LVU88
 152:Src/ADCsrc.c  ****   ADC1->CFGR |= ADC_CFGR_EXTEN_0;
 304              		.loc 1 152 14 is_stmt 0 view .LVU89
 305 00cc E368     		ldr	r3, [r4, #12]
 306 00ce 23F44063 		bic	r3, r3, #3072
 307 00d2 E360     		str	r3, [r4, #12]
 153:Src/ADCsrc.c  **** 
 308              		.loc 1 153 3 is_stmt 1 view .LVU90
 153:Src/ADCsrc.c  **** 
 309              		.loc 1 153 14 is_stmt 0 view .LVU91
 310 00d4 E368     		ldr	r3, [r4, #12]
 311 00d6 43F48063 		orr	r3, r3, #1024
 312 00da E360     		str	r3, [r4, #12]
 156:Src/ADCsrc.c  **** 
 313              		.loc 1 156 4 is_stmt 1 view .LVU92
 156:Src/ADCsrc.c  **** 
 314              		.loc 1 156 14 is_stmt 0 view .LVU93
 315 00dc 6368     		ldr	r3, [r4, #4]
 316 00de 43F00403 		orr	r3, r3, #4
 317 00e2 6360     		str	r3, [r4, #4]
 159:Src/ADCsrc.c  **** 
 318              		.loc 1 159 3 is_stmt 1 view .LVU94
 319              	.LVL10:
 320              	.LBB8:
 321              	.LBI8:
 322              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
ARM GAS  /tmp/ccgoDI2u.s 			page 11


   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm4.h **** 
   9:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm4.h ****    *
  21:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** 
  35:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm4.h **** #endif
  40:Drivers/CMSIS/Include/core_cm4.h **** 
  41:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm4.h **** 
  46:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm4.h **** #endif
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h **** /**
  51:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm4.h **** 
  57:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
ARM GAS  /tmp/ccgoDI2u.s 			page 12


  59:Drivers/CMSIS/Include/core_cm4.h **** 
  60:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm4.h ****  */
  63:Drivers/CMSIS/Include/core_cm4.h **** 
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm4.h **** /**
  69:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  70:Drivers/CMSIS/Include/core_cm4.h ****   @{
  71:Drivers/CMSIS/Include/core_cm4.h ****  */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm4.h **** 
  81:Drivers/CMSIS/Include/core_cm4.h **** 
  82:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm4.h **** 
  87:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm4.h **** 
  92:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm4.h **** 
  97:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm4.h **** 
 102:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm4.h **** 
 106:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
ARM GAS  /tmp/ccgoDI2u.s 			page 13


 116:Drivers/CMSIS/Include/core_cm4.h **** 
 117:Drivers/CMSIS/Include/core_cm4.h **** #else
 118:Drivers/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm4.h **** #endif
 120:Drivers/CMSIS/Include/core_cm4.h **** 
 121:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:Drivers/CMSIS/Include/core_cm4.h **** */
 124:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:Drivers/CMSIS/Include/core_cm4.h ****     #else
 165:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 168:Drivers/CMSIS/Include/core_cm4.h ****   #else
 169:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 171:Drivers/CMSIS/Include/core_cm4.h **** 
 172:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
ARM GAS  /tmp/ccgoDI2u.s 			page 14


 173:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:Drivers/CMSIS/Include/core_cm4.h ****     #else
 177:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 180:Drivers/CMSIS/Include/core_cm4.h ****   #else
 181:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 183:Drivers/CMSIS/Include/core_cm4.h **** 
 184:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:Drivers/CMSIS/Include/core_cm4.h ****     #else
 189:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 192:Drivers/CMSIS/Include/core_cm4.h ****   #else
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:Drivers/CMSIS/Include/core_cm4.h ****     #else
 201:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 204:Drivers/CMSIS/Include/core_cm4.h ****   #else
 205:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** #endif
 209:Drivers/CMSIS/Include/core_cm4.h **** 
 210:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:Drivers/CMSIS/Include/core_cm4.h **** }
 216:Drivers/CMSIS/Include/core_cm4.h **** #endif
 217:Drivers/CMSIS/Include/core_cm4.h **** 
 218:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:Drivers/CMSIS/Include/core_cm4.h **** 
 220:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:Drivers/CMSIS/Include/core_cm4.h **** 
 222:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:Drivers/CMSIS/Include/core_cm4.h **** 
 225:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:Drivers/CMSIS/Include/core_cm4.h **** #endif
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
ARM GAS  /tmp/ccgoDI2u.s 			page 15


 230:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm4.h **** 
 241:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm4.h **** 
 246:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm4.h **** #endif
 256:Drivers/CMSIS/Include/core_cm4.h **** 
 257:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:Drivers/CMSIS/Include/core_cm4.h **** /**
 259:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:Drivers/CMSIS/Include/core_cm4.h **** */
 265:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:Drivers/CMSIS/Include/core_cm4.h **** #else
 268:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:Drivers/CMSIS/Include/core_cm4.h **** #endif
 270:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:Drivers/CMSIS/Include/core_cm4.h **** 
 273:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:Drivers/CMSIS/Include/core_cm4.h **** 
 278:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** 
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 285:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 286:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
ARM GAS  /tmp/ccgoDI2u.s 			page 16


 287:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:Drivers/CMSIS/Include/core_cm4.h **** /**
 294:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:Drivers/CMSIS/Include/core_cm4.h **** */
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** /**
 299:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:Drivers/CMSIS/Include/core_cm4.h ****   @{
 303:Drivers/CMSIS/Include/core_cm4.h ****  */
 304:Drivers/CMSIS/Include/core_cm4.h **** 
 305:Drivers/CMSIS/Include/core_cm4.h **** /**
 306:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:Drivers/CMSIS/Include/core_cm4.h ****  */
 308:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 309:Drivers/CMSIS/Include/core_cm4.h **** {
 310:Drivers/CMSIS/Include/core_cm4.h ****   struct
 311:Drivers/CMSIS/Include/core_cm4.h ****   {
 312:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:Drivers/CMSIS/Include/core_cm4.h **** 
 324:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:Drivers/CMSIS/Include/core_cm4.h **** 
 328:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:Drivers/CMSIS/Include/core_cm4.h **** 
 331:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:Drivers/CMSIS/Include/core_cm4.h **** 
 334:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:Drivers/CMSIS/Include/core_cm4.h **** 
 337:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 17


 344:Drivers/CMSIS/Include/core_cm4.h **** /**
 345:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:Drivers/CMSIS/Include/core_cm4.h ****  */
 347:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 348:Drivers/CMSIS/Include/core_cm4.h **** {
 349:Drivers/CMSIS/Include/core_cm4.h ****   struct
 350:Drivers/CMSIS/Include/core_cm4.h ****   {
 351:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** /**
 363:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:Drivers/CMSIS/Include/core_cm4.h ****  */
 365:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 366:Drivers/CMSIS/Include/core_cm4.h **** {
 367:Drivers/CMSIS/Include/core_cm4.h ****   struct
 368:Drivers/CMSIS/Include/core_cm4.h ****   {
 369:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:Drivers/CMSIS/Include/core_cm4.h **** 
 384:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:Drivers/CMSIS/Include/core_cm4.h **** 
 391:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:Drivers/CMSIS/Include/core_cm4.h **** 
 394:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:Drivers/CMSIS/Include/core_cm4.h **** 
 397:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
ARM GAS  /tmp/ccgoDI2u.s 			page 18


 401:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm4.h **** 
 406:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm4.h **** 
 409:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm4.h **** 
 412:Drivers/CMSIS/Include/core_cm4.h **** 
 413:Drivers/CMSIS/Include/core_cm4.h **** /**
 414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 417:Drivers/CMSIS/Include/core_cm4.h **** {
 418:Drivers/CMSIS/Include/core_cm4.h ****   struct
 419:Drivers/CMSIS/Include/core_cm4.h ****   {
 420:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:Drivers/CMSIS/Include/core_cm4.h **** 
 438:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** 
 441:Drivers/CMSIS/Include/core_cm4.h **** /**
 442:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:Drivers/CMSIS/Include/core_cm4.h ****   @{
 446:Drivers/CMSIS/Include/core_cm4.h ****  */
 447:Drivers/CMSIS/Include/core_cm4.h **** 
 448:Drivers/CMSIS/Include/core_cm4.h **** /**
 449:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:Drivers/CMSIS/Include/core_cm4.h ****  */
 451:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 452:Drivers/CMSIS/Include/core_cm4.h **** {
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
ARM GAS  /tmp/ccgoDI2u.s 			page 19


 458:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:Drivers/CMSIS/Include/core_cm4.h **** 
 468:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** /**
 476:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:Drivers/CMSIS/Include/core_cm4.h ****   @{
 480:Drivers/CMSIS/Include/core_cm4.h ****  */
 481:Drivers/CMSIS/Include/core_cm4.h **** 
 482:Drivers/CMSIS/Include/core_cm4.h **** /**
 483:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:Drivers/CMSIS/Include/core_cm4.h ****  */
 485:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 486:Drivers/CMSIS/Include/core_cm4.h **** {
 487:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:Drivers/CMSIS/Include/core_cm4.h **** 
 510:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
ARM GAS  /tmp/ccgoDI2u.s 			page 20


 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** 
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** 
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
ARM GAS  /tmp/ccgoDI2u.s 			page 21


 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** 
 593:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** 
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
ARM GAS  /tmp/ccgoDI2u.s 			page 22


 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** 
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** 
 675:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
ARM GAS  /tmp/ccgoDI2u.s 			page 23


 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** 
 691:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:Drivers/CMSIS/Include/core_cm4.h **** 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** /**
 695:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /**
 702:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:Drivers/CMSIS/Include/core_cm4.h ****  */
 704:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 705:Drivers/CMSIS/Include/core_cm4.h **** {
 706:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:Drivers/CMSIS/Include/core_cm4.h **** 
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:Drivers/CMSIS/Include/core_cm4.h **** 
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:Drivers/CMSIS/Include/core_cm4.h **** 
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:Drivers/CMSIS/Include/core_cm4.h **** 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** /**
 735:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:Drivers/CMSIS/Include/core_cm4.h ****   @{
 739:Drivers/CMSIS/Include/core_cm4.h ****  */
 740:Drivers/CMSIS/Include/core_cm4.h **** 
 741:Drivers/CMSIS/Include/core_cm4.h **** /**
 742:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
ARM GAS  /tmp/ccgoDI2u.s 			page 24


 743:Drivers/CMSIS/Include/core_cm4.h ****  */
 744:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 745:Drivers/CMSIS/Include/core_cm4.h **** {
 746:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:Drivers/CMSIS/Include/core_cm4.h **** 
 752:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:Drivers/CMSIS/Include/core_cm4.h **** 
 759:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:Drivers/CMSIS/Include/core_cm4.h **** 
 762:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:Drivers/CMSIS/Include/core_cm4.h **** 
 765:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:Drivers/CMSIS/Include/core_cm4.h **** 
 769:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** 
 773:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** 
 783:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** 
 786:Drivers/CMSIS/Include/core_cm4.h **** /**
 787:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:Drivers/CMSIS/Include/core_cm4.h ****   @{
 791:Drivers/CMSIS/Include/core_cm4.h ****  */
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /**
 794:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:Drivers/CMSIS/Include/core_cm4.h ****  */
 796:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 797:Drivers/CMSIS/Include/core_cm4.h **** {
 798:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 799:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /tmp/ccgoDI2u.s 			page 25


 800:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 831:Drivers/CMSIS/Include/core_cm4.h **** 
 832:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** 
 836:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
ARM GAS  /tmp/ccgoDI2u.s 			page 26


 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** 
 868:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
ARM GAS  /tmp/ccgoDI2u.s 			page 27


 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
ARM GAS  /tmp/ccgoDI2u.s 			page 28


 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
ARM GAS  /tmp/ccgoDI2u.s 			page 29


1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
ARM GAS  /tmp/ccgoDI2u.s 			page 30


1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:Drivers/CMSIS/Include/core_cm4.h **** 
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 31


1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:Drivers/CMSIS/Include/core_cm4.h **** 
1158:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:Drivers/CMSIS/Include/core_cm4.h **** 
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:Drivers/CMSIS/Include/core_cm4.h **** /**
1193:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:Drivers/CMSIS/Include/core_cm4.h ****   @{
1197:Drivers/CMSIS/Include/core_cm4.h ****  */
1198:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 32


1199:Drivers/CMSIS/Include/core_cm4.h **** /**
1200:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:Drivers/CMSIS/Include/core_cm4.h ****  */
1202:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1203:Drivers/CMSIS/Include/core_cm4.h **** {
1204:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1216:Drivers/CMSIS/Include/core_cm4.h **** 
1217:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** 
1241:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:Drivers/CMSIS/Include/core_cm4.h **** 
1251:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** 
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
ARM GAS  /tmp/ccgoDI2u.s 			page 33


1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** 
1282:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:Drivers/CMSIS/Include/core_cm4.h **** #endif
1284:Drivers/CMSIS/Include/core_cm4.h **** 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:Drivers/CMSIS/Include/core_cm4.h **** /**
1288:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:Drivers/CMSIS/Include/core_cm4.h ****   @{
1292:Drivers/CMSIS/Include/core_cm4.h ****  */
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:Drivers/CMSIS/Include/core_cm4.h ****  */
1297:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1298:Drivers/CMSIS/Include/core_cm4.h **** {
1299:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:Drivers/CMSIS/Include/core_cm4.h **** 
1307:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:Drivers/CMSIS/Include/core_cm4.h **** 
1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
ARM GAS  /tmp/ccgoDI2u.s 			page 34


1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** 
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** 
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** 
1335:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:Drivers/CMSIS/Include/core_cm4.h **** 
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** 
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
ARM GAS  /tmp/ccgoDI2u.s 			page 35


1370:Drivers/CMSIS/Include/core_cm4.h **** 
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** 
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** 
1377:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:Drivers/CMSIS/Include/core_cm4.h **** #endif
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** /**
1395:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:Drivers/CMSIS/Include/core_cm4.h ****   @{
1399:Drivers/CMSIS/Include/core_cm4.h ****  */
1400:Drivers/CMSIS/Include/core_cm4.h **** 
1401:Drivers/CMSIS/Include/core_cm4.h **** /**
1402:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:Drivers/CMSIS/Include/core_cm4.h ****  */
1404:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1405:Drivers/CMSIS/Include/core_cm4.h **** {
1406:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:Drivers/CMSIS/Include/core_cm4.h **** 
1412:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
ARM GAS  /tmp/ccgoDI2u.s 			page 36


1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** 
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** 
1456:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** 
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 37


1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** /**
1500:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:Drivers/CMSIS/Include/core_cm4.h ****   @{
1504:Drivers/CMSIS/Include/core_cm4.h ****  */
1505:Drivers/CMSIS/Include/core_cm4.h **** 
1506:Drivers/CMSIS/Include/core_cm4.h **** /**
1507:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:Drivers/CMSIS/Include/core_cm4.h **** */
1512:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** /**
1515:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:Drivers/CMSIS/Include/core_cm4.h **** */
1520:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:Drivers/CMSIS/Include/core_cm4.h **** 
1522:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:Drivers/CMSIS/Include/core_cm4.h **** 
1524:Drivers/CMSIS/Include/core_cm4.h **** 
1525:Drivers/CMSIS/Include/core_cm4.h **** /**
1526:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:Drivers/CMSIS/Include/core_cm4.h ****   @{
1530:Drivers/CMSIS/Include/core_cm4.h ****  */
1531:Drivers/CMSIS/Include/core_cm4.h **** 
1532:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
ARM GAS  /tmp/ccgoDI2u.s 			page 38


1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:Drivers/CMSIS/Include/core_cm4.h **** 
1551:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:Drivers/CMSIS/Include/core_cm4.h **** #endif
1555:Drivers/CMSIS/Include/core_cm4.h **** 
1556:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:Drivers/CMSIS/Include/core_cm4.h **** #endif
1560:Drivers/CMSIS/Include/core_cm4.h **** 
1561:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** 
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1572:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:Drivers/CMSIS/Include/core_cm4.h **** /**
1574:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:Drivers/CMSIS/Include/core_cm4.h **** */
1576:Drivers/CMSIS/Include/core_cm4.h **** 
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:Drivers/CMSIS/Include/core_cm4.h **** /**
1581:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:Drivers/CMSIS/Include/core_cm4.h ****   @{
1585:Drivers/CMSIS/Include/core_cm4.h ****  */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** /**
1588:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccgoDI2u.s 			page 39


1598:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1599:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:Drivers/CMSIS/Include/core_cm4.h **** 
1601:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:Drivers/CMSIS/Include/core_cm4.h **** }
1608:Drivers/CMSIS/Include/core_cm4.h **** 
1609:Drivers/CMSIS/Include/core_cm4.h **** 
1610:Drivers/CMSIS/Include/core_cm4.h **** /**
1611:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:Drivers/CMSIS/Include/core_cm4.h ****  */
1615:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:Drivers/CMSIS/Include/core_cm4.h **** {
1617:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:Drivers/CMSIS/Include/core_cm4.h **** }
1619:Drivers/CMSIS/Include/core_cm4.h **** 
1620:Drivers/CMSIS/Include/core_cm4.h **** 
1621:Drivers/CMSIS/Include/core_cm4.h **** /**
1622:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:Drivers/CMSIS/Include/core_cm4.h ****  */
1626:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:Drivers/CMSIS/Include/core_cm4.h **** {
1628:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:Drivers/CMSIS/Include/core_cm4.h **** }
1630:Drivers/CMSIS/Include/core_cm4.h **** 
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** /**
1633:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
1634:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:Drivers/CMSIS/Include/core_cm4.h ****  */
1637:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:Drivers/CMSIS/Include/core_cm4.h **** {
1639:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:Drivers/CMSIS/Include/core_cm4.h **** }
1641:Drivers/CMSIS/Include/core_cm4.h **** 
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** /**
1644:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:Drivers/CMSIS/Include/core_cm4.h ****  */
1650:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:Drivers/CMSIS/Include/core_cm4.h **** {
1652:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:Drivers/CMSIS/Include/core_cm4.h **** }
1654:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 40


1655:Drivers/CMSIS/Include/core_cm4.h **** 
1656:Drivers/CMSIS/Include/core_cm4.h **** /**
1657:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:Drivers/CMSIS/Include/core_cm4.h ****  */
1661:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm4.h **** {
1663:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:Drivers/CMSIS/Include/core_cm4.h ****  */
1685:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:Drivers/CMSIS/Include/core_cm4.h **** {
1687:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:Drivers/CMSIS/Include/core_cm4.h **** }
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** 
1691:Drivers/CMSIS/Include/core_cm4.h **** /**
1692:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 323              		.loc 2 1698 22 view .LVU95
 324              	.LBB9:
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
 325              		.loc 2 1700 3 view .LVU96
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 326              		.loc 2 1706 5 view .LVU97
 327              		.loc 2 1706 55 is_stmt 0 view .LVU98
ARM GAS  /tmp/ccgoDI2u.s 			page 41


 328 00e4 0F4B     		ldr	r3, .L15+12
 329 00e6 0022     		movs	r2, #0
 330 00e8 83F81223 		strb	r2, [r3, #786]
 331              	.LVL11:
 332              		.loc 2 1706 55 view .LVU99
 333              	.LBE9:
 334              	.LBE8:
 162:Src/ADCsrc.c  ****   //trigger becomes immediately effective once software starts ADC
 335              		.loc 1 162 3 is_stmt 1 view .LVU100
 336              	.LBB10:
 337              	.LBI10:
1626:Drivers/CMSIS/Include/core_cm4.h **** {
 338              		.loc 2 1626 22 view .LVU101
 339              	.LBB11:
1628:Drivers/CMSIS/Include/core_cm4.h **** }
 340              		.loc 2 1628 3 view .LVU102
1628:Drivers/CMSIS/Include/core_cm4.h **** }
 341              		.loc 2 1628 50 is_stmt 0 view .LVU103
 342 00ec 4FF48022 		mov	r2, #262144
 343 00f0 1A60     		str	r2, [r3]
 344              	.LVL12:
1628:Drivers/CMSIS/Include/core_cm4.h **** }
 345              		.loc 2 1628 50 view .LVU104
 346              	.LBE11:
 347              	.LBE10:
 164:Src/ADCsrc.c  **** 
 348              		.loc 1 164 3 is_stmt 1 view .LVU105
 164:Src/ADCsrc.c  **** 
 349              		.loc 1 164 12 is_stmt 0 view .LVU106
 350 00f2 A368     		ldr	r3, [r4, #8]
 351 00f4 43F00403 		orr	r3, r3, #4
 352 00f8 A360     		str	r3, [r4, #8]
 167:Src/ADCsrc.c  ****   ADC1->CR |= ADC_CR_ADEN;
 353              		.loc 1 167 3 is_stmt 1 view .LVU107
 167:Src/ADCsrc.c  ****   ADC1->CR |= ADC_CR_ADEN;
 354              		.loc 1 167 12 is_stmt 0 view .LVU108
 355 00fa A368     		ldr	r3, [r4, #8]
 356 00fc 23F00103 		bic	r3, r3, #1
 357 0100 A360     		str	r3, [r4, #8]
 168:Src/ADCsrc.c  **** 
 358              		.loc 1 168 3 is_stmt 1 view .LVU109
 168:Src/ADCsrc.c  **** 
 359              		.loc 1 168 12 is_stmt 0 view .LVU110
 360 0102 A368     		ldr	r3, [r4, #8]
 361 0104 43F00103 		orr	r3, r3, #1
 362 0108 A360     		str	r3, [r4, #8]
 171:Src/ADCsrc.c  **** }
 363              		.loc 1 171 3 is_stmt 1 view .LVU111
 364              	.L13:
 171:Src/ADCsrc.c  **** }
 365              		.loc 1 171 38 discriminator 1 view .LVU112
 171:Src/ADCsrc.c  **** }
 366              		.loc 1 171 8 discriminator 1 view .LVU113
 171:Src/ADCsrc.c  **** }
 367              		.loc 1 171 15 is_stmt 0 discriminator 1 view .LVU114
 368 010a 044B     		ldr	r3, .L15+4
 369 010c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccgoDI2u.s 			page 42


 171:Src/ADCsrc.c  **** }
 370              		.loc 1 171 8 discriminator 1 view .LVU115
 371 010e 13F0010F 		tst	r3, #1
 372 0112 FAD0     		beq	.L13
 172:Src/ADCsrc.c  **** 
 373              		.loc 1 172 1 view .LVU116
 374 0114 10BD     		pop	{r4, pc}
 375              	.L16:
 376 0116 00BF     		.align	2
 377              	.L15:
 378 0118 00100240 		.word	1073876992
 379 011c 00000450 		.word	1342439424
 380 0120 00030450 		.word	1342440192
 381 0124 00E100E0 		.word	-536813312
 382              		.cfi_endproc
 383              	.LFE343:
 385              		.section	.text.GPIO_Init,"ax",%progbits
 386              		.align	1
 387              		.global	GPIO_Init
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	GPIO_Init:
 394              	.LFB345:
 197:Src/ADCsrc.c  **** 
 198:Src/ADCsrc.c  **** 
 199:Src/ADCsrc.c  **** 
 200:Src/ADCsrc.c  **** //GPIO Initialization
 201:Src/ADCsrc.c  **** 
 202:Src/ADCsrc.c  **** 
 203:Src/ADCsrc.c  **** 
 204:Src/ADCsrc.c  **** 
 205:Src/ADCsrc.c  **** void GPIO_Init(void)
 206:Src/ADCsrc.c  **** {
 395              		.loc 1 206 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 207:Src/ADCsrc.c  **** //Enabled clock for GPIO: A
 208:Src/ADCsrc.c  **** RCC->AHB2ENR &= ~RCC_AHB2ENR_GPIOAEN;
 400              		.loc 1 208 1 view .LVU118
 401              		.loc 1 208 14 is_stmt 0 view .LVU119
 402 0000 084B     		ldr	r3, .L18
 403 0002 DA6C     		ldr	r2, [r3, #76]
 404 0004 22F00102 		bic	r2, r2, #1
 405 0008 DA64     		str	r2, [r3, #76]
 209:Src/ADCsrc.c  **** RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN;
 406              		.loc 1 209 1 is_stmt 1 view .LVU120
 407              		.loc 1 209 14 is_stmt 0 view .LVU121
 408 000a DA6C     		ldr	r2, [r3, #76]
 409 000c 42F00102 		orr	r2, r2, #1
 410 0010 DA64     		str	r2, [r3, #76]
 210:Src/ADCsrc.c  **** 
 211:Src/ADCsrc.c  **** 
 212:Src/ADCsrc.c  **** //Enable clock for GPIOB
ARM GAS  /tmp/ccgoDI2u.s 			page 43


 213:Src/ADCsrc.c  **** RCC->AHB2ENR &= ~RCC_AHB2ENR_GPIOBEN;
 411              		.loc 1 213 1 is_stmt 1 view .LVU122
 412              		.loc 1 213 14 is_stmt 0 view .LVU123
 413 0012 DA6C     		ldr	r2, [r3, #76]
 414 0014 22F00202 		bic	r2, r2, #2
 415 0018 DA64     		str	r2, [r3, #76]
 214:Src/ADCsrc.c  **** RCC->AHB2ENR |= RCC_AHB2ENR_GPIOBEN;
 416              		.loc 1 214 1 is_stmt 1 view .LVU124
 417              		.loc 1 214 14 is_stmt 0 view .LVU125
 418 001a DA6C     		ldr	r2, [r3, #76]
 419 001c 42F00202 		orr	r2, r2, #2
 420 0020 DA64     		str	r2, [r3, #76]
 215:Src/ADCsrc.c  **** 
 216:Src/ADCsrc.c  **** 
 217:Src/ADCsrc.c  **** }
 421              		.loc 1 217 1 view .LVU126
 422 0022 7047     		bx	lr
 423              	.L19:
 424              		.align	2
 425              	.L18:
 426 0024 00100240 		.word	1073876992
 427              		.cfi_endproc
 428              	.LFE345:
 430              		.section	.text.TIM4_Init,"ax",%progbits
 431              		.align	1
 432              		.global	TIM4_Init
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	TIM4_Init:
 439              	.LFB346:
 218:Src/ADCsrc.c  **** 
 219:Src/ADCsrc.c  **** 
 220:Src/ADCsrc.c  **** //TIMER 4 Initialization for ADC
 221:Src/ADCsrc.c  **** 
 222:Src/ADCsrc.c  **** void TIM4_Init(void)
 223:Src/ADCsrc.c  **** {
 440              		.loc 1 223 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 224:Src/ADCsrc.c  ****   /*Enable Clock for Timer 4 */
 225:Src/ADCsrc.c  ****   RCC->APB1ENR1 |= RCC_APB1ENR1_TIM4EN;
 445              		.loc 1 225 3 view .LVU128
 446              		.loc 1 225 17 is_stmt 0 view .LVU129
 447 0000 184A     		ldr	r2, .L21
 448 0002 936D     		ldr	r3, [r2, #88]
 449 0004 43F00403 		orr	r3, r3, #4
 450 0008 9365     		str	r3, [r2, #88]
 226:Src/ADCsrc.c  **** 
 227:Src/ADCsrc.c  ****   /*clear edge-aligned mode */
 228:Src/ADCsrc.c  ****   TIM4->CR1 &= ~TIM_CR1_CMS;
 451              		.loc 1 228 3 is_stmt 1 view .LVU130
 452              		.loc 1 228 13 is_stmt 0 view .LVU131
 453 000a 174B     		ldr	r3, .L21+4
ARM GAS  /tmp/ccgoDI2u.s 			page 44


 454 000c 1A68     		ldr	r2, [r3]
 455 000e 22F06002 		bic	r2, r2, #96
 456 0012 1A60     		str	r2, [r3]
 229:Src/ADCsrc.c  **** 
 230:Src/ADCsrc.c  ****   /*Counting Direction up counting */
 231:Src/ADCsrc.c  ****   TIM4->CR1 &= ~TIM_CR1_DIR;
 457              		.loc 1 231 3 is_stmt 1 view .LVU132
 458              		.loc 1 231 13 is_stmt 0 view .LVU133
 459 0014 1A68     		ldr	r2, [r3]
 460 0016 22F01002 		bic	r2, r2, #16
 461 001a 1A60     		str	r2, [r3]
 232:Src/ADCsrc.c  **** 
 233:Src/ADCsrc.c  ****   /*Master Mode Selection */
 234:Src/ADCsrc.c  ****   /*000: UG bit from the EGR register is used as trigger output (TRGO) */
 235:Src/ADCsrc.c  ****   /*001: Enable - The counter enable signal is used as trigger output (TRGO) */
 236:Src/ADCsrc.c  ****   /*010: Update - the update event is selected as trigger output (TRGO) */
 237:Src/ADCsrc.c  ****   /*011: Compare pulse - the trigger output send a positive when CC1IF flag */
 238:Src/ADCsrc.c  ****   /* CC1IF flag is to be set (Even if it was already high) */
 239:Src/ADCsrc.c  ****   /*100: Compare - OC1REF signal is used as trigger output (TRGO)
 240:Src/ADCsrc.c  ****   /*101: Compare- OC2REF signal is used as trigger output*/
 241:Src/ADCsrc.c  ****   /*110: Compare - OC3REF signal "" */
 242:Src/ADCsrc.c  ****   /*111: Compare - OC4REF signal ""*/
 243:Src/ADCsrc.c  **** 
 244:Src/ADCsrc.c  ****   /*Clear mster mode select */
 245:Src/ADCsrc.c  ****   TIM4->CR2 &= ~TIM_CR2_MMS;
 462              		.loc 1 245 3 is_stmt 1 view .LVU134
 463              		.loc 1 245 13 is_stmt 0 view .LVU135
 464 001c 5A68     		ldr	r2, [r3, #4]
 465 001e 22F07002 		bic	r2, r2, #112
 466 0022 5A60     		str	r2, [r3, #4]
 246:Src/ADCsrc.c  **** 
 247:Src/ADCsrc.c  ****   /*Select 100, OC1REF as trigger */
 248:Src/ADCsrc.c  ****   TIM4->CR2 |= TIM_CR2_MMS_2;
 467              		.loc 1 248 3 is_stmt 1 view .LVU136
 468              		.loc 1 248 13 is_stmt 0 view .LVU137
 469 0024 5A68     		ldr	r2, [r3, #4]
 470 0026 42F04002 		orr	r2, r2, #64
 471 002a 5A60     		str	r2, [r3, #4]
 249:Src/ADCsrc.c  **** 
 250:Src/ADCsrc.c  ****   /*OC1M: Output compare 1 mode */
 251:Src/ADCsrc.c  ****   TIM4->CCMR1 &= ~TIM_CCMR1_OC1M;
 472              		.loc 1 251 3 is_stmt 1 view .LVU138
 473              		.loc 1 251 15 is_stmt 0 view .LVU139
 474 002c 9A69     		ldr	r2, [r3, #24]
 475 002e 22F48032 		bic	r2, r2, #65536
 476 0032 22F07002 		bic	r2, r2, #112
 477 0036 9A61     		str	r2, [r3, #24]
 252:Src/ADCsrc.c  ****   /*0110 PWM mode 1*/
 253:Src/ADCsrc.c  ****   TIM4->CCMR1 |= TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_2;
 478              		.loc 1 253 3 is_stmt 1 view .LVU140
 479              		.loc 1 253 15 is_stmt 0 view .LVU141
 480 0038 9A69     		ldr	r2, [r3, #24]
 481 003a 42F06002 		orr	r2, r2, #96
 482 003e 9A61     		str	r2, [r3, #24]
 254:Src/ADCsrc.c  **** 
 255:Src/ADCsrc.c  ****   /*Timer driving frequency = 80MHz/(1+PSC) = 80M/(1+7)= 10MHz */
 256:Src/ADCsrc.c  ****   /*Trigger frequency 10MHz / (1 + ARR)= 10kHz */
ARM GAS  /tmp/ccgoDI2u.s 			page 45


 257:Src/ADCsrc.c  ****   TIM4->PSC = 7;
 483              		.loc 1 257 3 is_stmt 1 view .LVU142
 484              		.loc 1 257 13 is_stmt 0 view .LVU143
 485 0040 0722     		movs	r2, #7
 486 0042 9A62     		str	r2, [r3, #40]
 258:Src/ADCsrc.c  ****   TIM4->ARR = 999;
 487              		.loc 1 258 3 is_stmt 1 view .LVU144
 488              		.loc 1 258 13 is_stmt 0 view .LVU145
 489 0044 40F2E732 		movw	r2, #999
 490 0048 DA62     		str	r2, [r3, #44]
 259:Src/ADCsrc.c  ****   /*Duty ratio of 50% */
 260:Src/ADCsrc.c  ****   TIM4->CCR1 = 500;
 491              		.loc 1 260 3 is_stmt 1 view .LVU146
 492              		.loc 1 260 14 is_stmt 0 view .LVU147
 493 004a 4FF4FA72 		mov	r2, #500
 494 004e 5A63     		str	r2, [r3, #52]
 261:Src/ADCsrc.c  **** 
 262:Src/ADCsrc.c  ****   /*OC1 Signal is output */
 263:Src/ADCsrc.c  ****   TIM4->CCER |= TIM_CCER_CC1E;
 495              		.loc 1 263 3 is_stmt 1 view .LVU148
 496              		.loc 1 263 14 is_stmt 0 view .LVU149
 497 0050 1A6A     		ldr	r2, [r3, #32]
 498 0052 42F00102 		orr	r2, r2, #1
 499 0056 1A62     		str	r2, [r3, #32]
 264:Src/ADCsrc.c  **** 
 265:Src/ADCsrc.c  ****   /*Enable Timer */
 266:Src/ADCsrc.c  ****   TIM4->CR1 |= TIM_CR1_CEN;
 500              		.loc 1 266 3 is_stmt 1 view .LVU150
 501              		.loc 1 266 13 is_stmt 0 view .LVU151
 502 0058 1A68     		ldr	r2, [r3]
 503 005a 42F00102 		orr	r2, r2, #1
 504 005e 1A60     		str	r2, [r3]
 267:Src/ADCsrc.c  **** }
 505              		.loc 1 267 1 view .LVU152
 506 0060 7047     		bx	lr
 507              	.L22:
 508 0062 00BF     		.align	2
 509              	.L21:
 510 0064 00100240 		.word	1073876992
 511 0068 00080040 		.word	1073743872
 512              		.cfi_endproc
 513              	.LFE346:
 515              		.section	.text.ADC_Calibration,"ax",%progbits
 516              		.align	1
 517              		.global	ADC_Calibration
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	ADC_Calibration:
 524              	.LFB347:
 268:Src/ADCsrc.c  **** 
 269:Src/ADCsrc.c  **** 
 270:Src/ADCsrc.c  **** 
 271:Src/ADCsrc.c  **** 
 272:Src/ADCsrc.c  **** /* The function described below calibrates the ADC after wake up*/
 273:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 46


 274:Src/ADCsrc.c  **** void ADC_Calibration(void){
 525              		.loc 1 274 27 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 275:Src/ADCsrc.c  ****   /*Make sure the ADC is off*/
 276:Src/ADCsrc.c  ****   ADC1 -> CR &= ~ADC_CR_ADEN;
 530              		.loc 1 276 3 view .LVU154
 531              		.loc 1 276 14 is_stmt 0 view .LVU155
 532 0000 0B4A     		ldr	r2, .L26
 533 0002 9368     		ldr	r3, [r2, #8]
 534 0004 23F00103 		bic	r3, r3, #1
 535 0008 9360     		str	r3, [r2, #8]
 277:Src/ADCsrc.c  **** 
 278:Src/ADCsrc.c  ****   /*Wait until ADRDY is reset by the hardware*/
 279:Src/ADCsrc.c  ****   while((ADC1 -> ISR & ADC_ISR_ADRDY) == ADC_ISR_ADRDY);
 536              		.loc 1 279 3 is_stmt 1 view .LVU156
 537              	.L24:
 538              		.loc 1 279 56 discriminator 1 view .LVU157
 539              		.loc 1 279 8 discriminator 1 view .LVU158
 540              		.loc 1 279 15 is_stmt 0 discriminator 1 view .LVU159
 541 000a 094B     		ldr	r3, .L26
 542 000c 1B68     		ldr	r3, [r3]
 543              		.loc 1 279 8 discriminator 1 view .LVU160
 544 000e 13F0010F 		tst	r3, #1
 545 0012 FAD1     		bne	.L24
 280:Src/ADCsrc.c  **** 
 281:Src/ADCsrc.c  ****   /*Calibrate for single ended ADC input*/
 282:Src/ADCsrc.c  ****   /*ADCALDIF = 0: Single ended, = 1 for differential input*/
 283:Src/ADCsrc.c  ****   ADC1 -> CR &= ~ADC_CR_ADCALDIF;
 546              		.loc 1 283 3 is_stmt 1 view .LVU161
 547              		.loc 1 283 14 is_stmt 0 view .LVU162
 548 0014 064B     		ldr	r3, .L26
 549 0016 9A68     		ldr	r2, [r3, #8]
 550 0018 22F08042 		bic	r2, r2, #1073741824
 551 001c 9A60     		str	r2, [r3, #8]
 284:Src/ADCsrc.c  **** 
 285:Src/ADCsrc.c  ****   /*ADC Calibration can only happen when ADEN = 0 which is disabled*/
 286:Src/ADCsrc.c  ****   /*Each ADC provides automatic calibration procedure*/
 287:Src/ADCsrc.c  ****   ADC1 -> CR |= ADC_CR_ADCAL;
 552              		.loc 1 287 3 is_stmt 1 view .LVU163
 553              		.loc 1 287 14 is_stmt 0 view .LVU164
 554 001e 9A68     		ldr	r2, [r3, #8]
 555 0020 42F00042 		orr	r2, r2, #-2147483648
 556 0024 9A60     		str	r2, [r3, #8]
 288:Src/ADCsrc.c  **** 
 289:Src/ADCsrc.c  ****   /*ADCAL stays at 1 during the entire calibration process*/
 290:Src/ADCsrc.c  ****   /*cleared by hardware after calibration is complete, needs to wait*/
 291:Src/ADCsrc.c  ****   while((ADC1 -> CR & ADC_CR_ADCAL) == ADC_CR_ADCAL);
 557              		.loc 1 291 3 is_stmt 1 view .LVU165
 558              	.L25:
 559              		.loc 1 291 53 discriminator 1 view .LVU166
 560              		.loc 1 291 8 discriminator 1 view .LVU167
 561              		.loc 1 291 15 is_stmt 0 discriminator 1 view .LVU168
 562 0026 024B     		ldr	r3, .L26
 563 0028 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccgoDI2u.s 			page 47


 564              		.loc 1 291 8 discriminator 1 view .LVU169
 565 002a 002B     		cmp	r3, #0
 566 002c FBDB     		blt	.L25
 292:Src/ADCsrc.c  **** 
 293:Src/ADCsrc.c  **** }
 567              		.loc 1 293 1 view .LVU170
 568 002e 7047     		bx	lr
 569              	.L27:
 570              		.align	2
 571              	.L26:
 572 0030 00000450 		.word	1342439424
 573              		.cfi_endproc
 574              	.LFE347:
 576              		.section	.text.getFloat,"ax",%progbits
 577              		.align	1
 578              		.global	getFloat
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	getFloat:
 585              	.LVL13:
 586              	.LFB348:
 294:Src/ADCsrc.c  **** 
 295:Src/ADCsrc.c  **** void getFloat(uint32_t *input, float *output, int nsamp)
 296:Src/ADCsrc.c  **** {
 587              		.loc 1 296 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              		.loc 1 296 1 is_stmt 0 view .LVU172
 593 0000 10B4     		push	{r4}
 594              	.LCFI4:
 595              		.cfi_def_cfa_offset 4
 596              		.cfi_offset 4, -4
 297:Src/ADCsrc.c  ****   int i;
 597              		.loc 1 297 3 is_stmt 1 view .LVU173
 298:Src/ADCsrc.c  **** 
 299:Src/ADCsrc.c  ****   // Now convert the valid ADC data into the caller's array of floats.
 300:Src/ADCsrc.c  ****   // Samples are normalized to range from -1.0 to 1.0
 301:Src/ADCsrc.c  ****   // 1/32768 = 3.0517578e-05  (Multiplication is much faster than dividing)
 302:Src/ADCsrc.c  **** 
 303:Src/ADCsrc.c  ****   /*crazy left aligned math to normalize data */
 304:Src/ADCsrc.c  ****   /*shamelessly borrowed from DONALD HUMMELS of ECE department */
 305:Src/ADCsrc.c  ****   for (i=0; i<nsamp; i++) {
 598              		.loc 1 305 3 view .LVU174
 599              	.LVL14:
 600              		.loc 1 305 9 is_stmt 0 view .LVU175
 601 0002 0024     		movs	r4, #0
 602              	.LVL15:
 603              	.L29:
 604              		.loc 1 305 13 is_stmt 1 discriminator 1 view .LVU176
 605              		.loc 1 305 3 is_stmt 0 discriminator 1 view .LVU177
 606 0004 9442     		cmp	r4, r2
 607 0006 12DA     		bge	.L32
 306:Src/ADCsrc.c  ****      // 1/32768 = 3.0517578e-05  (Multiplication is much faster than dividing)
ARM GAS  /tmp/ccgoDI2u.s 			page 48


 307:Src/ADCsrc.c  ****         output[i] = ((float)((int)input[i]-32767))*3.0517578e-05f;
 608              		.loc 1 307 9 is_stmt 1 discriminator 3 view .LVU178
 609              		.loc 1 307 40 is_stmt 0 discriminator 3 view .LVU179
 610 0008 50F82430 		ldr	r3, [r0, r4, lsl #2]
 611              		.loc 1 307 43 discriminator 3 view .LVU180
 612 000c A3F5FF43 		sub	r3, r3, #32640
 613 0010 7F3B     		subs	r3, r3, #127
 614              		.loc 1 307 22 discriminator 3 view .LVU181
 615 0012 07EE903A 		vmov	s15, r3	@ int
 616 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 617              		.loc 1 307 15 discriminator 3 view .LVU182
 618 001a 01EB8403 		add	r3, r1, r4, lsl #2
 619              		.loc 1 307 51 discriminator 3 view .LVU183
 620 001e 9FED057A 		vldr.32	s14, .L33
 621 0022 67EE877A 		vmul.f32	s15, s15, s14
 622              		.loc 1 307 19 discriminator 3 view .LVU184
 623 0026 C3ED007A 		vstr.32	s15, [r3]
 305:Src/ADCsrc.c  ****      // 1/32768 = 3.0517578e-05  (Multiplication is much faster than dividing)
 624              		.loc 1 305 22 is_stmt 1 discriminator 3 view .LVU185
 305:Src/ADCsrc.c  ****      // 1/32768 = 3.0517578e-05  (Multiplication is much faster than dividing)
 625              		.loc 1 305 23 is_stmt 0 discriminator 3 view .LVU186
 626 002a 0134     		adds	r4, r4, #1
 627              	.LVL16:
 305:Src/ADCsrc.c  ****      // 1/32768 = 3.0517578e-05  (Multiplication is much faster than dividing)
 628              		.loc 1 305 23 discriminator 3 view .LVU187
 629 002c EAE7     		b	.L29
 630              	.L32:
 308:Src/ADCsrc.c  ****       }
 309:Src/ADCsrc.c  **** 
 310:Src/ADCsrc.c  **** }
 631              		.loc 1 310 1 view .LVU188
 632 002e 5DF8044B 		ldr	r4, [sp], #4
 633              	.LCFI5:
 634              		.cfi_restore 4
 635              		.cfi_def_cfa_offset 0
 636              	.LVL17:
 637              		.loc 1 310 1 view .LVU189
 638 0032 7047     		bx	lr
 639              	.L34:
 640              		.align	2
 641              	.L33:
 642 0034 00000038 		.word	939524096
 643              		.cfi_endproc
 644              	.LFE348:
 646              		.section	.text.arm_mean_f32,"ax",%progbits
 647              		.align	1
 648              		.global	arm_mean_f32
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv4-sp-d16
 654              	arm_mean_f32:
 655              	.LVL18:
 656              	.LFB350:
 311:Src/ADCsrc.c  **** 
 312:Src/ADCsrc.c  **** 
 313:Src/ADCsrc.c  **** void findFrequency(float *samples, int nsamp, float *note)
ARM GAS  /tmp/ccgoDI2u.s 			page 49


 314:Src/ADCsrc.c  **** {
 315:Src/ADCsrc.c  ****    uint32_t i, n, j, maxIndex;
 316:Src/ADCsrc.c  ****    float avg, dev, maxVal;
 317:Src/ADCsrc.c  ****    float output1[nsamp*2], output2[nsamp];
 318:Src/ADCsrc.c  ****    n=1;
 319:Src/ADCsrc.c  **** 
 320:Src/ADCsrc.c  **** 
 321:Src/ADCsrc.c  **** 
 322:Src/ADCsrc.c  ****  /*Perform correlation, performing on "samples" is autocorrelation */
 323:Src/ADCsrc.c  ****  /*save to output buffer of twice size of input*/
 324:Src/ADCsrc.c  ****  arm_correlate_f32(samples, nsamp, samples, nsamp, output1);
 325:Src/ADCsrc.c  **** 
 326:Src/ADCsrc.c  **** /*find mean of output1 one buffer, save to avg passed by reference */
 327:Src/ADCsrc.c  **** /*faster since function doesn't make local coyp of avg */
 328:Src/ADCsrc.c  ****  arm_mean_f32(output1, nsamp*2, &avg);
 329:Src/ADCsrc.c  **** 
 330:Src/ADCsrc.c  **** 
 331:Src/ADCsrc.c  **** 
 332:Src/ADCsrc.c  **** 
 333:Src/ADCsrc.c  **** /* subtract mean to center signal at 0*/
 334:Src/ADCsrc.c  **** for(i=0; i<nsamp*2; i++){
 335:Src/ADCsrc.c  ****   output1[i] -= avg;
 336:Src/ADCsrc.c  **** 
 337:Src/ADCsrc.c  **** }
 338:Src/ADCsrc.c  **** 
 339:Src/ADCsrc.c  ****   /*Find Max value as well as corresponding index of said value */
 340:Src/ADCsrc.c  ****    arm_max_f32(output1, nsamp*2, &maxVal, &maxIndex);
 341:Src/ADCsrc.c  **** 
 342:Src/ADCsrc.c  **** 
 343:Src/ADCsrc.c  **** /* normalize */
 344:Src/ADCsrc.c  **** /*Amplitude of most dominant peak of Lag matrix is total energy */
 345:Src/ADCsrc.c  **** /*divide by total energy of signal to normalize */
 346:Src/ADCsrc.c  **** /*nice property of autocorrelation */
 347:Src/ADCsrc.c  ****    for(i=0; i<nsamp*2; i++){
 348:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 349:Src/ADCsrc.c  ****    }
 350:Src/ADCsrc.c  **** 
 351:Src/ADCsrc.c  **** 
 352:Src/ADCsrc.c  **** 
 353:Src/ADCsrc.c  ****    /* set origin of autocorre to be max peak */
 354:Src/ADCsrc.c  ****    for(i=0; i<nsamp; i++){
 355:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 356:Src/ADCsrc.c  **** }
 357:Src/ADCsrc.c  **** 
 358:Src/ADCsrc.c  **** /*find std deviation and mean of normalized signal */
 359:Src/ADCsrc.c  ****  arm_mean_f32(output2, nsamp, &avg);
 360:Src/ADCsrc.c  ****  arm_std_f32(output2, nsamp, &dev);
 361:Src/ADCsrc.c  **** 
 362:Src/ADCsrc.c  **** 
 363:Src/ADCsrc.c  **** 
 364:Src/ADCsrc.c  **** /* eliminate non dominant peaks */
 365:Src/ADCsrc.c  **** /*using std deviation and avg as threshold */
 366:Src/ADCsrc.c  ****  for (i=0; i<nsamp; i++) {
 367:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 368:Src/ADCsrc.c  ****  }
 369:Src/ADCsrc.c  **** 
 370:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 50


 371:Src/ADCsrc.c  **** /* peak detection */
 372:Src/ADCsrc.c  **** /*BRUTE force iterate through array */
 373:Src/ADCsrc.c  **** /*check next value and last value */
 374:Src/ADCsrc.c  **** /*iterate if not peak */
 375:Src/ADCsrc.c  ****    for (i = 1; i<nsamp-1; i++ ) {
 376:Src/ADCsrc.c  **** 
 377:Src/ADCsrc.c  ****       /*forward difference operator to find discrete difference */
 378:Src/ADCsrc.c  ****       /*effectively derivative */
 379:Src/ADCsrc.c  ****       if(((output2[i] - output2[i-1])>0) && ((output2[i+1]-output2[i])<0)){
 380:Src/ADCsrc.c  ****         n = i;
 381:Src/ADCsrc.c  ****         break;
 382:Src/ADCsrc.c  ****       }
 383:Src/ADCsrc.c  **** 
 384:Src/ADCsrc.c  ****       else if((output2[i] - output2[i-1]) > 0) continue;
 385:Src/ADCsrc.c  **** 
 386:Src/ADCsrc.c  ****       else if((output2[i+1] - output2[i]) < 0) continue;
 387:Src/ADCsrc.c  ****    }
 388:Src/ADCsrc.c  **** 
 389:Src/ADCsrc.c  ****           /*sample rate /divided by number of samples to peak */
 390:Src/ADCsrc.c  ****           /*returns frequency in Hz */
 391:Src/ADCsrc.c  ****    *note = 10000.0/((float) n);
 392:Src/ADCsrc.c  **** 
 393:Src/ADCsrc.c  **** 
 394:Src/ADCsrc.c  **** }
 395:Src/ADCsrc.c  **** 
 396:Src/ADCsrc.c  **** 
 397:Src/ADCsrc.c  **** 
 398:Src/ADCsrc.c  **** 
 399:Src/ADCsrc.c  **** 
 400:Src/ADCsrc.c  **** 
 401:Src/ADCsrc.c  **** 
 402:Src/ADCsrc.c  **** 
 403:Src/ADCsrc.c  **** /* ----------------------------------------------------------------------
 404:Src/ADCsrc.c  **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 405:Src/ADCsrc.c  **** *
 406:Src/ADCsrc.c  **** * $Date:        19. March 2015
 407:Src/ADCsrc.c  **** * $Revision: 	V.1.4.5
 408:Src/ADCsrc.c  **** *
 409:Src/ADCsrc.c  **** * Project: 	    CMSIS DSP Library
 410:Src/ADCsrc.c  **** * Title:		arm_mean_f32.c
 411:Src/ADCsrc.c  **** *
 412:Src/ADCsrc.c  **** * Description:	Mean value of a floating-point vector.
 413:Src/ADCsrc.c  **** *
 414:Src/ADCsrc.c  **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
 415:Src/ADCsrc.c  **** *
 416:Src/ADCsrc.c  **** * Redistribution and use in source and binary forms, with or without
 417:Src/ADCsrc.c  **** * modification, are permitted provided that the following conditions
 418:Src/ADCsrc.c  **** * are met:
 419:Src/ADCsrc.c  **** *   - Redistributions of source code must retain the above copyright
 420:Src/ADCsrc.c  **** *     notice, this list of conditions and the following disclaimer.
 421:Src/ADCsrc.c  **** *   - Redistributions in binary form must reproduce the above copyright
 422:Src/ADCsrc.c  **** *     notice, this list of conditions and the following disclaimer in
 423:Src/ADCsrc.c  **** *     the documentation and/or other materials provided with the
 424:Src/ADCsrc.c  **** *     distribution.
 425:Src/ADCsrc.c  **** *   - Neither the name of ARM LIMITED nor the names of its contributors
 426:Src/ADCsrc.c  **** *     may be used to endorse or promote products derived from this
 427:Src/ADCsrc.c  **** *     software without specific prior written permission.
ARM GAS  /tmp/ccgoDI2u.s 			page 51


 428:Src/ADCsrc.c  **** *
 429:Src/ADCsrc.c  **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 430:Src/ADCsrc.c  **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 431:Src/ADCsrc.c  **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 432:Src/ADCsrc.c  **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 433:Src/ADCsrc.c  **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 434:Src/ADCsrc.c  **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 435:Src/ADCsrc.c  **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 436:Src/ADCsrc.c  **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 437:Src/ADCsrc.c  **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 438:Src/ADCsrc.c  **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 439:Src/ADCsrc.c  **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 440:Src/ADCsrc.c  **** * POSSIBILITY OF SUCH DAMAGE.
 441:Src/ADCsrc.c  **** * ---------------------------------------------------------------------------- */
 442:Src/ADCsrc.c  **** 
 443:Src/ADCsrc.c  **** 
 444:Src/ADCsrc.c  **** 
 445:Src/ADCsrc.c  **** /**
 446:Src/ADCsrc.c  ****  * @ingroup groupStats
 447:Src/ADCsrc.c  ****  */
 448:Src/ADCsrc.c  **** 
 449:Src/ADCsrc.c  **** /**
 450:Src/ADCsrc.c  ****  * @defgroup mean Mean
 451:Src/ADCsrc.c  ****  *
 452:Src/ADCsrc.c  ****  * Calculates the mean of the input vector. Mean is defined as the average of the elements in the v
 453:Src/ADCsrc.c  ****  * The underlying algorithm is used:
 454:Src/ADCsrc.c  ****  *
 455:Src/ADCsrc.c  ****  * <pre>
 456:Src/ADCsrc.c  ****  * 	Result = (pSrc[0] + pSrc[1] + pSrc[2] + ... + pSrc[blockSize-1]) / blockSize;
 457:Src/ADCsrc.c  ****  * </pre>
 458:Src/ADCsrc.c  ****  *
 459:Src/ADCsrc.c  ****  * There are separate functions for floating-point, Q31, Q15, and Q7 data types.
 460:Src/ADCsrc.c  ****  */
 461:Src/ADCsrc.c  **** 
 462:Src/ADCsrc.c  **** /**
 463:Src/ADCsrc.c  ****  * @addtogroup mean
 464:Src/ADCsrc.c  ****  * @{
 465:Src/ADCsrc.c  ****  */
 466:Src/ADCsrc.c  **** 
 467:Src/ADCsrc.c  **** 
 468:Src/ADCsrc.c  **** /**
 469:Src/ADCsrc.c  ****  * @brief Mean value of a floating-point vector.
 470:Src/ADCsrc.c  ****  * @param[in]       *pSrc points to the input vector
 471:Src/ADCsrc.c  ****  * @param[in]       blockSize length of the input vector
 472:Src/ADCsrc.c  ****  * @param[out]      *pResult mean value returned here
 473:Src/ADCsrc.c  ****  * @return none.
 474:Src/ADCsrc.c  ****  */
 475:Src/ADCsrc.c  **** 
 476:Src/ADCsrc.c  **** 
 477:Src/ADCsrc.c  **** void arm_mean_f32(
 478:Src/ADCsrc.c  ****   float32_t * pSrc,
 479:Src/ADCsrc.c  ****   uint32_t blockSize,
 480:Src/ADCsrc.c  ****   float32_t * pResult)
 481:Src/ADCsrc.c  **** {
 657              		.loc 1 481 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccgoDI2u.s 			page 52


 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 482:Src/ADCsrc.c  ****   float32_t sum = 0.0f;                          /* Temporary result storage */
 662              		.loc 1 482 3 view .LVU191
 483:Src/ADCsrc.c  ****   uint32_t blkCnt;                               /* loop counter */
 663              		.loc 1 483 3 view .LVU192
 484:Src/ADCsrc.c  **** 
 485:Src/ADCsrc.c  **** #ifndef ARM_MATH_CM0_FAMILY
 486:Src/ADCsrc.c  **** 
 487:Src/ADCsrc.c  ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 488:Src/ADCsrc.c  ****   float32_t in1, in2, in3, in4;
 664              		.loc 1 488 3 view .LVU193
 489:Src/ADCsrc.c  **** 
 490:Src/ADCsrc.c  ****   /*loop Unrolling */
 491:Src/ADCsrc.c  ****   blkCnt = blockSize >> 2u;
 665              		.loc 1 491 3 view .LVU194
 666              		.loc 1 491 10 is_stmt 0 view .LVU195
 667 0000 8B08     		lsrs	r3, r1, #2
 668              	.LVL19:
 492:Src/ADCsrc.c  **** 
 493:Src/ADCsrc.c  ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 494:Src/ADCsrc.c  ****    ** a second loop below computes the remaining 1 to 3 samples. */
 495:Src/ADCsrc.c  ****   while(blkCnt > 0u)
 669              		.loc 1 495 3 is_stmt 1 view .LVU196
 482:Src/ADCsrc.c  ****   uint32_t blkCnt;                               /* loop counter */
 670              		.loc 1 482 13 is_stmt 0 view .LVU197
 671 0002 DFED147A 		vldr.32	s15, .L41
 672              	.LVL20:
 673              	.L36:
 674              		.loc 1 495 8 is_stmt 1 view .LVU198
 675 0006 93B1     		cbz	r3, .L40
 496:Src/ADCsrc.c  ****   {
 497:Src/ADCsrc.c  ****     /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
 498:Src/ADCsrc.c  ****     in1 = *pSrc++;
 676              		.loc 1 498 5 view .LVU199
 677              	.LVL21:
 678              		.loc 1 498 9 is_stmt 0 view .LVU200
 679 0008 D0ED005A 		vldr.32	s11, [r0]
 680              	.LVL22:
 499:Src/ADCsrc.c  ****     in2 = *pSrc++;
 681              		.loc 1 499 5 is_stmt 1 view .LVU201
 682              		.loc 1 499 9 is_stmt 0 view .LVU202
 683 000c D0ED016A 		vldr.32	s13, [r0, #4]
 684              	.LVL23:
 500:Src/ADCsrc.c  ****     in3 = *pSrc++;
 685              		.loc 1 500 5 is_stmt 1 view .LVU203
 686              		.loc 1 500 9 is_stmt 0 view .LVU204
 687 0010 90ED027A 		vldr.32	s14, [r0, #8]
 688              	.LVL24:
 501:Src/ADCsrc.c  ****     in4 = *pSrc++;
 689              		.loc 1 501 5 is_stmt 1 view .LVU205
 690              		.loc 1 501 9 is_stmt 0 view .LVU206
 691 0014 90ED036A 		vldr.32	s12, [r0, #12]
 692              	.LVL25:
 502:Src/ADCsrc.c  **** 
 503:Src/ADCsrc.c  ****     sum += in1;
 693              		.loc 1 503 5 is_stmt 1 view .LVU207
ARM GAS  /tmp/ccgoDI2u.s 			page 53


 694              		.loc 1 503 9 is_stmt 0 view .LVU208
 695 0018 77EEA57A 		vadd.f32	s15, s15, s11
 696              	.LVL26:
 504:Src/ADCsrc.c  ****     sum += in2;
 697              		.loc 1 504 5 is_stmt 1 view .LVU209
 698              		.loc 1 504 9 is_stmt 0 view .LVU210
 699 001c 76EEA77A 		vadd.f32	s15, s13, s15
 700              	.LVL27:
 505:Src/ADCsrc.c  ****     sum += in3;
 701              		.loc 1 505 5 is_stmt 1 view .LVU211
 702              		.loc 1 505 9 is_stmt 0 view .LVU212
 703 0020 77EE277A 		vadd.f32	s15, s14, s15
 704              	.LVL28:
 506:Src/ADCsrc.c  ****     sum += in4;
 705              		.loc 1 506 5 is_stmt 1 view .LVU213
 706              		.loc 1 506 9 is_stmt 0 view .LVU214
 707 0024 76EE277A 		vadd.f32	s15, s12, s15
 708              	.LVL29:
 507:Src/ADCsrc.c  **** 
 508:Src/ADCsrc.c  ****     /* Decrement the loop counter */
 509:Src/ADCsrc.c  ****     blkCnt--;
 709              		.loc 1 509 5 is_stmt 1 view .LVU215
 710              		.loc 1 509 11 is_stmt 0 view .LVU216
 711 0028 013B     		subs	r3, r3, #1
 712              	.LVL30:
 501:Src/ADCsrc.c  **** 
 713              		.loc 1 501 16 view .LVU217
 714 002a 1030     		adds	r0, r0, #16
 715              	.LVL31:
 501:Src/ADCsrc.c  **** 
 716              		.loc 1 501 16 view .LVU218
 717 002c EBE7     		b	.L36
 718              	.LVL32:
 719              	.L40:
 510:Src/ADCsrc.c  ****   }
 511:Src/ADCsrc.c  **** 
 512:Src/ADCsrc.c  ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 513:Src/ADCsrc.c  ****    ** No loop unrolling is used. */
 514:Src/ADCsrc.c  ****   blkCnt = blockSize % 0x4u;
 720              		.loc 1 514 3 is_stmt 1 view .LVU219
 721              		.loc 1 514 10 is_stmt 0 view .LVU220
 722 002e 01F00303 		and	r3, r1, #3
 723              	.LVL33:
 515:Src/ADCsrc.c  **** 
 516:Src/ADCsrc.c  **** #else
 517:Src/ADCsrc.c  **** 
 518:Src/ADCsrc.c  ****   /* Run the below code for Cortex-M0 */
 519:Src/ADCsrc.c  **** 
 520:Src/ADCsrc.c  ****   /* Loop over blockSize number of values */
 521:Src/ADCsrc.c  ****   blkCnt = blockSize;
 522:Src/ADCsrc.c  **** 
 523:Src/ADCsrc.c  **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 524:Src/ADCsrc.c  **** 
 525:Src/ADCsrc.c  ****   while(blkCnt > 0u)
 724              		.loc 1 525 3 is_stmt 1 view .LVU221
 725              		.loc 1 525 8 is_stmt 0 view .LVU222
 726 0032 04E0     		b	.L38
ARM GAS  /tmp/ccgoDI2u.s 			page 54


 727              	.L39:
 526:Src/ADCsrc.c  ****   {
 527:Src/ADCsrc.c  ****     /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
 528:Src/ADCsrc.c  ****     sum += *pSrc++;
 728              		.loc 1 528 5 is_stmt 1 view .LVU223
 729              	.LVL34:
 730              		.loc 1 528 12 is_stmt 0 view .LVU224
 731 0034 B0EC017A 		vldmia.32	r0!, {s14}
 732              	.LVL35:
 733              		.loc 1 528 9 view .LVU225
 734 0038 77EE877A 		vadd.f32	s15, s15, s14
 735              	.LVL36:
 529:Src/ADCsrc.c  **** 
 530:Src/ADCsrc.c  ****     /* Decrement the loop counter */
 531:Src/ADCsrc.c  ****     blkCnt--;
 736              		.loc 1 531 5 is_stmt 1 view .LVU226
 737              		.loc 1 531 11 is_stmt 0 view .LVU227
 738 003c 013B     		subs	r3, r3, #1
 739              	.LVL37:
 740              	.L38:
 525:Src/ADCsrc.c  ****   {
 741              		.loc 1 525 8 is_stmt 1 view .LVU228
 742 003e 002B     		cmp	r3, #0
 743 0040 F8D1     		bne	.L39
 532:Src/ADCsrc.c  ****   }
 533:Src/ADCsrc.c  **** 
 534:Src/ADCsrc.c  ****   /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) / blockSize  */
 535:Src/ADCsrc.c  ****   /* Store the result to the destination */
 536:Src/ADCsrc.c  ****   *pResult = sum / (float32_t) blockSize;
 744              		.loc 1 536 3 view .LVU229
 745              		.loc 1 536 20 is_stmt 0 view .LVU230
 746 0042 07EE101A 		vmov	s14, r1	@ int
 747 0046 B8EE477A 		vcvt.f32.u32	s14, s14
 748              		.loc 1 536 18 view .LVU231
 749 004a C7EE876A 		vdiv.f32	s13, s15, s14
 750              		.loc 1 536 12 view .LVU232
 751 004e C2ED006A 		vstr.32	s13, [r2]
 537:Src/ADCsrc.c  **** }
 752              		.loc 1 537 1 view .LVU233
 753 0052 7047     		bx	lr
 754              	.L42:
 755              		.align	2
 756              	.L41:
 757 0054 00000000 		.word	0
 758              		.cfi_endproc
 759              	.LFE350:
 761              		.section	.text.arm_std_f32,"ax",%progbits
 762              		.align	1
 763              		.global	arm_std_f32
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu fpv4-sp-d16
 769              	arm_std_f32:
 770              	.LVL38:
 771              	.LFB351:
 538:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 55


 539:Src/ADCsrc.c  **** /**
 540:Src/ADCsrc.c  ****  * @} end of mean group
 541:Src/ADCsrc.c  ****  */
 542:Src/ADCsrc.c  **** 
 543:Src/ADCsrc.c  **** 
 544:Src/ADCsrc.c  **** 
 545:Src/ADCsrc.c  ****  /* ----------------------------------------------------------------------
 546:Src/ADCsrc.c  ****  * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 547:Src/ADCsrc.c  ****  *
 548:Src/ADCsrc.c  ****  * $Date:        19. March 2015
 549:Src/ADCsrc.c  ****  * $Revision: 	V.1.4.5
 550:Src/ADCsrc.c  ****  *
 551:Src/ADCsrc.c  ****  * Project: 	    CMSIS DSP Library
 552:Src/ADCsrc.c  ****  * Title:		arm_std_f32.c
 553:Src/ADCsrc.c  ****  *
 554:Src/ADCsrc.c  ****  * Description:	Standard deviation of the elements of a floating-point vector.
 555:Src/ADCsrc.c  ****  *
 556:Src/ADCsrc.c  ****  * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
 557:Src/ADCsrc.c  ****  *
 558:Src/ADCsrc.c  ****  * Redistribution and use in source and binary forms, with or without
 559:Src/ADCsrc.c  ****  * modification, are permitted provided that the following conditions
 560:Src/ADCsrc.c  ****  * are met:
 561:Src/ADCsrc.c  ****  *   - Redistributions of source code must retain the above copyright
 562:Src/ADCsrc.c  ****  *     notice, this list of conditions and the following disclaimer.
 563:Src/ADCsrc.c  ****  *   - Redistributions in binary form must reproduce the above copyright
 564:Src/ADCsrc.c  ****  *     notice, this list of conditions and the following disclaimer in
 565:Src/ADCsrc.c  ****  *     the documentation and/or other materials provided with the
 566:Src/ADCsrc.c  ****  *     distribution.
 567:Src/ADCsrc.c  ****  *   - Neither the name of ARM LIMITED nor the names of its contributors
 568:Src/ADCsrc.c  ****  *     may be used to endorse or promote products derived from this
 569:Src/ADCsrc.c  ****  *     software without specific prior written permission.
 570:Src/ADCsrc.c  ****  *
 571:Src/ADCsrc.c  ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 572:Src/ADCsrc.c  ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 573:Src/ADCsrc.c  ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 574:Src/ADCsrc.c  ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 575:Src/ADCsrc.c  ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 576:Src/ADCsrc.c  ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 577:Src/ADCsrc.c  ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 578:Src/ADCsrc.c  ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 579:Src/ADCsrc.c  ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 580:Src/ADCsrc.c  ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 581:Src/ADCsrc.c  ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 582:Src/ADCsrc.c  ****  * POSSIBILITY OF SUCH DAMAGE.
 583:Src/ADCsrc.c  ****  * ---------------------------------------------------------------------------- */
 584:Src/ADCsrc.c  **** 
 585:Src/ADCsrc.c  **** 
 586:Src/ADCsrc.c  **** 
 587:Src/ADCsrc.c  ****  /**
 588:Src/ADCsrc.c  ****   * @ingroup groupStats
 589:Src/ADCsrc.c  ****   */
 590:Src/ADCsrc.c  **** 
 591:Src/ADCsrc.c  ****  /**
 592:Src/ADCsrc.c  ****   * @defgroup STD Standard deviation
 593:Src/ADCsrc.c  ****   *
 594:Src/ADCsrc.c  ****   * Calculates the standard deviation of the elements in the input vector.
 595:Src/ADCsrc.c  ****   * The underlying algorithm is used:
ARM GAS  /tmp/ccgoDI2u.s 			page 56


 596:Src/ADCsrc.c  ****   *
 597:Src/ADCsrc.c  ****   * <pre>
 598:Src/ADCsrc.c  ****   * 	Result = sqrt((sumOfSquares - sum<sup>2</sup> / blockSize) / (blockSize - 1))
 599:Src/ADCsrc.c  ****   *
 600:Src/ADCsrc.c  ****   *	   where, sumOfSquares = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + ... + pSrc[blockSize-1] * pSrc
 601:Src/ADCsrc.c  ****   *
 602:Src/ADCsrc.c  ****   *	                   sum = pSrc[0] + pSrc[1] + pSrc[2] + ... + pSrc[blockSize-1]
 603:Src/ADCsrc.c  ****   * </pre>
 604:Src/ADCsrc.c  ****   *
 605:Src/ADCsrc.c  ****   * There are separate functions for floating point, Q31, and Q15 data types.
 606:Src/ADCsrc.c  ****   */
 607:Src/ADCsrc.c  **** 
 608:Src/ADCsrc.c  ****  /**
 609:Src/ADCsrc.c  ****   * @addtogroup STD
 610:Src/ADCsrc.c  ****   * @{
 611:Src/ADCsrc.c  ****   */
 612:Src/ADCsrc.c  **** 
 613:Src/ADCsrc.c  **** 
 614:Src/ADCsrc.c  ****  /**
 615:Src/ADCsrc.c  ****   * @brief Standard deviation of the elements of a floating-point vector.
 616:Src/ADCsrc.c  ****   * @param[in]       *pSrc points to the input vector
 617:Src/ADCsrc.c  ****   * @param[in]       blockSize length of the input vector
 618:Src/ADCsrc.c  ****   * @param[out]      *pResult standard deviation value returned here
 619:Src/ADCsrc.c  ****   * @return none.
 620:Src/ADCsrc.c  ****   *
 621:Src/ADCsrc.c  ****   */
 622:Src/ADCsrc.c  **** 
 623:Src/ADCsrc.c  **** 
 624:Src/ADCsrc.c  ****  void arm_std_f32(
 625:Src/ADCsrc.c  ****    float32_t * pSrc,
 626:Src/ADCsrc.c  ****    uint32_t blockSize,
 627:Src/ADCsrc.c  ****    float32_t * pResult)
 628:Src/ADCsrc.c  ****  {
 772              		.loc 1 628 2 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		.loc 1 628 2 is_stmt 0 view .LVU235
 777 0000 10B5     		push	{r4, lr}
 778              	.LCFI6:
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 4, -8
 781              		.cfi_offset 14, -4
 782 0002 1446     		mov	r4, r2
 629:Src/ADCsrc.c  ****    float32_t sum = 0.0f;                          /* Temporary result storage */
 783              		.loc 1 629 4 is_stmt 1 view .LVU236
 784              	.LVL39:
 630:Src/ADCsrc.c  ****    float32_t sumOfSquares = 0.0f;                 /* Sum of squares */
 785              		.loc 1 630 4 view .LVU237
 631:Src/ADCsrc.c  ****    float32_t in;                                  /* input value */
 786              		.loc 1 631 4 view .LVU238
 632:Src/ADCsrc.c  ****    uint32_t blkCnt;                               /* loop counter */
 787              		.loc 1 632 4 view .LVU239
 633:Src/ADCsrc.c  **** 
 634:Src/ADCsrc.c  ****  #ifndef ARM_MATH_CM0_FAMILY
 635:Src/ADCsrc.c  **** 
 636:Src/ADCsrc.c  ****    /* Run the below code for Cortex-M4 and Cortex-M3 */
ARM GAS  /tmp/ccgoDI2u.s 			page 57


 637:Src/ADCsrc.c  **** 
 638:Src/ADCsrc.c  ****    float32_t meanOfSquares, mean, squareOfMean;
 788              		.loc 1 638 4 view .LVU240
 639:Src/ADCsrc.c  **** 
 640:Src/ADCsrc.c  ****  	if(blockSize == 1)
 789              		.loc 1 640 3 view .LVU241
 790              		.loc 1 640 5 is_stmt 0 view .LVU242
 791 0004 0129     		cmp	r1, #1
 792 0006 28D0     		beq	.L55
 641:Src/ADCsrc.c  ****  	{
 642:Src/ADCsrc.c  ****  		*pResult = 0;
 643:Src/ADCsrc.c  ****  		return;
 644:Src/ADCsrc.c  ****  	}
 645:Src/ADCsrc.c  **** 
 646:Src/ADCsrc.c  ****    /*loop Unrolling */
 647:Src/ADCsrc.c  ****    blkCnt = blockSize >> 2u;
 793              		.loc 1 647 4 is_stmt 1 view .LVU243
 794              		.loc 1 647 11 is_stmt 0 view .LVU244
 795 0008 8B08     		lsrs	r3, r1, #2
 796              	.LVL40:
 648:Src/ADCsrc.c  **** 
 649:Src/ADCsrc.c  ****    /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 650:Src/ADCsrc.c  ****     ** a second loop below computes the remaining 1 to 3 samples. */
 651:Src/ADCsrc.c  ****    while(blkCnt > 0u)
 797              		.loc 1 651 4 is_stmt 1 view .LVU245
 630:Src/ADCsrc.c  ****    float32_t in;                                  /* input value */
 798              		.loc 1 630 14 is_stmt 0 view .LVU246
 799 000a DFED2D7A 		vldr.32	s15, .L57
 629:Src/ADCsrc.c  ****    float32_t sumOfSquares = 0.0f;                 /* Sum of squares */
 800              		.loc 1 629 14 view .LVU247
 801 000e B0EE677A 		vmov.f32	s14, s15
 802              	.LVL41:
 803              	.L46:
 804              		.loc 1 651 9 is_stmt 1 view .LVU248
 805 0012 2BB3     		cbz	r3, .L56
 652:Src/ADCsrc.c  ****    {
 653:Src/ADCsrc.c  ****      /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1])  */
 654:Src/ADCsrc.c  ****      /* Compute Sum of squares of the input samples
 655:Src/ADCsrc.c  ****       * and then store the result in a temporary variable, sum. */
 656:Src/ADCsrc.c  ****      in = *pSrc++;
 806              		.loc 1 656 6 view .LVU249
 807              	.LVL42:
 808              		.loc 1 656 9 is_stmt 0 view .LVU250
 809 0014 D0ED006A 		vldr.32	s13, [r0]
 810              	.LVL43:
 657:Src/ADCsrc.c  ****      sum += in;
 811              		.loc 1 657 6 is_stmt 1 view .LVU251
 812              		.loc 1 657 10 is_stmt 0 view .LVU252
 813 0018 37EE267A 		vadd.f32	s14, s14, s13
 814              	.LVL44:
 658:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 815              		.loc 1 658 6 is_stmt 1 view .LVU253
 816              		.loc 1 658 25 is_stmt 0 view .LVU254
 817 001c 66EEA66A 		vmul.f32	s13, s13, s13
 818              	.LVL45:
 819              		.loc 1 658 19 view .LVU255
 820 0020 76EEA77A 		vadd.f32	s15, s13, s15
ARM GAS  /tmp/ccgoDI2u.s 			page 58


 821              	.LVL46:
 659:Src/ADCsrc.c  ****      in = *pSrc++;
 822              		.loc 1 659 6 is_stmt 1 view .LVU256
 823              		.loc 1 659 9 is_stmt 0 view .LVU257
 824 0024 D0ED016A 		vldr.32	s13, [r0, #4]
 825              	.LVL47:
 660:Src/ADCsrc.c  ****      sum += in;
 826              		.loc 1 660 6 is_stmt 1 view .LVU258
 827              		.loc 1 660 10 is_stmt 0 view .LVU259
 828 0028 37EE267A 		vadd.f32	s14, s14, s13
 829              	.LVL48:
 661:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 830              		.loc 1 661 6 is_stmt 1 view .LVU260
 831              		.loc 1 661 25 is_stmt 0 view .LVU261
 832 002c 66EEA66A 		vmul.f32	s13, s13, s13
 833              	.LVL49:
 834              		.loc 1 661 19 view .LVU262
 835 0030 76EEA76A 		vadd.f32	s13, s13, s15
 836              	.LVL50:
 662:Src/ADCsrc.c  ****      in = *pSrc++;
 837              		.loc 1 662 6 is_stmt 1 view .LVU263
 838              		.loc 1 662 9 is_stmt 0 view .LVU264
 839 0034 D0ED027A 		vldr.32	s15, [r0, #8]
 840              	.LVL51:
 663:Src/ADCsrc.c  ****      sum += in;
 841              		.loc 1 663 6 is_stmt 1 view .LVU265
 842              		.loc 1 663 10 is_stmt 0 view .LVU266
 843 0038 37EE277A 		vadd.f32	s14, s14, s15
 844              	.LVL52:
 664:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 845              		.loc 1 664 6 is_stmt 1 view .LVU267
 846              		.loc 1 664 25 is_stmt 0 view .LVU268
 847 003c 67EEA77A 		vmul.f32	s15, s15, s15
 848              	.LVL53:
 849              		.loc 1 664 19 view .LVU269
 850 0040 77EEA66A 		vadd.f32	s13, s15, s13
 851              	.LVL54:
 665:Src/ADCsrc.c  ****      in = *pSrc++;
 852              		.loc 1 665 6 is_stmt 1 view .LVU270
 853              		.loc 1 665 9 is_stmt 0 view .LVU271
 854 0044 D0ED037A 		vldr.32	s15, [r0, #12]
 855              	.LVL55:
 666:Src/ADCsrc.c  ****      sum += in;
 856              		.loc 1 666 6 is_stmt 1 view .LVU272
 857              		.loc 1 666 10 is_stmt 0 view .LVU273
 858 0048 37EE277A 		vadd.f32	s14, s14, s15
 859              	.LVL56:
 667:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 860              		.loc 1 667 6 is_stmt 1 view .LVU274
 861              		.loc 1 667 25 is_stmt 0 view .LVU275
 862 004c 67EEA77A 		vmul.f32	s15, s15, s15
 863              	.LVL57:
 864              		.loc 1 667 19 view .LVU276
 865 0050 77EEA67A 		vadd.f32	s15, s15, s13
 866              	.LVL58:
 668:Src/ADCsrc.c  **** 
 669:Src/ADCsrc.c  ****      /* Decrement the loop counter */
ARM GAS  /tmp/ccgoDI2u.s 			page 59


 670:Src/ADCsrc.c  ****      blkCnt--;
 867              		.loc 1 670 6 is_stmt 1 view .LVU277
 868              		.loc 1 670 12 is_stmt 0 view .LVU278
 869 0054 013B     		subs	r3, r3, #1
 870              	.LVL59:
 665:Src/ADCsrc.c  ****      sum += in;
 871              		.loc 1 665 16 view .LVU279
 872 0056 1030     		adds	r0, r0, #16
 873              	.LVL60:
 665:Src/ADCsrc.c  ****      sum += in;
 874              		.loc 1 665 16 view .LVU280
 875 0058 DBE7     		b	.L46
 876              	.LVL61:
 877              	.L55:
 642:Src/ADCsrc.c  ****  		return;
 878              		.loc 1 642 4 is_stmt 1 view .LVU281
 642:Src/ADCsrc.c  ****  		return;
 879              		.loc 1 642 13 is_stmt 0 view .LVU282
 880 005a 0023     		movs	r3, #0
 881 005c 1360     		str	r3, [r2]	@ float
 643:Src/ADCsrc.c  ****  	}
 882              		.loc 1 643 4 is_stmt 1 view .LVU283
 883 005e 2AE0     		b	.L43
 884              	.LVL62:
 885              	.L56:
 671:Src/ADCsrc.c  ****    }
 672:Src/ADCsrc.c  **** 
 673:Src/ADCsrc.c  ****    /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 674:Src/ADCsrc.c  ****     ** No loop unrolling is used. */
 675:Src/ADCsrc.c  ****    blkCnt = blockSize % 0x4u;
 886              		.loc 1 675 4 view .LVU284
 887              		.loc 1 675 11 is_stmt 0 view .LVU285
 888 0060 01F00303 		and	r3, r1, #3
 889              	.LVL63:
 676:Src/ADCsrc.c  **** 
 677:Src/ADCsrc.c  ****    while(blkCnt > 0u)
 890              		.loc 1 677 4 is_stmt 1 view .LVU286
 891              		.loc 1 677 9 is_stmt 0 view .LVU287
 892 0064 08E0     		b	.L48
 893              	.L49:
 678:Src/ADCsrc.c  ****    {
 679:Src/ADCsrc.c  ****      /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 680:Src/ADCsrc.c  ****      /* Compute Sum of squares of the input samples
 681:Src/ADCsrc.c  ****       * and then store the result in a temporary variable, sum. */
 682:Src/ADCsrc.c  ****      in = *pSrc++;
 894              		.loc 1 682 6 is_stmt 1 view .LVU288
 895              	.LVL64:
 896              		.loc 1 682 9 is_stmt 0 view .LVU289
 897 0066 F0EC016A 		vldmia.32	r0!, {s13}
 898              	.LVL65:
 683:Src/ADCsrc.c  ****      sum += in;
 899              		.loc 1 683 6 is_stmt 1 view .LVU290
 900              		.loc 1 683 10 is_stmt 0 view .LVU291
 901 006a 37EE267A 		vadd.f32	s14, s14, s13
 902              	.LVL66:
 684:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 903              		.loc 1 684 6 is_stmt 1 view .LVU292
ARM GAS  /tmp/ccgoDI2u.s 			page 60


 904              		.loc 1 684 25 is_stmt 0 view .LVU293
 905 006e 66EEA66A 		vmul.f32	s13, s13, s13
 906              	.LVL67:
 907              		.loc 1 684 19 view .LVU294
 908 0072 77EEA67A 		vadd.f32	s15, s15, s13
 909              	.LVL68:
 685:Src/ADCsrc.c  **** 
 686:Src/ADCsrc.c  ****      /* Decrement the loop counter */
 687:Src/ADCsrc.c  ****      blkCnt--;
 910              		.loc 1 687 6 is_stmt 1 view .LVU295
 911              		.loc 1 687 12 is_stmt 0 view .LVU296
 912 0076 013B     		subs	r3, r3, #1
 913              	.LVL69:
 914              	.L48:
 677:Src/ADCsrc.c  ****    {
 915              		.loc 1 677 9 is_stmt 1 view .LVU297
 916 0078 002B     		cmp	r3, #0
 917 007a F4D1     		bne	.L49
 688:Src/ADCsrc.c  ****    }
 689:Src/ADCsrc.c  **** 
 690:Src/ADCsrc.c  ****    /* Compute Mean of squares of the input samples
 691:Src/ADCsrc.c  ****     * and then store the result in a temporary variable, meanOfSquares. */
 692:Src/ADCsrc.c  ****    meanOfSquares = sumOfSquares / ((float32_t) blockSize - 1.0f);
 918              		.loc 1 692 4 view .LVU298
 919              		.loc 1 692 36 is_stmt 0 view .LVU299
 920 007c 06EE901A 		vmov	s13, r1	@ int
 921 0080 F8EE666A 		vcvt.f32.u32	s13, s13
 922              		.loc 1 692 58 view .LVU300
 923 0084 B7EE006A 		vmov.f32	s12, #1.0e+0
 924 0088 36EEC66A 		vsub.f32	s12, s13, s12
 925              		.loc 1 692 18 view .LVU301
 926 008c 87EE860A 		vdiv.f32	s0, s15, s12
 927              	.LVL70:
 693:Src/ADCsrc.c  **** 
 694:Src/ADCsrc.c  ****    /* Compute mean of all input values */
 695:Src/ADCsrc.c  ****    mean = sum / (float32_t) blockSize;
 928              		.loc 1 695 4 is_stmt 1 view .LVU302
 929              		.loc 1 695 9 is_stmt 0 view .LVU303
 930 0090 C7EE267A 		vdiv.f32	s15, s14, s13
 931              	.LVL71:
 696:Src/ADCsrc.c  **** 
 697:Src/ADCsrc.c  ****    /* Compute square of mean */
 698:Src/ADCsrc.c  ****    squareOfMean = (mean * mean) * (((float32_t) blockSize) /
 932              		.loc 1 698 4 is_stmt 1 view .LVU304
 933              		.loc 1 698 25 is_stmt 0 view .LVU305
 934 0094 67EEA77A 		vmul.f32	s15, s15, s15
 935              	.LVL72:
 936              		.loc 1 698 60 view .LVU306
 937 0098 86EE867A 		vdiv.f32	s14, s13, s12
 938              	.LVL73:
 939              		.loc 1 698 17 view .LVU307
 940 009c 67EE877A 		vmul.f32	s15, s15, s14
 941              	.LVL74:
 699:Src/ADCsrc.c  ****                                    ((float32_t) blockSize - 1.0f));
 700:Src/ADCsrc.c  **** 
 701:Src/ADCsrc.c  ****    /* Compute standard deviation and then store the result to the destination */
 702:Src/ADCsrc.c  ****    arm_sqrt_f32((meanOfSquares - squareOfMean), pResult);
ARM GAS  /tmp/ccgoDI2u.s 			page 61


 942              		.loc 1 702 4 is_stmt 1 view .LVU308
 943 00a0 30EE670A 		vsub.f32	s0, s0, s15
 944              	.LVL75:
 945              	.LBB12:
 946              	.LBI12:
 947              		.file 3 "Drivers/CMSIS/Include/arm_math.h"
   1:Drivers/CMSIS/Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/Include/arm_math.h **** * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
   3:Drivers/CMSIS/Include/arm_math.h **** *
   4:Drivers/CMSIS/Include/arm_math.h **** * $Date:        20. October 2015
   5:Drivers/CMSIS/Include/arm_math.h **** * $Revision:    V1.4.5 b
   6:Drivers/CMSIS/Include/arm_math.h **** *
   7:Drivers/CMSIS/Include/arm_math.h **** * Project:      CMSIS DSP Library
   8:Drivers/CMSIS/Include/arm_math.h **** * Title:        arm_math.h
   9:Drivers/CMSIS/Include/arm_math.h **** *
  10:Drivers/CMSIS/Include/arm_math.h **** * Description:  Public header file for CMSIS DSP Library
  11:Drivers/CMSIS/Include/arm_math.h **** *
  12:Drivers/CMSIS/Include/arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:Drivers/CMSIS/Include/arm_math.h **** *
  14:Drivers/CMSIS/Include/arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:Drivers/CMSIS/Include/arm_math.h **** * modification, are permitted provided that the following conditions
  16:Drivers/CMSIS/Include/arm_math.h **** * are met:
  17:Drivers/CMSIS/Include/arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:Drivers/CMSIS/Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:Drivers/CMSIS/Include/arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:Drivers/CMSIS/Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:Drivers/CMSIS/Include/arm_math.h **** *     the documentation and/or other materials provided with the
  22:Drivers/CMSIS/Include/arm_math.h **** *     distribution.
  23:Drivers/CMSIS/Include/arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:Drivers/CMSIS/Include/arm_math.h **** *     may be used to endorse or promote products derived from this
  25:Drivers/CMSIS/Include/arm_math.h **** *     software without specific prior written permission.
  26:Drivers/CMSIS/Include/arm_math.h **** *
  27:Drivers/CMSIS/Include/arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:Drivers/CMSIS/Include/arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:Drivers/CMSIS/Include/arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:Drivers/CMSIS/Include/arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:Drivers/CMSIS/Include/arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:Drivers/CMSIS/Include/arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:Drivers/CMSIS/Include/arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:Drivers/CMSIS/Include/arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:Drivers/CMSIS/Include/arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:Drivers/CMSIS/Include/arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:Drivers/CMSIS/Include/arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:Drivers/CMSIS/Include/arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:Drivers/CMSIS/Include/arm_math.h ****  * -------------------------------------------------------------------- */
  40:Drivers/CMSIS/Include/arm_math.h **** 
  41:Drivers/CMSIS/Include/arm_math.h **** /**
  42:Drivers/CMSIS/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:Drivers/CMSIS/Include/arm_math.h ****    *
  44:Drivers/CMSIS/Include/arm_math.h ****    * Introduction
  45:Drivers/CMSIS/Include/arm_math.h ****    * ------------
  46:Drivers/CMSIS/Include/arm_math.h ****    *
  47:Drivers/CMSIS/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:Drivers/CMSIS/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:Drivers/CMSIS/Include/arm_math.h ****    *
  50:Drivers/CMSIS/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:Drivers/CMSIS/Include/arm_math.h ****    * - Basic math functions
ARM GAS  /tmp/ccgoDI2u.s 			page 62


  52:Drivers/CMSIS/Include/arm_math.h ****    * - Fast math functions
  53:Drivers/CMSIS/Include/arm_math.h ****    * - Complex math functions
  54:Drivers/CMSIS/Include/arm_math.h ****    * - Filters
  55:Drivers/CMSIS/Include/arm_math.h ****    * - Matrix functions
  56:Drivers/CMSIS/Include/arm_math.h ****    * - Transforms
  57:Drivers/CMSIS/Include/arm_math.h ****    * - Motor control functions
  58:Drivers/CMSIS/Include/arm_math.h ****    * - Statistical functions
  59:Drivers/CMSIS/Include/arm_math.h ****    * - Support functions
  60:Drivers/CMSIS/Include/arm_math.h ****    * - Interpolation functions
  61:Drivers/CMSIS/Include/arm_math.h ****    *
  62:Drivers/CMSIS/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:Drivers/CMSIS/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:Drivers/CMSIS/Include/arm_math.h ****    *
  65:Drivers/CMSIS/Include/arm_math.h ****    * Using the Library
  66:Drivers/CMSIS/Include/arm_math.h ****    * ------------
  67:Drivers/CMSIS/Include/arm_math.h ****    *
  68:Drivers/CMSIS/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:Drivers/CMSIS/Include/arm_math.h ****    *
  84:Drivers/CMSIS/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:Drivers/CMSIS/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:Drivers/CMSIS/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:Drivers/CMSIS/Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:Drivers/CMSIS/Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:Drivers/CMSIS/Include/arm_math.h ****    *
  90:Drivers/CMSIS/Include/arm_math.h ****    * Examples
  91:Drivers/CMSIS/Include/arm_math.h ****    * --------
  92:Drivers/CMSIS/Include/arm_math.h ****    *
  93:Drivers/CMSIS/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:Drivers/CMSIS/Include/arm_math.h ****    *
  95:Drivers/CMSIS/Include/arm_math.h ****    * Toolchain Support
  96:Drivers/CMSIS/Include/arm_math.h ****    * ------------
  97:Drivers/CMSIS/Include/arm_math.h ****    *
  98:Drivers/CMSIS/Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  99:Drivers/CMSIS/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:Drivers/CMSIS/Include/arm_math.h ****    *
 101:Drivers/CMSIS/Include/arm_math.h ****    * Building the Library
 102:Drivers/CMSIS/Include/arm_math.h ****    * ------------
 103:Drivers/CMSIS/Include/arm_math.h ****    *
 104:Drivers/CMSIS/Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 106:Drivers/CMSIS/Include/arm_math.h ****    *
 107:Drivers/CMSIS/Include/arm_math.h ****    *
 108:Drivers/CMSIS/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
ARM GAS  /tmp/ccgoDI2u.s 			page 63


 109:Drivers/CMSIS/Include/arm_math.h ****    *
 110:Drivers/CMSIS/Include/arm_math.h ****    * Pre-processor Macros
 111:Drivers/CMSIS/Include/arm_math.h ****    * ------------
 112:Drivers/CMSIS/Include/arm_math.h ****    *
 113:Drivers/CMSIS/Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 114:Drivers/CMSIS/Include/arm_math.h ****    *
 115:Drivers/CMSIS/Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:Drivers/CMSIS/Include/arm_math.h ****    *
 117:Drivers/CMSIS/Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:Drivers/CMSIS/Include/arm_math.h ****    *
 119:Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:Drivers/CMSIS/Include/arm_math.h ****    *
 121:Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:Drivers/CMSIS/Include/arm_math.h ****    *
 123:Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:Drivers/CMSIS/Include/arm_math.h ****    *
 125:Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:Drivers/CMSIS/Include/arm_math.h ****    *
 127:Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:Drivers/CMSIS/Include/arm_math.h ****    *
 129:Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:Drivers/CMSIS/Include/arm_math.h ****    *
 131:Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_CMx:
 132:Drivers/CMSIS/Include/arm_math.h ****    *
 133:Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:Drivers/CMSIS/Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:Drivers/CMSIS/Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 136:Drivers/CMSIS/Include/arm_math.h ****    *
 137:Drivers/CMSIS/Include/arm_math.h ****    * - __FPU_PRESENT:
 138:Drivers/CMSIS/Include/arm_math.h ****    *
 139:Drivers/CMSIS/Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 140:Drivers/CMSIS/Include/arm_math.h ****    *
 141:Drivers/CMSIS/Include/arm_math.h ****    * <hr>
 142:Drivers/CMSIS/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 143:Drivers/CMSIS/Include/arm_math.h ****    * -----------------------------
 144:Drivers/CMSIS/Include/arm_math.h ****    *
 145:Drivers/CMSIS/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 146:Drivers/CMSIS/Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 147:Drivers/CMSIS/Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 148:Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 149:Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 150:Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 151:Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 152:Drivers/CMSIS/Include/arm_math.h ****    *
 153:Drivers/CMSIS/Include/arm_math.h ****    * <hr>
 154:Drivers/CMSIS/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 155:Drivers/CMSIS/Include/arm_math.h ****    * ------------
 156:Drivers/CMSIS/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 157:Drivers/CMSIS/Include/arm_math.h ****    *
 158:Drivers/CMSIS/Include/arm_math.h ****    * Copyright Notice
 159:Drivers/CMSIS/Include/arm_math.h ****    * ------------
 160:Drivers/CMSIS/Include/arm_math.h ****    *
 161:Drivers/CMSIS/Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 162:Drivers/CMSIS/Include/arm_math.h ****    */
 163:Drivers/CMSIS/Include/arm_math.h **** 
 164:Drivers/CMSIS/Include/arm_math.h **** 
 165:Drivers/CMSIS/Include/arm_math.h **** /**
ARM GAS  /tmp/ccgoDI2u.s 			page 64


 166:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 167:Drivers/CMSIS/Include/arm_math.h ****  */
 168:Drivers/CMSIS/Include/arm_math.h **** 
 169:Drivers/CMSIS/Include/arm_math.h **** /**
 170:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 171:Drivers/CMSIS/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 172:Drivers/CMSIS/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 173:Drivers/CMSIS/Include/arm_math.h ****  * operate on individual values and not arrays.
 174:Drivers/CMSIS/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 175:Drivers/CMSIS/Include/arm_math.h ****  *
 176:Drivers/CMSIS/Include/arm_math.h ****  */
 177:Drivers/CMSIS/Include/arm_math.h **** 
 178:Drivers/CMSIS/Include/arm_math.h **** /**
 179:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 180:Drivers/CMSIS/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 181:Drivers/CMSIS/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 182:Drivers/CMSIS/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 183:Drivers/CMSIS/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 184:Drivers/CMSIS/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 185:Drivers/CMSIS/Include/arm_math.h ****  * real values.
 186:Drivers/CMSIS/Include/arm_math.h ****  */
 187:Drivers/CMSIS/Include/arm_math.h **** 
 188:Drivers/CMSIS/Include/arm_math.h **** /**
 189:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 190:Drivers/CMSIS/Include/arm_math.h ****  */
 191:Drivers/CMSIS/Include/arm_math.h **** 
 192:Drivers/CMSIS/Include/arm_math.h **** /**
 193:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 194:Drivers/CMSIS/Include/arm_math.h ****  *
 195:Drivers/CMSIS/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 196:Drivers/CMSIS/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 197:Drivers/CMSIS/Include/arm_math.h ****  * the type
 198:Drivers/CMSIS/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 199:Drivers/CMSIS/Include/arm_math.h ****  * below:
 200:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 201:Drivers/CMSIS/Include/arm_math.h ****  *     typedef struct
 202:Drivers/CMSIS/Include/arm_math.h ****  *     {
 203:Drivers/CMSIS/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 204:Drivers/CMSIS/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 205:Drivers/CMSIS/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 206:Drivers/CMSIS/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 207:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 208:Drivers/CMSIS/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 209:Drivers/CMSIS/Include/arm_math.h ****  *
 210:Drivers/CMSIS/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 211:Drivers/CMSIS/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 212:Drivers/CMSIS/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 213:Drivers/CMSIS/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 214:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 215:Drivers/CMSIS/Include/arm_math.h ****  *     pData[i*numCols + j]
 216:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 217:Drivers/CMSIS/Include/arm_math.h ****  *
 218:Drivers/CMSIS/Include/arm_math.h ****  * \par Init Functions
 219:Drivers/CMSIS/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 220:Drivers/CMSIS/Include/arm_math.h ****  * data structure.
 221:Drivers/CMSIS/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 222:Drivers/CMSIS/Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
ARM GAS  /tmp/ccgoDI2u.s 			page 65


 223:Drivers/CMSIS/Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 224:Drivers/CMSIS/Include/arm_math.h ****  *
 225:Drivers/CMSIS/Include/arm_math.h ****  * \par
 226:Drivers/CMSIS/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 227:Drivers/CMSIS/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 228:Drivers/CMSIS/Include/arm_math.h ****  * To place the instance structure in a const data
 229:Drivers/CMSIS/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 230:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 231:Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 232:Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 233:Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 234:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 235:Drivers/CMSIS/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 236:Drivers/CMSIS/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 237:Drivers/CMSIS/Include/arm_math.h ****  * data array.
 238:Drivers/CMSIS/Include/arm_math.h ****  *
 239:Drivers/CMSIS/Include/arm_math.h ****  * \par Size Checking
 240:Drivers/CMSIS/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 241:Drivers/CMSIS/Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 242:Drivers/CMSIS/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 243:Drivers/CMSIS/Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 244:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 245:Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 246:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 247:Drivers/CMSIS/Include/arm_math.h ****  * Otherwise the functions return
 248:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 249:Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 250:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 251:Drivers/CMSIS/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 252:Drivers/CMSIS/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 253:Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 254:Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 255:Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 256:Drivers/CMSIS/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 257:Drivers/CMSIS/Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 258:Drivers/CMSIS/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 259:Drivers/CMSIS/Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 260:Drivers/CMSIS/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 261:Drivers/CMSIS/Include/arm_math.h ****  */
 262:Drivers/CMSIS/Include/arm_math.h **** 
 263:Drivers/CMSIS/Include/arm_math.h **** /**
 264:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 265:Drivers/CMSIS/Include/arm_math.h ****  */
 266:Drivers/CMSIS/Include/arm_math.h **** 
 267:Drivers/CMSIS/Include/arm_math.h **** /**
 268:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 269:Drivers/CMSIS/Include/arm_math.h ****  */
 270:Drivers/CMSIS/Include/arm_math.h **** 
 271:Drivers/CMSIS/Include/arm_math.h **** /**
 272:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 273:Drivers/CMSIS/Include/arm_math.h ****  */
 274:Drivers/CMSIS/Include/arm_math.h **** /**
 275:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 276:Drivers/CMSIS/Include/arm_math.h ****  */
 277:Drivers/CMSIS/Include/arm_math.h **** 
 278:Drivers/CMSIS/Include/arm_math.h **** /**
 279:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
ARM GAS  /tmp/ccgoDI2u.s 			page 66


 280:Drivers/CMSIS/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 281:Drivers/CMSIS/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 282:Drivers/CMSIS/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 283:Drivers/CMSIS/Include/arm_math.h ****  */
 284:Drivers/CMSIS/Include/arm_math.h **** 
 285:Drivers/CMSIS/Include/arm_math.h **** /**
 286:Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupExamples Examples
 287:Drivers/CMSIS/Include/arm_math.h ****  */
 288:Drivers/CMSIS/Include/arm_math.h **** #ifndef _ARM_MATH_H
 289:Drivers/CMSIS/Include/arm_math.h **** #define _ARM_MATH_H
 290:Drivers/CMSIS/Include/arm_math.h **** 
 291:Drivers/CMSIS/Include/arm_math.h **** /* ignore some GCC warnings */
 292:Drivers/CMSIS/Include/arm_math.h **** #if defined ( __GNUC__ )
 293:Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic push
 294:Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 295:Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 296:Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 297:Drivers/CMSIS/Include/arm_math.h **** #endif
 298:Drivers/CMSIS/Include/arm_math.h **** 
 299:Drivers/CMSIS/Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 300:Drivers/CMSIS/Include/arm_math.h **** 
 301:Drivers/CMSIS/Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 302:Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm7.h"
 303:Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 304:Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm4.h"
 305:Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 306:Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm3.h"
 307:Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 308:Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm0.h"
 309:Drivers/CMSIS/Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 310:Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 311:Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm0plus.h"
 312:Drivers/CMSIS/Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 313:Drivers/CMSIS/Include/arm_math.h **** #else
 314:Drivers/CMSIS/Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 315:Drivers/CMSIS/Include/arm_math.h **** #endif
 316:Drivers/CMSIS/Include/arm_math.h **** 
 317:Drivers/CMSIS/Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 318:Drivers/CMSIS/Include/arm_math.h **** #include "string.h"
 319:Drivers/CMSIS/Include/arm_math.h **** #include "math.h"
 320:Drivers/CMSIS/Include/arm_math.h **** #ifdef   __cplusplus
 321:Drivers/CMSIS/Include/arm_math.h **** extern "C"
 322:Drivers/CMSIS/Include/arm_math.h **** {
 323:Drivers/CMSIS/Include/arm_math.h **** #endif
 324:Drivers/CMSIS/Include/arm_math.h **** 
 325:Drivers/CMSIS/Include/arm_math.h **** 
 326:Drivers/CMSIS/Include/arm_math.h ****   /**
 327:Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 328:Drivers/CMSIS/Include/arm_math.h ****    */
 329:Drivers/CMSIS/Include/arm_math.h **** 
 330:Drivers/CMSIS/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 331:Drivers/CMSIS/Include/arm_math.h **** #define DELTA_Q15          0x5
 332:Drivers/CMSIS/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 333:Drivers/CMSIS/Include/arm_math.h **** #ifndef PI
 334:Drivers/CMSIS/Include/arm_math.h **** #define PI                 3.14159265358979f
 335:Drivers/CMSIS/Include/arm_math.h **** #endif
 336:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 67


 337:Drivers/CMSIS/Include/arm_math.h ****   /**
 338:Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 339:Drivers/CMSIS/Include/arm_math.h ****    */
 340:Drivers/CMSIS/Include/arm_math.h **** 
 341:Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 342:Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 343:Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 344:Drivers/CMSIS/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 345:Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SIZE  256
 346:Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 347:Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 348:Drivers/CMSIS/Include/arm_math.h **** 
 349:Drivers/CMSIS/Include/arm_math.h ****   /**
 350:Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 351:Drivers/CMSIS/Include/arm_math.h ****    */
 352:Drivers/CMSIS/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 353:Drivers/CMSIS/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 354:Drivers/CMSIS/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 355:Drivers/CMSIS/Include/arm_math.h **** 
 356:Drivers/CMSIS/Include/arm_math.h ****   /**
 357:Drivers/CMSIS/Include/arm_math.h ****    * @brief Macro for Unaligned Support
 358:Drivers/CMSIS/Include/arm_math.h ****    */
 359:Drivers/CMSIS/Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 360:Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4
 361:Drivers/CMSIS/Include/arm_math.h **** #else
 362:Drivers/CMSIS/Include/arm_math.h ****   #if defined  (__GNUC__)
 363:Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 364:Drivers/CMSIS/Include/arm_math.h ****   #else
 365:Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4 __align(4)
 366:Drivers/CMSIS/Include/arm_math.h ****   #endif
 367:Drivers/CMSIS/Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 368:Drivers/CMSIS/Include/arm_math.h **** 
 369:Drivers/CMSIS/Include/arm_math.h ****   /**
 370:Drivers/CMSIS/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 371:Drivers/CMSIS/Include/arm_math.h ****    */
 372:Drivers/CMSIS/Include/arm_math.h **** 
 373:Drivers/CMSIS/Include/arm_math.h ****   typedef enum
 374:Drivers/CMSIS/Include/arm_math.h ****   {
 375:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 376:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 377:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 378:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 379:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 380:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 381:Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 382:Drivers/CMSIS/Include/arm_math.h ****   } arm_status;
 383:Drivers/CMSIS/Include/arm_math.h **** 
 384:Drivers/CMSIS/Include/arm_math.h ****   /**
 385:Drivers/CMSIS/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 386:Drivers/CMSIS/Include/arm_math.h ****    */
 387:Drivers/CMSIS/Include/arm_math.h ****   typedef int8_t q7_t;
 388:Drivers/CMSIS/Include/arm_math.h **** 
 389:Drivers/CMSIS/Include/arm_math.h ****   /**
 390:Drivers/CMSIS/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 391:Drivers/CMSIS/Include/arm_math.h ****    */
 392:Drivers/CMSIS/Include/arm_math.h ****   typedef int16_t q15_t;
 393:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 68


 394:Drivers/CMSIS/Include/arm_math.h ****   /**
 395:Drivers/CMSIS/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 396:Drivers/CMSIS/Include/arm_math.h ****    */
 397:Drivers/CMSIS/Include/arm_math.h ****   typedef int32_t q31_t;
 398:Drivers/CMSIS/Include/arm_math.h **** 
 399:Drivers/CMSIS/Include/arm_math.h ****   /**
 400:Drivers/CMSIS/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 401:Drivers/CMSIS/Include/arm_math.h ****    */
 402:Drivers/CMSIS/Include/arm_math.h ****   typedef int64_t q63_t;
 403:Drivers/CMSIS/Include/arm_math.h **** 
 404:Drivers/CMSIS/Include/arm_math.h ****   /**
 405:Drivers/CMSIS/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 406:Drivers/CMSIS/Include/arm_math.h ****    */
 407:Drivers/CMSIS/Include/arm_math.h ****   typedef float float32_t;
 408:Drivers/CMSIS/Include/arm_math.h **** 
 409:Drivers/CMSIS/Include/arm_math.h ****   /**
 410:Drivers/CMSIS/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 411:Drivers/CMSIS/Include/arm_math.h ****    */
 412:Drivers/CMSIS/Include/arm_math.h ****   typedef double float64_t;
 413:Drivers/CMSIS/Include/arm_math.h **** 
 414:Drivers/CMSIS/Include/arm_math.h ****   /**
 415:Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 416:Drivers/CMSIS/Include/arm_math.h ****    */
 417:Drivers/CMSIS/Include/arm_math.h **** #if defined __CC_ARM
 418:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 419:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 420:Drivers/CMSIS/Include/arm_math.h **** 
 421:Drivers/CMSIS/Include/arm_math.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 422:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 423:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 424:Drivers/CMSIS/Include/arm_math.h **** 
 425:Drivers/CMSIS/Include/arm_math.h **** #elif defined __GNUC__
 426:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 428:Drivers/CMSIS/Include/arm_math.h **** 
 429:Drivers/CMSIS/Include/arm_math.h **** #elif defined __ICCARM__
 430:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 431:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 432:Drivers/CMSIS/Include/arm_math.h **** 
 433:Drivers/CMSIS/Include/arm_math.h **** #elif defined __CSMC__
 434:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 435:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 436:Drivers/CMSIS/Include/arm_math.h **** 
 437:Drivers/CMSIS/Include/arm_math.h **** #elif defined __TASKING__
 438:Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 439:Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 440:Drivers/CMSIS/Include/arm_math.h **** 
 441:Drivers/CMSIS/Include/arm_math.h **** #else
 442:Drivers/CMSIS/Include/arm_math.h ****   #error Unknown compiler
 443:Drivers/CMSIS/Include/arm_math.h **** #endif
 444:Drivers/CMSIS/Include/arm_math.h **** 
 445:Drivers/CMSIS/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 446:Drivers/CMSIS/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 447:Drivers/CMSIS/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 448:Drivers/CMSIS/Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 449:Drivers/CMSIS/Include/arm_math.h **** 
 450:Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
ARM GAS  /tmp/ccgoDI2u.s 			page 69


 451:Drivers/CMSIS/Include/arm_math.h ****   /**
 452:Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 453:Drivers/CMSIS/Include/arm_math.h ****    */
 454:Drivers/CMSIS/Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 455:Drivers/CMSIS/Include/arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 456:Drivers/CMSIS/Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 457:Drivers/CMSIS/Include/arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 458:Drivers/CMSIS/Include/arm_math.h **** 
 459:Drivers/CMSIS/Include/arm_math.h **** #endif
 460:Drivers/CMSIS/Include/arm_math.h **** 
 461:Drivers/CMSIS/Include/arm_math.h **** 
 462:Drivers/CMSIS/Include/arm_math.h ****    /**
 463:Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 464:Drivers/CMSIS/Include/arm_math.h ****    */
 465:Drivers/CMSIS/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 466:Drivers/CMSIS/Include/arm_math.h **** 
 467:Drivers/CMSIS/Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 468:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 469:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 470:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 471:Drivers/CMSIS/Include/arm_math.h **** #else
 472:Drivers/CMSIS/Include/arm_math.h **** 
 473:Drivers/CMSIS/Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 474:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 475:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 476:Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 477:Drivers/CMSIS/Include/arm_math.h **** 
 478:Drivers/CMSIS/Include/arm_math.h **** #endif
 479:Drivers/CMSIS/Include/arm_math.h **** 
 480:Drivers/CMSIS/Include/arm_math.h **** 
 481:Drivers/CMSIS/Include/arm_math.h ****   /**
 482:Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 483:Drivers/CMSIS/Include/arm_math.h ****    */
 484:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 485:Drivers/CMSIS/Include/arm_math.h ****   q63_t x)
 486:Drivers/CMSIS/Include/arm_math.h ****   {
 487:Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 488:Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 489:Drivers/CMSIS/Include/arm_math.h ****   }
 490:Drivers/CMSIS/Include/arm_math.h **** 
 491:Drivers/CMSIS/Include/arm_math.h ****   /**
 492:Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 493:Drivers/CMSIS/Include/arm_math.h ****    */
 494:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t clip_q63_to_q15(
 495:Drivers/CMSIS/Include/arm_math.h ****   q63_t x)
 496:Drivers/CMSIS/Include/arm_math.h ****   {
 497:Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 498:Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 499:Drivers/CMSIS/Include/arm_math.h ****   }
 500:Drivers/CMSIS/Include/arm_math.h **** 
 501:Drivers/CMSIS/Include/arm_math.h ****   /**
 502:Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 503:Drivers/CMSIS/Include/arm_math.h ****    */
 504:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q7_t clip_q31_to_q7(
 505:Drivers/CMSIS/Include/arm_math.h ****   q31_t x)
 506:Drivers/CMSIS/Include/arm_math.h ****   {
 507:Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
ARM GAS  /tmp/ccgoDI2u.s 			page 70


 508:Drivers/CMSIS/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 509:Drivers/CMSIS/Include/arm_math.h ****   }
 510:Drivers/CMSIS/Include/arm_math.h **** 
 511:Drivers/CMSIS/Include/arm_math.h ****   /**
 512:Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 513:Drivers/CMSIS/Include/arm_math.h ****    */
 514:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t clip_q31_to_q15(
 515:Drivers/CMSIS/Include/arm_math.h ****   q31_t x)
 516:Drivers/CMSIS/Include/arm_math.h ****   {
 517:Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 518:Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 519:Drivers/CMSIS/Include/arm_math.h ****   }
 520:Drivers/CMSIS/Include/arm_math.h **** 
 521:Drivers/CMSIS/Include/arm_math.h ****   /**
 522:Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 523:Drivers/CMSIS/Include/arm_math.h ****    */
 524:Drivers/CMSIS/Include/arm_math.h **** 
 525:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q63_t mult32x64(
 526:Drivers/CMSIS/Include/arm_math.h ****   q63_t x,
 527:Drivers/CMSIS/Include/arm_math.h ****   q31_t y)
 528:Drivers/CMSIS/Include/arm_math.h ****   {
 529:Drivers/CMSIS/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 530:Drivers/CMSIS/Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 531:Drivers/CMSIS/Include/arm_math.h ****   }
 532:Drivers/CMSIS/Include/arm_math.h **** 
 533:Drivers/CMSIS/Include/arm_math.h **** /*
 534:Drivers/CMSIS/Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 535:Drivers/CMSIS/Include/arm_math.h ****   #define __CLZ __clz
 536:Drivers/CMSIS/Include/arm_math.h ****   #endif
 537:Drivers/CMSIS/Include/arm_math.h ****  */
 538:Drivers/CMSIS/Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 539:Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 540:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 541:Drivers/CMSIS/Include/arm_math.h ****   q31_t data);
 542:Drivers/CMSIS/Include/arm_math.h **** 
 543:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 544:Drivers/CMSIS/Include/arm_math.h ****   q31_t data)
 545:Drivers/CMSIS/Include/arm_math.h ****   {
 546:Drivers/CMSIS/Include/arm_math.h ****     uint32_t count = 0;
 547:Drivers/CMSIS/Include/arm_math.h ****     uint32_t mask = 0x80000000;
 548:Drivers/CMSIS/Include/arm_math.h **** 
 549:Drivers/CMSIS/Include/arm_math.h ****     while((data & mask) == 0)
 550:Drivers/CMSIS/Include/arm_math.h ****     {
 551:Drivers/CMSIS/Include/arm_math.h ****       count += 1u;
 552:Drivers/CMSIS/Include/arm_math.h ****       mask = mask >> 1u;
 553:Drivers/CMSIS/Include/arm_math.h ****     }
 554:Drivers/CMSIS/Include/arm_math.h **** 
 555:Drivers/CMSIS/Include/arm_math.h ****     return (count);
 556:Drivers/CMSIS/Include/arm_math.h ****   }
 557:Drivers/CMSIS/Include/arm_math.h **** #endif
 558:Drivers/CMSIS/Include/arm_math.h **** 
 559:Drivers/CMSIS/Include/arm_math.h ****   /**
 560:Drivers/CMSIS/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 561:Drivers/CMSIS/Include/arm_math.h ****    */
 562:Drivers/CMSIS/Include/arm_math.h **** 
 563:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q31(
 564:Drivers/CMSIS/Include/arm_math.h ****   q31_t in,
ARM GAS  /tmp/ccgoDI2u.s 			page 71


 565:Drivers/CMSIS/Include/arm_math.h ****   q31_t * dst,
 566:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRecipTable)
 567:Drivers/CMSIS/Include/arm_math.h ****   {
 568:Drivers/CMSIS/Include/arm_math.h ****     q31_t out;
 569:Drivers/CMSIS/Include/arm_math.h ****     uint32_t tempVal;
 570:Drivers/CMSIS/Include/arm_math.h ****     uint32_t index, i;
 571:Drivers/CMSIS/Include/arm_math.h ****     uint32_t signBits;
 572:Drivers/CMSIS/Include/arm_math.h **** 
 573:Drivers/CMSIS/Include/arm_math.h ****     if(in > 0)
 574:Drivers/CMSIS/Include/arm_math.h ****     {
 575:Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 576:Drivers/CMSIS/Include/arm_math.h ****     }
 577:Drivers/CMSIS/Include/arm_math.h ****     else
 578:Drivers/CMSIS/Include/arm_math.h ****     {
 579:Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 580:Drivers/CMSIS/Include/arm_math.h ****     }
 581:Drivers/CMSIS/Include/arm_math.h **** 
 582:Drivers/CMSIS/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 583:Drivers/CMSIS/Include/arm_math.h ****     in = (in << signBits);
 584:Drivers/CMSIS/Include/arm_math.h **** 
 585:Drivers/CMSIS/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 586:Drivers/CMSIS/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 587:Drivers/CMSIS/Include/arm_math.h ****     index = (index & INDEX_MASK);
 588:Drivers/CMSIS/Include/arm_math.h **** 
 589:Drivers/CMSIS/Include/arm_math.h ****     /* 1.31 with exp 1 */
 590:Drivers/CMSIS/Include/arm_math.h ****     out = pRecipTable[index];
 591:Drivers/CMSIS/Include/arm_math.h **** 
 592:Drivers/CMSIS/Include/arm_math.h ****     /* calculation of reciprocal value */
 593:Drivers/CMSIS/Include/arm_math.h ****     /* running approximation for two iterations */
 594:Drivers/CMSIS/Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 595:Drivers/CMSIS/Include/arm_math.h ****     {
 596:Drivers/CMSIS/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 597:Drivers/CMSIS/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 598:Drivers/CMSIS/Include/arm_math.h ****       /*      1.31 with exp 1 */
 599:Drivers/CMSIS/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 600:Drivers/CMSIS/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 601:Drivers/CMSIS/Include/arm_math.h ****     }
 602:Drivers/CMSIS/Include/arm_math.h **** 
 603:Drivers/CMSIS/Include/arm_math.h ****     /* write output */
 604:Drivers/CMSIS/Include/arm_math.h ****     *dst = out;
 605:Drivers/CMSIS/Include/arm_math.h **** 
 606:Drivers/CMSIS/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 607:Drivers/CMSIS/Include/arm_math.h ****     return (signBits + 1u);
 608:Drivers/CMSIS/Include/arm_math.h ****   }
 609:Drivers/CMSIS/Include/arm_math.h **** 
 610:Drivers/CMSIS/Include/arm_math.h **** 
 611:Drivers/CMSIS/Include/arm_math.h ****   /**
 612:Drivers/CMSIS/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 613:Drivers/CMSIS/Include/arm_math.h ****    */
 614:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q15(
 615:Drivers/CMSIS/Include/arm_math.h ****   q15_t in,
 616:Drivers/CMSIS/Include/arm_math.h ****   q15_t * dst,
 617:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRecipTable)
 618:Drivers/CMSIS/Include/arm_math.h ****   {
 619:Drivers/CMSIS/Include/arm_math.h ****     q15_t out = 0;
 620:Drivers/CMSIS/Include/arm_math.h ****     uint32_t tempVal = 0;
 621:Drivers/CMSIS/Include/arm_math.h ****     uint32_t index = 0, i = 0;
ARM GAS  /tmp/ccgoDI2u.s 			page 72


 622:Drivers/CMSIS/Include/arm_math.h ****     uint32_t signBits = 0;
 623:Drivers/CMSIS/Include/arm_math.h **** 
 624:Drivers/CMSIS/Include/arm_math.h ****     if(in > 0)
 625:Drivers/CMSIS/Include/arm_math.h ****     {
 626:Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 627:Drivers/CMSIS/Include/arm_math.h ****     }
 628:Drivers/CMSIS/Include/arm_math.h ****     else
 629:Drivers/CMSIS/Include/arm_math.h ****     {
 630:Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 631:Drivers/CMSIS/Include/arm_math.h ****     }
 632:Drivers/CMSIS/Include/arm_math.h **** 
 633:Drivers/CMSIS/Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 634:Drivers/CMSIS/Include/arm_math.h ****     in = (in << signBits);
 635:Drivers/CMSIS/Include/arm_math.h **** 
 636:Drivers/CMSIS/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 637:Drivers/CMSIS/Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 638:Drivers/CMSIS/Include/arm_math.h ****     index = (index & INDEX_MASK);
 639:Drivers/CMSIS/Include/arm_math.h **** 
 640:Drivers/CMSIS/Include/arm_math.h ****     /*      1.15 with exp 1  */
 641:Drivers/CMSIS/Include/arm_math.h ****     out = pRecipTable[index];
 642:Drivers/CMSIS/Include/arm_math.h **** 
 643:Drivers/CMSIS/Include/arm_math.h ****     /* calculation of reciprocal value */
 644:Drivers/CMSIS/Include/arm_math.h ****     /* running approximation for two iterations */
 645:Drivers/CMSIS/Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 646:Drivers/CMSIS/Include/arm_math.h ****     {
 647:Drivers/CMSIS/Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 648:Drivers/CMSIS/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 649:Drivers/CMSIS/Include/arm_math.h ****       /*      1.15 with exp 1 */
 650:Drivers/CMSIS/Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 651:Drivers/CMSIS/Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 652:Drivers/CMSIS/Include/arm_math.h ****     }
 653:Drivers/CMSIS/Include/arm_math.h **** 
 654:Drivers/CMSIS/Include/arm_math.h ****     /* write output */
 655:Drivers/CMSIS/Include/arm_math.h ****     *dst = out;
 656:Drivers/CMSIS/Include/arm_math.h **** 
 657:Drivers/CMSIS/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 658:Drivers/CMSIS/Include/arm_math.h ****     return (signBits + 1);
 659:Drivers/CMSIS/Include/arm_math.h ****   }
 660:Drivers/CMSIS/Include/arm_math.h **** 
 661:Drivers/CMSIS/Include/arm_math.h **** 
 662:Drivers/CMSIS/Include/arm_math.h ****   /*
 663:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 664:Drivers/CMSIS/Include/arm_math.h ****    */
 665:Drivers/CMSIS/Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 666:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t __SSAT(
 667:Drivers/CMSIS/Include/arm_math.h ****   q31_t x,
 668:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 669:Drivers/CMSIS/Include/arm_math.h ****   {
 670:Drivers/CMSIS/Include/arm_math.h ****     int32_t posMax, negMin;
 671:Drivers/CMSIS/Include/arm_math.h ****     uint32_t i;
 672:Drivers/CMSIS/Include/arm_math.h **** 
 673:Drivers/CMSIS/Include/arm_math.h ****     posMax = 1;
 674:Drivers/CMSIS/Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 675:Drivers/CMSIS/Include/arm_math.h ****     {
 676:Drivers/CMSIS/Include/arm_math.h ****       posMax = posMax * 2;
 677:Drivers/CMSIS/Include/arm_math.h ****     }
 678:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 73


 679:Drivers/CMSIS/Include/arm_math.h ****     if(x > 0)
 680:Drivers/CMSIS/Include/arm_math.h ****     {
 681:Drivers/CMSIS/Include/arm_math.h ****       posMax = (posMax - 1);
 682:Drivers/CMSIS/Include/arm_math.h **** 
 683:Drivers/CMSIS/Include/arm_math.h ****       if(x > posMax)
 684:Drivers/CMSIS/Include/arm_math.h ****       {
 685:Drivers/CMSIS/Include/arm_math.h ****         x = posMax;
 686:Drivers/CMSIS/Include/arm_math.h ****       }
 687:Drivers/CMSIS/Include/arm_math.h ****     }
 688:Drivers/CMSIS/Include/arm_math.h ****     else
 689:Drivers/CMSIS/Include/arm_math.h ****     {
 690:Drivers/CMSIS/Include/arm_math.h ****       negMin = -posMax;
 691:Drivers/CMSIS/Include/arm_math.h **** 
 692:Drivers/CMSIS/Include/arm_math.h ****       if(x < negMin)
 693:Drivers/CMSIS/Include/arm_math.h ****       {
 694:Drivers/CMSIS/Include/arm_math.h ****         x = negMin;
 695:Drivers/CMSIS/Include/arm_math.h ****       }
 696:Drivers/CMSIS/Include/arm_math.h ****     }
 697:Drivers/CMSIS/Include/arm_math.h ****     return (x);
 698:Drivers/CMSIS/Include/arm_math.h ****   }
 699:Drivers/CMSIS/Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 700:Drivers/CMSIS/Include/arm_math.h **** 
 701:Drivers/CMSIS/Include/arm_math.h **** 
 702:Drivers/CMSIS/Include/arm_math.h ****   /*
 703:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 704:Drivers/CMSIS/Include/arm_math.h ****    */
 705:Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 706:Drivers/CMSIS/Include/arm_math.h **** 
 707:Drivers/CMSIS/Include/arm_math.h ****   /*
 708:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 709:Drivers/CMSIS/Include/arm_math.h ****    */
 710:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QADD8(
 711:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 712:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 713:Drivers/CMSIS/Include/arm_math.h ****   {
 714:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s, t, u;
 715:Drivers/CMSIS/Include/arm_math.h **** 
 716:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 717:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 718:Drivers/CMSIS/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 719:Drivers/CMSIS/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 720:Drivers/CMSIS/Include/arm_math.h **** 
 721:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 722:Drivers/CMSIS/Include/arm_math.h ****   }
 723:Drivers/CMSIS/Include/arm_math.h **** 
 724:Drivers/CMSIS/Include/arm_math.h **** 
 725:Drivers/CMSIS/Include/arm_math.h ****   /*
 726:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 727:Drivers/CMSIS/Include/arm_math.h ****    */
 728:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSUB8(
 729:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 730:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 731:Drivers/CMSIS/Include/arm_math.h ****   {
 732:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s, t, u;
 733:Drivers/CMSIS/Include/arm_math.h **** 
 734:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 735:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
ARM GAS  /tmp/ccgoDI2u.s 			page 74


 736:Drivers/CMSIS/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 737:Drivers/CMSIS/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 738:Drivers/CMSIS/Include/arm_math.h **** 
 739:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 740:Drivers/CMSIS/Include/arm_math.h ****   }
 741:Drivers/CMSIS/Include/arm_math.h **** 
 742:Drivers/CMSIS/Include/arm_math.h **** 
 743:Drivers/CMSIS/Include/arm_math.h ****   /*
 744:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 745:Drivers/CMSIS/Include/arm_math.h ****    */
 746:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QADD16(
 747:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 748:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 749:Drivers/CMSIS/Include/arm_math.h ****   {
 750:Drivers/CMSIS/Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 751:Drivers/CMSIS/Include/arm_math.h ****     q31_t r = 0, s = 0;
 752:Drivers/CMSIS/Include/arm_math.h **** 
 753:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 754:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 755:Drivers/CMSIS/Include/arm_math.h **** 
 756:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 757:Drivers/CMSIS/Include/arm_math.h ****   }
 758:Drivers/CMSIS/Include/arm_math.h **** 
 759:Drivers/CMSIS/Include/arm_math.h **** 
 760:Drivers/CMSIS/Include/arm_math.h ****   /*
 761:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 762:Drivers/CMSIS/Include/arm_math.h ****    */
 763:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHADD16(
 764:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 765:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 766:Drivers/CMSIS/Include/arm_math.h ****   {
 767:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 768:Drivers/CMSIS/Include/arm_math.h **** 
 769:Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 770:Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 771:Drivers/CMSIS/Include/arm_math.h **** 
 772:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 773:Drivers/CMSIS/Include/arm_math.h ****   }
 774:Drivers/CMSIS/Include/arm_math.h **** 
 775:Drivers/CMSIS/Include/arm_math.h **** 
 776:Drivers/CMSIS/Include/arm_math.h ****   /*
 777:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 778:Drivers/CMSIS/Include/arm_math.h ****    */
 779:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSUB16(
 780:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 781:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 782:Drivers/CMSIS/Include/arm_math.h ****   {
 783:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 784:Drivers/CMSIS/Include/arm_math.h **** 
 785:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 786:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 787:Drivers/CMSIS/Include/arm_math.h **** 
 788:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 789:Drivers/CMSIS/Include/arm_math.h ****   }
 790:Drivers/CMSIS/Include/arm_math.h **** 
 791:Drivers/CMSIS/Include/arm_math.h **** 
 792:Drivers/CMSIS/Include/arm_math.h ****   /*
ARM GAS  /tmp/ccgoDI2u.s 			page 75


 793:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 794:Drivers/CMSIS/Include/arm_math.h ****    */
 795:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHSUB16(
 796:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 797:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 798:Drivers/CMSIS/Include/arm_math.h ****   {
 799:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 800:Drivers/CMSIS/Include/arm_math.h **** 
 801:Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 802:Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 803:Drivers/CMSIS/Include/arm_math.h **** 
 804:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 805:Drivers/CMSIS/Include/arm_math.h ****   }
 806:Drivers/CMSIS/Include/arm_math.h **** 
 807:Drivers/CMSIS/Include/arm_math.h **** 
 808:Drivers/CMSIS/Include/arm_math.h ****   /*
 809:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 810:Drivers/CMSIS/Include/arm_math.h ****    */
 811:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QASX(
 812:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 813:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 814:Drivers/CMSIS/Include/arm_math.h ****   {
 815:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 816:Drivers/CMSIS/Include/arm_math.h **** 
 817:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 818:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 819:Drivers/CMSIS/Include/arm_math.h **** 
 820:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 821:Drivers/CMSIS/Include/arm_math.h ****   }
 822:Drivers/CMSIS/Include/arm_math.h **** 
 823:Drivers/CMSIS/Include/arm_math.h **** 
 824:Drivers/CMSIS/Include/arm_math.h ****   /*
 825:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 826:Drivers/CMSIS/Include/arm_math.h ****    */
 827:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHASX(
 828:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 829:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 830:Drivers/CMSIS/Include/arm_math.h ****   {
 831:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 832:Drivers/CMSIS/Include/arm_math.h **** 
 833:Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 834:Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 835:Drivers/CMSIS/Include/arm_math.h **** 
 836:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 837:Drivers/CMSIS/Include/arm_math.h ****   }
 838:Drivers/CMSIS/Include/arm_math.h **** 
 839:Drivers/CMSIS/Include/arm_math.h **** 
 840:Drivers/CMSIS/Include/arm_math.h ****   /*
 841:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 842:Drivers/CMSIS/Include/arm_math.h ****    */
 843:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSAX(
 844:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 845:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 846:Drivers/CMSIS/Include/arm_math.h ****   {
 847:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 848:Drivers/CMSIS/Include/arm_math.h **** 
 849:Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
ARM GAS  /tmp/ccgoDI2u.s 			page 76


 850:Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 851:Drivers/CMSIS/Include/arm_math.h **** 
 852:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 853:Drivers/CMSIS/Include/arm_math.h ****   }
 854:Drivers/CMSIS/Include/arm_math.h **** 
 855:Drivers/CMSIS/Include/arm_math.h **** 
 856:Drivers/CMSIS/Include/arm_math.h ****   /*
 857:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 858:Drivers/CMSIS/Include/arm_math.h ****    */
 859:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHSAX(
 860:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 861:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 862:Drivers/CMSIS/Include/arm_math.h ****   {
 863:Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 864:Drivers/CMSIS/Include/arm_math.h **** 
 865:Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 866:Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 867:Drivers/CMSIS/Include/arm_math.h **** 
 868:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 869:Drivers/CMSIS/Include/arm_math.h ****   }
 870:Drivers/CMSIS/Include/arm_math.h **** 
 871:Drivers/CMSIS/Include/arm_math.h **** 
 872:Drivers/CMSIS/Include/arm_math.h ****   /*
 873:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 874:Drivers/CMSIS/Include/arm_math.h ****    */
 875:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUSDX(
 876:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 877:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 878:Drivers/CMSIS/Include/arm_math.h ****   {
 879:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 880:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 881:Drivers/CMSIS/Include/arm_math.h ****   }
 882:Drivers/CMSIS/Include/arm_math.h **** 
 883:Drivers/CMSIS/Include/arm_math.h ****   /*
 884:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 885:Drivers/CMSIS/Include/arm_math.h ****    */
 886:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUADX(
 887:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 888:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 889:Drivers/CMSIS/Include/arm_math.h ****   {
 890:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 891:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 892:Drivers/CMSIS/Include/arm_math.h ****   }
 893:Drivers/CMSIS/Include/arm_math.h **** 
 894:Drivers/CMSIS/Include/arm_math.h **** 
 895:Drivers/CMSIS/Include/arm_math.h ****   /*
 896:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 897:Drivers/CMSIS/Include/arm_math.h ****    */
 898:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE int32_t __QADD(
 899:Drivers/CMSIS/Include/arm_math.h ****   int32_t x,
 900:Drivers/CMSIS/Include/arm_math.h ****   int32_t y)
 901:Drivers/CMSIS/Include/arm_math.h ****   {
 902:Drivers/CMSIS/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 903:Drivers/CMSIS/Include/arm_math.h ****   }
 904:Drivers/CMSIS/Include/arm_math.h **** 
 905:Drivers/CMSIS/Include/arm_math.h **** 
 906:Drivers/CMSIS/Include/arm_math.h ****   /*
ARM GAS  /tmp/ccgoDI2u.s 			page 77


 907:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 908:Drivers/CMSIS/Include/arm_math.h ****    */
 909:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE int32_t __QSUB(
 910:Drivers/CMSIS/Include/arm_math.h ****   int32_t x,
 911:Drivers/CMSIS/Include/arm_math.h ****   int32_t y)
 912:Drivers/CMSIS/Include/arm_math.h ****   {
 913:Drivers/CMSIS/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 914:Drivers/CMSIS/Include/arm_math.h ****   }
 915:Drivers/CMSIS/Include/arm_math.h **** 
 916:Drivers/CMSIS/Include/arm_math.h **** 
 917:Drivers/CMSIS/Include/arm_math.h ****   /*
 918:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 919:Drivers/CMSIS/Include/arm_math.h ****    */
 920:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLAD(
 921:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 922:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 923:Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 924:Drivers/CMSIS/Include/arm_math.h ****   {
 925:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 926:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 927:Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 928:Drivers/CMSIS/Include/arm_math.h ****   }
 929:Drivers/CMSIS/Include/arm_math.h **** 
 930:Drivers/CMSIS/Include/arm_math.h **** 
 931:Drivers/CMSIS/Include/arm_math.h ****   /*
 932:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 933:Drivers/CMSIS/Include/arm_math.h ****    */
 934:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLADX(
 935:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 936:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 937:Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 938:Drivers/CMSIS/Include/arm_math.h ****   {
 939:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 940:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 941:Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 942:Drivers/CMSIS/Include/arm_math.h ****   }
 943:Drivers/CMSIS/Include/arm_math.h **** 
 944:Drivers/CMSIS/Include/arm_math.h **** 
 945:Drivers/CMSIS/Include/arm_math.h ****   /*
 946:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 947:Drivers/CMSIS/Include/arm_math.h ****    */
 948:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLSDX(
 949:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 950:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 951:Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 952:Drivers/CMSIS/Include/arm_math.h ****   {
 953:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 954:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 955:Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 956:Drivers/CMSIS/Include/arm_math.h ****   }
 957:Drivers/CMSIS/Include/arm_math.h **** 
 958:Drivers/CMSIS/Include/arm_math.h **** 
 959:Drivers/CMSIS/Include/arm_math.h ****   /*
 960:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 961:Drivers/CMSIS/Include/arm_math.h ****    */
 962:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint64_t __SMLALD(
 963:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
ARM GAS  /tmp/ccgoDI2u.s 			page 78


 964:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 965:Drivers/CMSIS/Include/arm_math.h ****   uint64_t sum)
 966:Drivers/CMSIS/Include/arm_math.h ****   {
 967:Drivers/CMSIS/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 968:Drivers/CMSIS/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 969:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 970:Drivers/CMSIS/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 971:Drivers/CMSIS/Include/arm_math.h ****   }
 972:Drivers/CMSIS/Include/arm_math.h **** 
 973:Drivers/CMSIS/Include/arm_math.h **** 
 974:Drivers/CMSIS/Include/arm_math.h ****   /*
 975:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 976:Drivers/CMSIS/Include/arm_math.h ****    */
 977:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint64_t __SMLALDX(
 978:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 979:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 980:Drivers/CMSIS/Include/arm_math.h ****   uint64_t sum)
 981:Drivers/CMSIS/Include/arm_math.h ****   {
 982:Drivers/CMSIS/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 983:Drivers/CMSIS/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 984:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 985:Drivers/CMSIS/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 986:Drivers/CMSIS/Include/arm_math.h ****   }
 987:Drivers/CMSIS/Include/arm_math.h **** 
 988:Drivers/CMSIS/Include/arm_math.h **** 
 989:Drivers/CMSIS/Include/arm_math.h ****   /*
 990:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
 991:Drivers/CMSIS/Include/arm_math.h ****    */
 992:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUAD(
 993:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 994:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 995:Drivers/CMSIS/Include/arm_math.h ****   {
 996:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 997:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 998:Drivers/CMSIS/Include/arm_math.h ****   }
 999:Drivers/CMSIS/Include/arm_math.h **** 
1000:Drivers/CMSIS/Include/arm_math.h **** 
1001:Drivers/CMSIS/Include/arm_math.h ****   /*
1002:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
1003:Drivers/CMSIS/Include/arm_math.h ****    */
1004:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUSD(
1005:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
1006:Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
1007:Drivers/CMSIS/Include/arm_math.h ****   {
1008:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1009:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1010:Drivers/CMSIS/Include/arm_math.h ****   }
1011:Drivers/CMSIS/Include/arm_math.h **** 
1012:Drivers/CMSIS/Include/arm_math.h **** 
1013:Drivers/CMSIS/Include/arm_math.h ****   /*
1014:Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1015:Drivers/CMSIS/Include/arm_math.h ****    */
1016:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SXTB16(
1017:Drivers/CMSIS/Include/arm_math.h ****   uint32_t x)
1018:Drivers/CMSIS/Include/arm_math.h ****   {
1019:Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1020:Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
ARM GAS  /tmp/ccgoDI2u.s 			page 79


1021:Drivers/CMSIS/Include/arm_math.h ****   }
1022:Drivers/CMSIS/Include/arm_math.h **** 
1023:Drivers/CMSIS/Include/arm_math.h **** #endif /* defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1024:Drivers/CMSIS/Include/arm_math.h **** 
1025:Drivers/CMSIS/Include/arm_math.h **** 
1026:Drivers/CMSIS/Include/arm_math.h ****   /**
1027:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1028:Drivers/CMSIS/Include/arm_math.h ****    */
1029:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1030:Drivers/CMSIS/Include/arm_math.h ****   {
1031:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1032:Drivers/CMSIS/Include/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1033:Drivers/CMSIS/Include/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1034:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q7;
1035:Drivers/CMSIS/Include/arm_math.h **** 
1036:Drivers/CMSIS/Include/arm_math.h ****   /**
1037:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1038:Drivers/CMSIS/Include/arm_math.h ****    */
1039:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1040:Drivers/CMSIS/Include/arm_math.h ****   {
1041:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1042:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1043:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1044:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q15;
1045:Drivers/CMSIS/Include/arm_math.h **** 
1046:Drivers/CMSIS/Include/arm_math.h ****   /**
1047:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1048:Drivers/CMSIS/Include/arm_math.h ****    */
1049:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1050:Drivers/CMSIS/Include/arm_math.h ****   {
1051:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1052:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1053:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1054:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q31;
1055:Drivers/CMSIS/Include/arm_math.h **** 
1056:Drivers/CMSIS/Include/arm_math.h ****   /**
1057:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1058:Drivers/CMSIS/Include/arm_math.h ****    */
1059:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1060:Drivers/CMSIS/Include/arm_math.h ****   {
1061:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1062:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1063:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1064:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_f32;
1065:Drivers/CMSIS/Include/arm_math.h **** 
1066:Drivers/CMSIS/Include/arm_math.h **** 
1067:Drivers/CMSIS/Include/arm_math.h ****   /**
1068:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1069:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1070:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1071:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1072:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1073:Drivers/CMSIS/Include/arm_math.h ****    */
1074:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q7(
1075:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1076:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
1077:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
ARM GAS  /tmp/ccgoDI2u.s 			page 80


1078:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1079:Drivers/CMSIS/Include/arm_math.h **** 
1080:Drivers/CMSIS/Include/arm_math.h **** 
1081:Drivers/CMSIS/Include/arm_math.h ****   /**
1082:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1083:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1084:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1085:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1086:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1087:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1088:Drivers/CMSIS/Include/arm_math.h ****    */
1089:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_q7(
1090:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q7 * S,
1091:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1092:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pCoeffs,
1093:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pState,
1094:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1095:Drivers/CMSIS/Include/arm_math.h **** 
1096:Drivers/CMSIS/Include/arm_math.h **** 
1097:Drivers/CMSIS/Include/arm_math.h ****   /**
1098:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1099:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1100:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1101:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1102:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1103:Drivers/CMSIS/Include/arm_math.h ****    */
1104:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q15(
1105:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1106:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1107:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1108:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1109:Drivers/CMSIS/Include/arm_math.h **** 
1110:Drivers/CMSIS/Include/arm_math.h **** 
1111:Drivers/CMSIS/Include/arm_math.h ****   /**
1112:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1113:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1114:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1115:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1116:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1117:Drivers/CMSIS/Include/arm_math.h ****    */
1118:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_fast_q15(
1119:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1120:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1121:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1122:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1123:Drivers/CMSIS/Include/arm_math.h **** 
1124:Drivers/CMSIS/Include/arm_math.h **** 
1125:Drivers/CMSIS/Include/arm_math.h ****   /**
1126:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1127:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1128:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1129:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1130:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1131:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1132:Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1133:Drivers/CMSIS/Include/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1134:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 81


1135:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_init_q15(
1136:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q15 * S,
1137:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1138:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
1139:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
1140:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1141:Drivers/CMSIS/Include/arm_math.h **** 
1142:Drivers/CMSIS/Include/arm_math.h **** 
1143:Drivers/CMSIS/Include/arm_math.h ****   /**
1144:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1145:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1146:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1147:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1148:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1149:Drivers/CMSIS/Include/arm_math.h ****    */
1150:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q31(
1151:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1152:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1153:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1154:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1155:Drivers/CMSIS/Include/arm_math.h **** 
1156:Drivers/CMSIS/Include/arm_math.h **** 
1157:Drivers/CMSIS/Include/arm_math.h ****   /**
1158:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1159:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1160:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1161:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1162:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1163:Drivers/CMSIS/Include/arm_math.h ****    */
1164:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_fast_q31(
1165:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1166:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1167:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1168:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1169:Drivers/CMSIS/Include/arm_math.h **** 
1170:Drivers/CMSIS/Include/arm_math.h **** 
1171:Drivers/CMSIS/Include/arm_math.h ****   /**
1172:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1173:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1174:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1175:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1176:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1177:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1178:Drivers/CMSIS/Include/arm_math.h ****    */
1179:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_q31(
1180:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q31 * S,
1181:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1182:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
1183:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
1184:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1185:Drivers/CMSIS/Include/arm_math.h **** 
1186:Drivers/CMSIS/Include/arm_math.h **** 
1187:Drivers/CMSIS/Include/arm_math.h ****   /**
1188:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1189:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1190:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1191:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  /tmp/ccgoDI2u.s 			page 82


1192:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1193:Drivers/CMSIS/Include/arm_math.h ****    */
1194:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_f32(
1195:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1196:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
1197:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1198:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1199:Drivers/CMSIS/Include/arm_math.h **** 
1200:Drivers/CMSIS/Include/arm_math.h **** 
1201:Drivers/CMSIS/Include/arm_math.h ****   /**
1202:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1203:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1204:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1205:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1206:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1207:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1208:Drivers/CMSIS/Include/arm_math.h ****    */
1209:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_f32(
1210:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_f32 * S,
1211:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1212:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
1213:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
1214:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1215:Drivers/CMSIS/Include/arm_math.h **** 
1216:Drivers/CMSIS/Include/arm_math.h **** 
1217:Drivers/CMSIS/Include/arm_math.h ****   /**
1218:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1219:Drivers/CMSIS/Include/arm_math.h ****    */
1220:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1221:Drivers/CMSIS/Include/arm_math.h ****   {
1222:Drivers/CMSIS/Include/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1223:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1224:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1225:Drivers/CMSIS/Include/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1226:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1227:Drivers/CMSIS/Include/arm_math.h **** 
1228:Drivers/CMSIS/Include/arm_math.h ****   /**
1229:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1230:Drivers/CMSIS/Include/arm_math.h ****    */
1231:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1232:Drivers/CMSIS/Include/arm_math.h ****   {
1233:Drivers/CMSIS/Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1234:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1235:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1236:Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1237:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1238:Drivers/CMSIS/Include/arm_math.h **** 
1239:Drivers/CMSIS/Include/arm_math.h ****   /**
1240:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1241:Drivers/CMSIS/Include/arm_math.h ****    */
1242:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1243:Drivers/CMSIS/Include/arm_math.h ****   {
1244:Drivers/CMSIS/Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1245:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1246:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1247:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1248:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 83


1249:Drivers/CMSIS/Include/arm_math.h **** 
1250:Drivers/CMSIS/Include/arm_math.h ****   /**
1251:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1252:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1253:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1254:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1255:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1256:Drivers/CMSIS/Include/arm_math.h ****    */
1257:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1258:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1259:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1260:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1261:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1262:Drivers/CMSIS/Include/arm_math.h **** 
1263:Drivers/CMSIS/Include/arm_math.h **** 
1264:Drivers/CMSIS/Include/arm_math.h ****   /**
1265:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1266:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1267:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1268:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1269:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1270:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1271:Drivers/CMSIS/Include/arm_math.h ****    */
1272:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1273:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1274:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1275:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
1276:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
1277:Drivers/CMSIS/Include/arm_math.h ****   int8_t postShift);
1278:Drivers/CMSIS/Include/arm_math.h **** 
1279:Drivers/CMSIS/Include/arm_math.h **** 
1280:Drivers/CMSIS/Include/arm_math.h ****   /**
1281:Drivers/CMSIS/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1282:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1283:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1284:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1285:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1286:Drivers/CMSIS/Include/arm_math.h ****    */
1287:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1288:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1289:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1290:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1291:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1292:Drivers/CMSIS/Include/arm_math.h **** 
1293:Drivers/CMSIS/Include/arm_math.h **** 
1294:Drivers/CMSIS/Include/arm_math.h ****   /**
1295:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1296:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1297:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1298:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1299:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1300:Drivers/CMSIS/Include/arm_math.h ****    */
1301:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1302:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1303:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1304:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1305:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  /tmp/ccgoDI2u.s 			page 84


1306:Drivers/CMSIS/Include/arm_math.h **** 
1307:Drivers/CMSIS/Include/arm_math.h **** 
1308:Drivers/CMSIS/Include/arm_math.h ****   /**
1309:Drivers/CMSIS/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1310:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1311:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1312:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1313:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1314:Drivers/CMSIS/Include/arm_math.h ****    */
1315:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1316:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1317:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1318:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1319:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1320:Drivers/CMSIS/Include/arm_math.h **** 
1321:Drivers/CMSIS/Include/arm_math.h **** 
1322:Drivers/CMSIS/Include/arm_math.h ****   /**
1323:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1324:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1325:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1326:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1327:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1328:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1329:Drivers/CMSIS/Include/arm_math.h ****    */
1330:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1331:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1332:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1333:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
1334:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
1335:Drivers/CMSIS/Include/arm_math.h ****   int8_t postShift);
1336:Drivers/CMSIS/Include/arm_math.h **** 
1337:Drivers/CMSIS/Include/arm_math.h **** 
1338:Drivers/CMSIS/Include/arm_math.h ****   /**
1339:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1340:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1341:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1342:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1343:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1344:Drivers/CMSIS/Include/arm_math.h ****    */
1345:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1346:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1347:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
1348:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1349:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1350:Drivers/CMSIS/Include/arm_math.h **** 
1351:Drivers/CMSIS/Include/arm_math.h **** 
1352:Drivers/CMSIS/Include/arm_math.h ****   /**
1353:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1354:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1355:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1356:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1357:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1358:Drivers/CMSIS/Include/arm_math.h ****    */
1359:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1360:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1361:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1362:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
ARM GAS  /tmp/ccgoDI2u.s 			page 85


1363:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
1364:Drivers/CMSIS/Include/arm_math.h **** 
1365:Drivers/CMSIS/Include/arm_math.h **** 
1366:Drivers/CMSIS/Include/arm_math.h ****   /**
1367:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1368:Drivers/CMSIS/Include/arm_math.h ****    */
1369:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1370:Drivers/CMSIS/Include/arm_math.h ****   {
1371:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1372:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1373:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1374:Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_f32;
1375:Drivers/CMSIS/Include/arm_math.h **** 
1376:Drivers/CMSIS/Include/arm_math.h **** 
1377:Drivers/CMSIS/Include/arm_math.h ****   /**
1378:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1379:Drivers/CMSIS/Include/arm_math.h ****    */
1380:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1381:Drivers/CMSIS/Include/arm_math.h ****   {
1382:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1383:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1384:Drivers/CMSIS/Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1385:Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_f64;
1386:Drivers/CMSIS/Include/arm_math.h **** 
1387:Drivers/CMSIS/Include/arm_math.h ****   /**
1388:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1389:Drivers/CMSIS/Include/arm_math.h ****    */
1390:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1391:Drivers/CMSIS/Include/arm_math.h ****   {
1392:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1393:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1394:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1395:Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_q15;
1396:Drivers/CMSIS/Include/arm_math.h **** 
1397:Drivers/CMSIS/Include/arm_math.h ****   /**
1398:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1399:Drivers/CMSIS/Include/arm_math.h ****    */
1400:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1401:Drivers/CMSIS/Include/arm_math.h ****   {
1402:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1403:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1404:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1405:Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_q31;
1406:Drivers/CMSIS/Include/arm_math.h **** 
1407:Drivers/CMSIS/Include/arm_math.h **** 
1408:Drivers/CMSIS/Include/arm_math.h ****   /**
1409:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix addition.
1410:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1411:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1412:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1413:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1414:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1415:Drivers/CMSIS/Include/arm_math.h ****    */
1416:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_f32(
1417:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1418:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1419:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
ARM GAS  /tmp/ccgoDI2u.s 			page 86


1420:Drivers/CMSIS/Include/arm_math.h **** 
1421:Drivers/CMSIS/Include/arm_math.h **** 
1422:Drivers/CMSIS/Include/arm_math.h ****   /**
1423:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix addition.
1424:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1425:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1426:Drivers/CMSIS/Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1427:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1428:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1429:Drivers/CMSIS/Include/arm_math.h ****    */
1430:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_q15(
1431:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1432:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1433:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1434:Drivers/CMSIS/Include/arm_math.h **** 
1435:Drivers/CMSIS/Include/arm_math.h **** 
1436:Drivers/CMSIS/Include/arm_math.h ****   /**
1437:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix addition.
1438:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1439:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1440:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1441:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1442:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1443:Drivers/CMSIS/Include/arm_math.h ****    */
1444:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_q31(
1445:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1446:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1447:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1448:Drivers/CMSIS/Include/arm_math.h **** 
1449:Drivers/CMSIS/Include/arm_math.h **** 
1450:Drivers/CMSIS/Include/arm_math.h ****   /**
1451:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1452:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1453:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1454:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1455:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1456:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1457:Drivers/CMSIS/Include/arm_math.h ****    */
1458:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1459:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1460:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1461:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1462:Drivers/CMSIS/Include/arm_math.h **** 
1463:Drivers/CMSIS/Include/arm_math.h **** 
1464:Drivers/CMSIS/Include/arm_math.h ****   /**
1465:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1466:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1467:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1468:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1469:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1470:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1471:Drivers/CMSIS/Include/arm_math.h ****    */
1472:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1473:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1474:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1475:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1476:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
ARM GAS  /tmp/ccgoDI2u.s 			page 87


1477:Drivers/CMSIS/Include/arm_math.h **** 
1478:Drivers/CMSIS/Include/arm_math.h **** 
1479:Drivers/CMSIS/Include/arm_math.h ****   /**
1480:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1481:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1482:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1483:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1484:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1485:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1486:Drivers/CMSIS/Include/arm_math.h ****    */
1487:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1488:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1489:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1490:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1491:Drivers/CMSIS/Include/arm_math.h **** 
1492:Drivers/CMSIS/Include/arm_math.h **** 
1493:Drivers/CMSIS/Include/arm_math.h ****   /**
1494:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1495:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1496:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1497:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1498:Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1499:Drivers/CMSIS/Include/arm_math.h ****    */
1500:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_f32(
1501:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1502:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1503:Drivers/CMSIS/Include/arm_math.h **** 
1504:Drivers/CMSIS/Include/arm_math.h **** 
1505:Drivers/CMSIS/Include/arm_math.h ****   /**
1506:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix transpose.
1507:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1508:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1509:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1510:Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1511:Drivers/CMSIS/Include/arm_math.h ****    */
1512:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_q15(
1513:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1514:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1515:Drivers/CMSIS/Include/arm_math.h **** 
1516:Drivers/CMSIS/Include/arm_math.h **** 
1517:Drivers/CMSIS/Include/arm_math.h ****   /**
1518:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix transpose.
1519:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1520:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1521:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1522:Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1523:Drivers/CMSIS/Include/arm_math.h ****    */
1524:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_q31(
1525:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1526:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1527:Drivers/CMSIS/Include/arm_math.h **** 
1528:Drivers/CMSIS/Include/arm_math.h **** 
1529:Drivers/CMSIS/Include/arm_math.h ****   /**
1530:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1531:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1532:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1533:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
ARM GAS  /tmp/ccgoDI2u.s 			page 88


1534:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1535:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1536:Drivers/CMSIS/Include/arm_math.h ****    */
1537:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_f32(
1538:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1539:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1540:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1541:Drivers/CMSIS/Include/arm_math.h **** 
1542:Drivers/CMSIS/Include/arm_math.h **** 
1543:Drivers/CMSIS/Include/arm_math.h ****   /**
1544:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix multiplication
1545:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1546:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1547:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1548:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1549:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1550:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1551:Drivers/CMSIS/Include/arm_math.h ****    */
1552:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_q15(
1553:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1554:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1555:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1556:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
1557:Drivers/CMSIS/Include/arm_math.h **** 
1558:Drivers/CMSIS/Include/arm_math.h **** 
1559:Drivers/CMSIS/Include/arm_math.h ****   /**
1560:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1561:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1562:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1563:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1564:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1565:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1566:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1567:Drivers/CMSIS/Include/arm_math.h ****    */
1568:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1569:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1570:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1571:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1572:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
1573:Drivers/CMSIS/Include/arm_math.h **** 
1574:Drivers/CMSIS/Include/arm_math.h **** 
1575:Drivers/CMSIS/Include/arm_math.h ****   /**
1576:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix multiplication
1577:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1578:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1579:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1580:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1581:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1582:Drivers/CMSIS/Include/arm_math.h ****    */
1583:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_q31(
1584:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1585:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1586:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1587:Drivers/CMSIS/Include/arm_math.h **** 
1588:Drivers/CMSIS/Include/arm_math.h **** 
1589:Drivers/CMSIS/Include/arm_math.h ****   /**
1590:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
ARM GAS  /tmp/ccgoDI2u.s 			page 89


1591:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1592:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1593:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1594:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1595:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1596:Drivers/CMSIS/Include/arm_math.h ****    */
1597:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1598:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1599:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1600:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1601:Drivers/CMSIS/Include/arm_math.h **** 
1602:Drivers/CMSIS/Include/arm_math.h **** 
1603:Drivers/CMSIS/Include/arm_math.h ****   /**
1604:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1605:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1606:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1607:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1608:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1609:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1610:Drivers/CMSIS/Include/arm_math.h ****    */
1611:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_f32(
1612:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1613:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1614:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1615:Drivers/CMSIS/Include/arm_math.h **** 
1616:Drivers/CMSIS/Include/arm_math.h **** 
1617:Drivers/CMSIS/Include/arm_math.h ****   /**
1618:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix subtraction
1619:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1620:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1621:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1622:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1623:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1624:Drivers/CMSIS/Include/arm_math.h ****    */
1625:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_q15(
1626:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1627:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1628:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1629:Drivers/CMSIS/Include/arm_math.h **** 
1630:Drivers/CMSIS/Include/arm_math.h **** 
1631:Drivers/CMSIS/Include/arm_math.h ****   /**
1632:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix subtraction
1633:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1634:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1635:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1636:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1637:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1638:Drivers/CMSIS/Include/arm_math.h ****    */
1639:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_q31(
1640:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1641:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1642:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1643:Drivers/CMSIS/Include/arm_math.h **** 
1644:Drivers/CMSIS/Include/arm_math.h **** 
1645:Drivers/CMSIS/Include/arm_math.h ****   /**
1646:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1647:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
ARM GAS  /tmp/ccgoDI2u.s 			page 90


1648:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scale  scale factor
1649:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1650:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1651:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1652:Drivers/CMSIS/Include/arm_math.h ****    */
1653:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_f32(
1654:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1655:Drivers/CMSIS/Include/arm_math.h ****   float32_t scale,
1656:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1657:Drivers/CMSIS/Include/arm_math.h **** 
1658:Drivers/CMSIS/Include/arm_math.h **** 
1659:Drivers/CMSIS/Include/arm_math.h ****   /**
1660:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix scaling.
1661:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1662:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1663:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1664:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to output matrix
1665:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1666:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1667:Drivers/CMSIS/Include/arm_math.h ****    */
1668:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_q15(
1669:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1670:Drivers/CMSIS/Include/arm_math.h ****   q15_t scaleFract,
1671:Drivers/CMSIS/Include/arm_math.h ****   int32_t shift,
1672:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1673:Drivers/CMSIS/Include/arm_math.h **** 
1674:Drivers/CMSIS/Include/arm_math.h **** 
1675:Drivers/CMSIS/Include/arm_math.h ****   /**
1676:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix scaling.
1677:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1678:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1679:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1680:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1681:Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1682:Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1683:Drivers/CMSIS/Include/arm_math.h ****    */
1684:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_q31(
1685:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1686:Drivers/CMSIS/Include/arm_math.h ****   q31_t scaleFract,
1687:Drivers/CMSIS/Include/arm_math.h ****   int32_t shift,
1688:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1689:Drivers/CMSIS/Include/arm_math.h **** 
1690:Drivers/CMSIS/Include/arm_math.h **** 
1691:Drivers/CMSIS/Include/arm_math.h ****   /**
1692:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1693:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1694:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1695:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1696:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1697:Drivers/CMSIS/Include/arm_math.h ****    */
1698:Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_q31(
1699:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * S,
1700:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1701:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1702:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pData);
1703:Drivers/CMSIS/Include/arm_math.h **** 
1704:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 91


1705:Drivers/CMSIS/Include/arm_math.h ****   /**
1706:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1707:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1708:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1709:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1710:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1711:Drivers/CMSIS/Include/arm_math.h ****    */
1712:Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_q15(
1713:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * S,
1714:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1715:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1716:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pData);
1717:Drivers/CMSIS/Include/arm_math.h **** 
1718:Drivers/CMSIS/Include/arm_math.h **** 
1719:Drivers/CMSIS/Include/arm_math.h ****   /**
1720:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1721:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1722:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1723:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1724:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1725:Drivers/CMSIS/Include/arm_math.h ****    */
1726:Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_f32(
1727:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * S,
1728:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1729:Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1730:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pData);
1731:Drivers/CMSIS/Include/arm_math.h **** 
1732:Drivers/CMSIS/Include/arm_math.h **** 
1733:Drivers/CMSIS/Include/arm_math.h **** 
1734:Drivers/CMSIS/Include/arm_math.h ****   /**
1735:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1736:Drivers/CMSIS/Include/arm_math.h ****    */
1737:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1738:Drivers/CMSIS/Include/arm_math.h ****   {
1739:Drivers/CMSIS/Include/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1740:Drivers/CMSIS/Include/arm_math.h **** #ifdef ARM_MATH_CM0_FAMILY
1741:Drivers/CMSIS/Include/arm_math.h ****     q15_t A1;
1742:Drivers/CMSIS/Include/arm_math.h ****     q15_t A2;
1743:Drivers/CMSIS/Include/arm_math.h **** #else
1744:Drivers/CMSIS/Include/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1745:Drivers/CMSIS/Include/arm_math.h **** #endif
1746:Drivers/CMSIS/Include/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1747:Drivers/CMSIS/Include/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1748:Drivers/CMSIS/Include/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1749:Drivers/CMSIS/Include/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1750:Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_q15;
1751:Drivers/CMSIS/Include/arm_math.h **** 
1752:Drivers/CMSIS/Include/arm_math.h ****   /**
1753:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1754:Drivers/CMSIS/Include/arm_math.h ****    */
1755:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1756:Drivers/CMSIS/Include/arm_math.h ****   {
1757:Drivers/CMSIS/Include/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1758:Drivers/CMSIS/Include/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1759:Drivers/CMSIS/Include/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1760:Drivers/CMSIS/Include/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1761:Drivers/CMSIS/Include/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
ARM GAS  /tmp/ccgoDI2u.s 			page 92


1762:Drivers/CMSIS/Include/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1763:Drivers/CMSIS/Include/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1764:Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_q31;
1765:Drivers/CMSIS/Include/arm_math.h **** 
1766:Drivers/CMSIS/Include/arm_math.h ****   /**
1767:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1768:Drivers/CMSIS/Include/arm_math.h ****    */
1769:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1770:Drivers/CMSIS/Include/arm_math.h ****   {
1771:Drivers/CMSIS/Include/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1772:Drivers/CMSIS/Include/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1773:Drivers/CMSIS/Include/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1774:Drivers/CMSIS/Include/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1775:Drivers/CMSIS/Include/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1776:Drivers/CMSIS/Include/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1777:Drivers/CMSIS/Include/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1778:Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_f32;
1779:Drivers/CMSIS/Include/arm_math.h **** 
1780:Drivers/CMSIS/Include/arm_math.h **** 
1781:Drivers/CMSIS/Include/arm_math.h **** 
1782:Drivers/CMSIS/Include/arm_math.h ****   /**
1783:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1784:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1785:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1786:Drivers/CMSIS/Include/arm_math.h ****    */
1787:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_f32(
1788:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S,
1789:Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1790:Drivers/CMSIS/Include/arm_math.h **** 
1791:Drivers/CMSIS/Include/arm_math.h **** 
1792:Drivers/CMSIS/Include/arm_math.h ****   /**
1793:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1794:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1795:Drivers/CMSIS/Include/arm_math.h ****    */
1796:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_f32(
1797:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S);
1798:Drivers/CMSIS/Include/arm_math.h **** 
1799:Drivers/CMSIS/Include/arm_math.h **** 
1800:Drivers/CMSIS/Include/arm_math.h ****   /**
1801:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1802:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1803:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1804:Drivers/CMSIS/Include/arm_math.h ****    */
1805:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_q31(
1806:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S,
1807:Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1808:Drivers/CMSIS/Include/arm_math.h **** 
1809:Drivers/CMSIS/Include/arm_math.h **** 
1810:Drivers/CMSIS/Include/arm_math.h ****   /**
1811:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1812:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1813:Drivers/CMSIS/Include/arm_math.h ****    */
1814:Drivers/CMSIS/Include/arm_math.h **** 
1815:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_q31(
1816:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S);
1817:Drivers/CMSIS/Include/arm_math.h **** 
1818:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 93


1819:Drivers/CMSIS/Include/arm_math.h ****   /**
1820:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1821:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1822:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1823:Drivers/CMSIS/Include/arm_math.h ****    */
1824:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_q15(
1825:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S,
1826:Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1827:Drivers/CMSIS/Include/arm_math.h **** 
1828:Drivers/CMSIS/Include/arm_math.h **** 
1829:Drivers/CMSIS/Include/arm_math.h ****   /**
1830:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1831:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1832:Drivers/CMSIS/Include/arm_math.h ****    */
1833:Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_q15(
1834:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S);
1835:Drivers/CMSIS/Include/arm_math.h **** 
1836:Drivers/CMSIS/Include/arm_math.h **** 
1837:Drivers/CMSIS/Include/arm_math.h ****   /**
1838:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1839:Drivers/CMSIS/Include/arm_math.h ****    */
1840:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1841:Drivers/CMSIS/Include/arm_math.h ****   {
1842:Drivers/CMSIS/Include/arm_math.h ****     uint32_t nValues;           /**< nValues */
1843:Drivers/CMSIS/Include/arm_math.h ****     float32_t x1;               /**< x1 */
1844:Drivers/CMSIS/Include/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1845:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1846:Drivers/CMSIS/Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1847:Drivers/CMSIS/Include/arm_math.h **** 
1848:Drivers/CMSIS/Include/arm_math.h ****   /**
1849:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1850:Drivers/CMSIS/Include/arm_math.h ****    */
1851:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1852:Drivers/CMSIS/Include/arm_math.h ****   {
1853:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1854:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1855:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1856:Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1857:Drivers/CMSIS/Include/arm_math.h **** 
1858:Drivers/CMSIS/Include/arm_math.h ****    /**
1859:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1860:Drivers/CMSIS/Include/arm_math.h ****    */
1861:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1862:Drivers/CMSIS/Include/arm_math.h ****   {
1863:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1864:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1865:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1866:Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1867:Drivers/CMSIS/Include/arm_math.h **** 
1868:Drivers/CMSIS/Include/arm_math.h ****    /**
1869:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1870:Drivers/CMSIS/Include/arm_math.h ****    */
1871:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1872:Drivers/CMSIS/Include/arm_math.h ****   {
1873:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1874:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1875:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
ARM GAS  /tmp/ccgoDI2u.s 			page 94


1876:Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1877:Drivers/CMSIS/Include/arm_math.h **** 
1878:Drivers/CMSIS/Include/arm_math.h ****    /**
1879:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1880:Drivers/CMSIS/Include/arm_math.h ****    */
1881:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1882:Drivers/CMSIS/Include/arm_math.h ****   {
1883:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1884:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1885:Drivers/CMSIS/Include/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1886:Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1887:Drivers/CMSIS/Include/arm_math.h **** 
1888:Drivers/CMSIS/Include/arm_math.h **** 
1889:Drivers/CMSIS/Include/arm_math.h ****   /**
1890:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector multiplication.
1891:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1892:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1893:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1894:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1895:Drivers/CMSIS/Include/arm_math.h ****    */
1896:Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q7(
1897:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
1898:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
1899:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
1900:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1901:Drivers/CMSIS/Include/arm_math.h **** 
1902:Drivers/CMSIS/Include/arm_math.h **** 
1903:Drivers/CMSIS/Include/arm_math.h ****   /**
1904:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector multiplication.
1905:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1906:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1907:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1908:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1909:Drivers/CMSIS/Include/arm_math.h ****    */
1910:Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q15(
1911:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
1912:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
1913:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1914:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1915:Drivers/CMSIS/Include/arm_math.h **** 
1916:Drivers/CMSIS/Include/arm_math.h **** 
1917:Drivers/CMSIS/Include/arm_math.h ****   /**
1918:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector multiplication.
1919:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1920:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1921:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1922:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1923:Drivers/CMSIS/Include/arm_math.h ****    */
1924:Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q31(
1925:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
1926:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
1927:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1928:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1929:Drivers/CMSIS/Include/arm_math.h **** 
1930:Drivers/CMSIS/Include/arm_math.h **** 
1931:Drivers/CMSIS/Include/arm_math.h ****   /**
1932:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector multiplication.
ARM GAS  /tmp/ccgoDI2u.s 			page 95


1933:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1934:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1935:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1936:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1937:Drivers/CMSIS/Include/arm_math.h ****    */
1938:Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_f32(
1939:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
1940:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
1941:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1942:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1943:Drivers/CMSIS/Include/arm_math.h **** 
1944:Drivers/CMSIS/Include/arm_math.h **** 
1945:Drivers/CMSIS/Include/arm_math.h ****   /**
1946:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1947:Drivers/CMSIS/Include/arm_math.h ****    */
1948:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1949:Drivers/CMSIS/Include/arm_math.h ****   {
1950:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1951:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1952:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1953:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1954:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1955:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1956:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1957:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1958:Drivers/CMSIS/Include/arm_math.h **** 
1959:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1960:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1961:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1962:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
1963:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
1964:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
1965:Drivers/CMSIS/Include/arm_math.h **** 
1966:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1967:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_q15(
1968:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1969:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc);
1970:Drivers/CMSIS/Include/arm_math.h **** 
1971:Drivers/CMSIS/Include/arm_math.h **** 
1972:Drivers/CMSIS/Include/arm_math.h ****   /**
1973:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1974:Drivers/CMSIS/Include/arm_math.h ****    */
1975:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1976:Drivers/CMSIS/Include/arm_math.h ****   {
1977:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1978:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1979:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1980:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1981:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1982:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1983:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1984:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1985:Drivers/CMSIS/Include/arm_math.h **** 
1986:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1987:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1988:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1989:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
ARM GAS  /tmp/ccgoDI2u.s 			page 96


1990:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
1991:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
1992:Drivers/CMSIS/Include/arm_math.h **** 
1993:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1994:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_q15(
1995:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1996:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc);
1997:Drivers/CMSIS/Include/arm_math.h **** 
1998:Drivers/CMSIS/Include/arm_math.h ****   /**
1999:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2000:Drivers/CMSIS/Include/arm_math.h ****    */
2001:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2002:Drivers/CMSIS/Include/arm_math.h ****   {
2003:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2004:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2005:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2006:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2007:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2008:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2009:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2010:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2011:Drivers/CMSIS/Include/arm_math.h **** 
2012:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2013:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2014:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2015:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2016:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2017:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2018:Drivers/CMSIS/Include/arm_math.h **** 
2019:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2020:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_q31(
2021:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2022:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc);
2023:Drivers/CMSIS/Include/arm_math.h **** 
2024:Drivers/CMSIS/Include/arm_math.h ****   /**
2025:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2026:Drivers/CMSIS/Include/arm_math.h ****    */
2027:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2028:Drivers/CMSIS/Include/arm_math.h ****   {
2029:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2030:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2031:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2032:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2033:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2034:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2035:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2036:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2037:Drivers/CMSIS/Include/arm_math.h **** 
2038:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2039:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_q31(
2040:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2041:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc);
2042:Drivers/CMSIS/Include/arm_math.h **** 
2043:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2044:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2045:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2046:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
ARM GAS  /tmp/ccgoDI2u.s 			page 97


2047:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2048:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2049:Drivers/CMSIS/Include/arm_math.h **** 
2050:Drivers/CMSIS/Include/arm_math.h ****   /**
2051:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2052:Drivers/CMSIS/Include/arm_math.h ****    */
2053:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2054:Drivers/CMSIS/Include/arm_math.h ****   {
2055:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2056:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2057:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2058:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2059:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2060:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2061:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2062:Drivers/CMSIS/Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2063:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2064:Drivers/CMSIS/Include/arm_math.h **** 
2065:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2066:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2067:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2068:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2069:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2070:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2071:Drivers/CMSIS/Include/arm_math.h **** 
2072:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2073:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_f32(
2074:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2075:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc);
2076:Drivers/CMSIS/Include/arm_math.h **** 
2077:Drivers/CMSIS/Include/arm_math.h ****   /**
2078:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2079:Drivers/CMSIS/Include/arm_math.h ****    */
2080:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2081:Drivers/CMSIS/Include/arm_math.h ****   {
2082:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2083:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2084:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2085:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2086:Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2087:Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2088:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2089:Drivers/CMSIS/Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2090:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2091:Drivers/CMSIS/Include/arm_math.h **** 
2092:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2093:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2094:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2095:Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2096:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2097:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2098:Drivers/CMSIS/Include/arm_math.h **** 
2099:Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2100:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_f32(
2101:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2102:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc);
2103:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 98


2104:Drivers/CMSIS/Include/arm_math.h ****   /**
2105:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2106:Drivers/CMSIS/Include/arm_math.h ****    */
2107:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2108:Drivers/CMSIS/Include/arm_math.h ****   {
2109:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2110:Drivers/CMSIS/Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2111:Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2112:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2113:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_q15;
2114:Drivers/CMSIS/Include/arm_math.h **** 
2115:Drivers/CMSIS/Include/arm_math.h **** void arm_cfft_q15(
2116:Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2117:Drivers/CMSIS/Include/arm_math.h ****     q15_t * p1,
2118:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag,
2119:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag);
2120:Drivers/CMSIS/Include/arm_math.h **** 
2121:Drivers/CMSIS/Include/arm_math.h ****   /**
2122:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2123:Drivers/CMSIS/Include/arm_math.h ****    */
2124:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2125:Drivers/CMSIS/Include/arm_math.h ****   {
2126:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2127:Drivers/CMSIS/Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2128:Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2129:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2130:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_q31;
2131:Drivers/CMSIS/Include/arm_math.h **** 
2132:Drivers/CMSIS/Include/arm_math.h **** void arm_cfft_q31(
2133:Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2134:Drivers/CMSIS/Include/arm_math.h ****     q31_t * p1,
2135:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag,
2136:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag);
2137:Drivers/CMSIS/Include/arm_math.h **** 
2138:Drivers/CMSIS/Include/arm_math.h ****   /**
2139:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2140:Drivers/CMSIS/Include/arm_math.h ****    */
2141:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2142:Drivers/CMSIS/Include/arm_math.h ****   {
2143:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2144:Drivers/CMSIS/Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2145:Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2146:Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2147:Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_f32;
2148:Drivers/CMSIS/Include/arm_math.h **** 
2149:Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_f32(
2150:Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2151:Drivers/CMSIS/Include/arm_math.h ****   float32_t * p1,
2152:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2153:Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2154:Drivers/CMSIS/Include/arm_math.h **** 
2155:Drivers/CMSIS/Include/arm_math.h ****   /**
2156:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2157:Drivers/CMSIS/Include/arm_math.h ****    */
2158:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2159:Drivers/CMSIS/Include/arm_math.h ****   {
2160:Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
ARM GAS  /tmp/ccgoDI2u.s 			page 99


2161:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2162:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2163:Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2164:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2165:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2166:Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2167:Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_q15;
2168:Drivers/CMSIS/Include/arm_math.h **** 
2169:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2170:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q15 * S,
2171:Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2172:Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
2173:Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2174:Drivers/CMSIS/Include/arm_math.h **** 
2175:Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_q15(
2176:Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2177:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2178:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
2179:Drivers/CMSIS/Include/arm_math.h **** 
2180:Drivers/CMSIS/Include/arm_math.h ****   /**
2181:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2182:Drivers/CMSIS/Include/arm_math.h ****    */
2183:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2184:Drivers/CMSIS/Include/arm_math.h ****   {
2185:Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2186:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2187:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2188:Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2189:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2190:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2191:Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2192:Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_q31;
2193:Drivers/CMSIS/Include/arm_math.h **** 
2194:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2195:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q31 * S,
2196:Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2197:Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
2198:Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2199:Drivers/CMSIS/Include/arm_math.h **** 
2200:Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_q31(
2201:Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2202:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2203:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
2204:Drivers/CMSIS/Include/arm_math.h **** 
2205:Drivers/CMSIS/Include/arm_math.h ****   /**
2206:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2207:Drivers/CMSIS/Include/arm_math.h ****    */
2208:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2209:Drivers/CMSIS/Include/arm_math.h ****   {
2210:Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2211:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2212:Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2213:Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2214:Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2215:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2216:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2217:Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
ARM GAS  /tmp/ccgoDI2u.s 			page 100


2218:Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_f32;
2219:Drivers/CMSIS/Include/arm_math.h **** 
2220:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2221:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_f32 * S,
2222:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2223:Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2224:Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
2225:Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2226:Drivers/CMSIS/Include/arm_math.h **** 
2227:Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_f32(
2228:Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2229:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2230:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
2231:Drivers/CMSIS/Include/arm_math.h **** 
2232:Drivers/CMSIS/Include/arm_math.h ****   /**
2233:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2234:Drivers/CMSIS/Include/arm_math.h ****    */
2235:Drivers/CMSIS/Include/arm_math.h **** typedef struct
2236:Drivers/CMSIS/Include/arm_math.h ****   {
2237:Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2238:Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2239:Drivers/CMSIS/Include/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2240:Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2241:Drivers/CMSIS/Include/arm_math.h **** 
2242:Drivers/CMSIS/Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2243:Drivers/CMSIS/Include/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2244:Drivers/CMSIS/Include/arm_math.h ****    uint16_t fftLen);
2245:Drivers/CMSIS/Include/arm_math.h **** 
2246:Drivers/CMSIS/Include/arm_math.h **** void arm_rfft_fast_f32(
2247:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2248:Drivers/CMSIS/Include/arm_math.h ****   float32_t * p, float32_t * pOut,
2249:Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag);
2250:Drivers/CMSIS/Include/arm_math.h **** 
2251:Drivers/CMSIS/Include/arm_math.h ****   /**
2252:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2253:Drivers/CMSIS/Include/arm_math.h ****    */
2254:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2255:Drivers/CMSIS/Include/arm_math.h ****   {
2256:Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2257:Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2258:Drivers/CMSIS/Include/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2259:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2260:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2261:Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2262:Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2263:Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_f32;
2264:Drivers/CMSIS/Include/arm_math.h **** 
2265:Drivers/CMSIS/Include/arm_math.h **** 
2266:Drivers/CMSIS/Include/arm_math.h ****   /**
2267:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2268:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2269:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2270:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2271:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2272:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2273:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2274:Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
ARM GAS  /tmp/ccgoDI2u.s 			page 101


2275:Drivers/CMSIS/Include/arm_math.h ****    */
2276:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2277:Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_f32 * S,
2278:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2279:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2280:Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2281:Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2282:Drivers/CMSIS/Include/arm_math.h ****   float32_t normalize);
2283:Drivers/CMSIS/Include/arm_math.h **** 
2284:Drivers/CMSIS/Include/arm_math.h **** 
2285:Drivers/CMSIS/Include/arm_math.h ****   /**
2286:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2287:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2288:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2289:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2290:Drivers/CMSIS/Include/arm_math.h ****    */
2291:Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_f32(
2292:Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2293:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
2294:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pInlineBuffer);
2295:Drivers/CMSIS/Include/arm_math.h **** 
2296:Drivers/CMSIS/Include/arm_math.h **** 
2297:Drivers/CMSIS/Include/arm_math.h ****   /**
2298:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2299:Drivers/CMSIS/Include/arm_math.h ****    */
2300:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2301:Drivers/CMSIS/Include/arm_math.h ****   {
2302:Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2303:Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2304:Drivers/CMSIS/Include/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2305:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2306:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2307:Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2308:Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2309:Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_q31;
2310:Drivers/CMSIS/Include/arm_math.h **** 
2311:Drivers/CMSIS/Include/arm_math.h **** 
2312:Drivers/CMSIS/Include/arm_math.h ****   /**
2313:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2314:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2315:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2316:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2317:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2318:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2319:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2320:Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2321:Drivers/CMSIS/Include/arm_math.h ****    */
2322:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2323:Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_q31 * S,
2324:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2325:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2326:Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2327:Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2328:Drivers/CMSIS/Include/arm_math.h ****   q31_t normalize);
2329:Drivers/CMSIS/Include/arm_math.h **** 
2330:Drivers/CMSIS/Include/arm_math.h **** 
2331:Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccgoDI2u.s 			page 102


2332:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2333:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2334:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2335:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2336:Drivers/CMSIS/Include/arm_math.h ****    */
2337:Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_q31(
2338:Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2339:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
2340:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pInlineBuffer);
2341:Drivers/CMSIS/Include/arm_math.h **** 
2342:Drivers/CMSIS/Include/arm_math.h **** 
2343:Drivers/CMSIS/Include/arm_math.h ****   /**
2344:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2345:Drivers/CMSIS/Include/arm_math.h ****    */
2346:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2347:Drivers/CMSIS/Include/arm_math.h ****   {
2348:Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2349:Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2350:Drivers/CMSIS/Include/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2351:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2352:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2353:Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2354:Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2355:Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_q15;
2356:Drivers/CMSIS/Include/arm_math.h **** 
2357:Drivers/CMSIS/Include/arm_math.h **** 
2358:Drivers/CMSIS/Include/arm_math.h ****   /**
2359:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2360:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2361:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2362:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2363:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2364:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2365:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2366:Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2367:Drivers/CMSIS/Include/arm_math.h ****    */
2368:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_q15(
2369:Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_q15 * S,
2370:Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2371:Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2372:Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2373:Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2374:Drivers/CMSIS/Include/arm_math.h ****   q15_t normalize);
2375:Drivers/CMSIS/Include/arm_math.h **** 
2376:Drivers/CMSIS/Include/arm_math.h **** 
2377:Drivers/CMSIS/Include/arm_math.h ****   /**
2378:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2379:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2380:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2381:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2382:Drivers/CMSIS/Include/arm_math.h ****    */
2383:Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_q15(
2384:Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2385:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
2386:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pInlineBuffer);
2387:Drivers/CMSIS/Include/arm_math.h **** 
2388:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 103


2389:Drivers/CMSIS/Include/arm_math.h ****   /**
2390:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector addition.
2391:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2392:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2393:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2394:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2395:Drivers/CMSIS/Include/arm_math.h ****    */
2396:Drivers/CMSIS/Include/arm_math.h ****   void arm_add_f32(
2397:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2398:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2399:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2400:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2401:Drivers/CMSIS/Include/arm_math.h **** 
2402:Drivers/CMSIS/Include/arm_math.h **** 
2403:Drivers/CMSIS/Include/arm_math.h ****   /**
2404:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector addition.
2405:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2406:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2407:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2408:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2409:Drivers/CMSIS/Include/arm_math.h ****    */
2410:Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q7(
2411:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2412:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2413:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2414:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2415:Drivers/CMSIS/Include/arm_math.h **** 
2416:Drivers/CMSIS/Include/arm_math.h **** 
2417:Drivers/CMSIS/Include/arm_math.h ****   /**
2418:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector addition.
2419:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2420:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2421:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2422:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2423:Drivers/CMSIS/Include/arm_math.h ****    */
2424:Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q15(
2425:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2426:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2427:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2428:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2429:Drivers/CMSIS/Include/arm_math.h **** 
2430:Drivers/CMSIS/Include/arm_math.h **** 
2431:Drivers/CMSIS/Include/arm_math.h ****   /**
2432:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector addition.
2433:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2434:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2435:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2436:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2437:Drivers/CMSIS/Include/arm_math.h ****    */
2438:Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q31(
2439:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2440:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2441:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2442:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2443:Drivers/CMSIS/Include/arm_math.h **** 
2444:Drivers/CMSIS/Include/arm_math.h **** 
2445:Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccgoDI2u.s 			page 104


2446:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2447:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2448:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2449:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2450:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2451:Drivers/CMSIS/Include/arm_math.h ****    */
2452:Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_f32(
2453:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2454:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2455:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2456:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2457:Drivers/CMSIS/Include/arm_math.h **** 
2458:Drivers/CMSIS/Include/arm_math.h **** 
2459:Drivers/CMSIS/Include/arm_math.h ****   /**
2460:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector subtraction.
2461:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2462:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2463:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2464:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2465:Drivers/CMSIS/Include/arm_math.h ****    */
2466:Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q7(
2467:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2468:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2469:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2470:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2471:Drivers/CMSIS/Include/arm_math.h **** 
2472:Drivers/CMSIS/Include/arm_math.h **** 
2473:Drivers/CMSIS/Include/arm_math.h ****   /**
2474:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector subtraction.
2475:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2476:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2477:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2478:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2479:Drivers/CMSIS/Include/arm_math.h ****    */
2480:Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q15(
2481:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2482:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2483:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2484:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2485:Drivers/CMSIS/Include/arm_math.h **** 
2486:Drivers/CMSIS/Include/arm_math.h **** 
2487:Drivers/CMSIS/Include/arm_math.h ****   /**
2488:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector subtraction.
2489:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2490:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2491:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2492:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2493:Drivers/CMSIS/Include/arm_math.h ****    */
2494:Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q31(
2495:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2496:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2497:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2498:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2499:Drivers/CMSIS/Include/arm_math.h **** 
2500:Drivers/CMSIS/Include/arm_math.h **** 
2501:Drivers/CMSIS/Include/arm_math.h ****   /**
2502:Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
ARM GAS  /tmp/ccgoDI2u.s 			page 105


2503:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2504:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2505:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2506:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2507:Drivers/CMSIS/Include/arm_math.h ****    */
2508:Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_f32(
2509:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2510:Drivers/CMSIS/Include/arm_math.h ****   float32_t scale,
2511:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2512:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2513:Drivers/CMSIS/Include/arm_math.h **** 
2514:Drivers/CMSIS/Include/arm_math.h **** 
2515:Drivers/CMSIS/Include/arm_math.h ****   /**
2516:Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2517:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2518:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2519:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2520:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2521:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2522:Drivers/CMSIS/Include/arm_math.h ****    */
2523:Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q7(
2524:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2525:Drivers/CMSIS/Include/arm_math.h ****   q7_t scaleFract,
2526:Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2527:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2528:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2529:Drivers/CMSIS/Include/arm_math.h **** 
2530:Drivers/CMSIS/Include/arm_math.h **** 
2531:Drivers/CMSIS/Include/arm_math.h ****   /**
2532:Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2533:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2534:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2535:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2536:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2537:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2538:Drivers/CMSIS/Include/arm_math.h ****    */
2539:Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q15(
2540:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2541:Drivers/CMSIS/Include/arm_math.h ****   q15_t scaleFract,
2542:Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2543:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2544:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2545:Drivers/CMSIS/Include/arm_math.h **** 
2546:Drivers/CMSIS/Include/arm_math.h **** 
2547:Drivers/CMSIS/Include/arm_math.h ****   /**
2548:Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2549:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2550:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2551:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2552:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2553:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2554:Drivers/CMSIS/Include/arm_math.h ****    */
2555:Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q31(
2556:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2557:Drivers/CMSIS/Include/arm_math.h ****   q31_t scaleFract,
2558:Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2559:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
ARM GAS  /tmp/ccgoDI2u.s 			page 106


2560:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2561:Drivers/CMSIS/Include/arm_math.h **** 
2562:Drivers/CMSIS/Include/arm_math.h **** 
2563:Drivers/CMSIS/Include/arm_math.h ****   /**
2564:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector absolute value.
2565:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2566:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2567:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2568:Drivers/CMSIS/Include/arm_math.h ****    */
2569:Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q7(
2570:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2571:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2572:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2573:Drivers/CMSIS/Include/arm_math.h **** 
2574:Drivers/CMSIS/Include/arm_math.h **** 
2575:Drivers/CMSIS/Include/arm_math.h ****   /**
2576:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2577:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2578:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2579:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2580:Drivers/CMSIS/Include/arm_math.h ****    */
2581:Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_f32(
2582:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2583:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2584:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2585:Drivers/CMSIS/Include/arm_math.h **** 
2586:Drivers/CMSIS/Include/arm_math.h **** 
2587:Drivers/CMSIS/Include/arm_math.h ****   /**
2588:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector absolute value.
2589:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2590:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2591:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2592:Drivers/CMSIS/Include/arm_math.h ****    */
2593:Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q15(
2594:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2595:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2596:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2597:Drivers/CMSIS/Include/arm_math.h **** 
2598:Drivers/CMSIS/Include/arm_math.h **** 
2599:Drivers/CMSIS/Include/arm_math.h ****   /**
2600:Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector absolute value.
2601:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2602:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2603:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2604:Drivers/CMSIS/Include/arm_math.h ****    */
2605:Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q31(
2606:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2607:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2608:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2609:Drivers/CMSIS/Include/arm_math.h **** 
2610:Drivers/CMSIS/Include/arm_math.h **** 
2611:Drivers/CMSIS/Include/arm_math.h ****   /**
2612:Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2613:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2614:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2615:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2616:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
ARM GAS  /tmp/ccgoDI2u.s 			page 107


2617:Drivers/CMSIS/Include/arm_math.h ****    */
2618:Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_f32(
2619:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2620:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2621:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2622:Drivers/CMSIS/Include/arm_math.h ****   float32_t * result);
2623:Drivers/CMSIS/Include/arm_math.h **** 
2624:Drivers/CMSIS/Include/arm_math.h **** 
2625:Drivers/CMSIS/Include/arm_math.h ****   /**
2626:Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2627:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2628:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2629:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2630:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2631:Drivers/CMSIS/Include/arm_math.h ****    */
2632:Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q7(
2633:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2634:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2635:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2636:Drivers/CMSIS/Include/arm_math.h ****   q31_t * result);
2637:Drivers/CMSIS/Include/arm_math.h **** 
2638:Drivers/CMSIS/Include/arm_math.h **** 
2639:Drivers/CMSIS/Include/arm_math.h ****   /**
2640:Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2641:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2642:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2643:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2644:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2645:Drivers/CMSIS/Include/arm_math.h ****    */
2646:Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q15(
2647:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2648:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2649:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2650:Drivers/CMSIS/Include/arm_math.h ****   q63_t * result);
2651:Drivers/CMSIS/Include/arm_math.h **** 
2652:Drivers/CMSIS/Include/arm_math.h **** 
2653:Drivers/CMSIS/Include/arm_math.h ****   /**
2654:Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
2655:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2656:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2657:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2658:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2659:Drivers/CMSIS/Include/arm_math.h ****    */
2660:Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q31(
2661:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2662:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2663:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2664:Drivers/CMSIS/Include/arm_math.h ****   q63_t * result);
2665:Drivers/CMSIS/Include/arm_math.h **** 
2666:Drivers/CMSIS/Include/arm_math.h **** 
2667:Drivers/CMSIS/Include/arm_math.h ****   /**
2668:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2669:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2670:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2671:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2672:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2673:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 108


2674:Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q7(
2675:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2676:Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2677:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2678:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2679:Drivers/CMSIS/Include/arm_math.h **** 
2680:Drivers/CMSIS/Include/arm_math.h **** 
2681:Drivers/CMSIS/Include/arm_math.h ****   /**
2682:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2683:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2684:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2685:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2686:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2687:Drivers/CMSIS/Include/arm_math.h ****    */
2688:Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q15(
2689:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2690:Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2691:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2692:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2693:Drivers/CMSIS/Include/arm_math.h **** 
2694:Drivers/CMSIS/Include/arm_math.h **** 
2695:Drivers/CMSIS/Include/arm_math.h ****   /**
2696:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2697:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2698:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2699:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2700:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2701:Drivers/CMSIS/Include/arm_math.h ****    */
2702:Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q31(
2703:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2704:Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2705:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2706:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2707:Drivers/CMSIS/Include/arm_math.h **** 
2708:Drivers/CMSIS/Include/arm_math.h **** 
2709:Drivers/CMSIS/Include/arm_math.h ****   /**
2710:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2711:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2712:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2713:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2714:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2715:Drivers/CMSIS/Include/arm_math.h ****    */
2716:Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_f32(
2717:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2718:Drivers/CMSIS/Include/arm_math.h ****   float32_t offset,
2719:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2720:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2721:Drivers/CMSIS/Include/arm_math.h **** 
2722:Drivers/CMSIS/Include/arm_math.h **** 
2723:Drivers/CMSIS/Include/arm_math.h ****   /**
2724:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2725:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2726:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2727:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2728:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2729:Drivers/CMSIS/Include/arm_math.h ****    */
2730:Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q7(
ARM GAS  /tmp/ccgoDI2u.s 			page 109


2731:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2732:Drivers/CMSIS/Include/arm_math.h ****   q7_t offset,
2733:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2734:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2735:Drivers/CMSIS/Include/arm_math.h **** 
2736:Drivers/CMSIS/Include/arm_math.h **** 
2737:Drivers/CMSIS/Include/arm_math.h ****   /**
2738:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2739:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2740:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2741:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2742:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2743:Drivers/CMSIS/Include/arm_math.h ****    */
2744:Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q15(
2745:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2746:Drivers/CMSIS/Include/arm_math.h ****   q15_t offset,
2747:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2748:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2749:Drivers/CMSIS/Include/arm_math.h **** 
2750:Drivers/CMSIS/Include/arm_math.h **** 
2751:Drivers/CMSIS/Include/arm_math.h ****   /**
2752:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2753:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2754:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2755:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2756:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2757:Drivers/CMSIS/Include/arm_math.h ****    */
2758:Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q31(
2759:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2760:Drivers/CMSIS/Include/arm_math.h ****   q31_t offset,
2761:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2762:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2763:Drivers/CMSIS/Include/arm_math.h **** 
2764:Drivers/CMSIS/Include/arm_math.h **** 
2765:Drivers/CMSIS/Include/arm_math.h ****   /**
2766:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2767:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2768:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2769:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2770:Drivers/CMSIS/Include/arm_math.h ****    */
2771:Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_f32(
2772:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2773:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2774:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2775:Drivers/CMSIS/Include/arm_math.h **** 
2776:Drivers/CMSIS/Include/arm_math.h **** 
2777:Drivers/CMSIS/Include/arm_math.h ****   /**
2778:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2779:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2780:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2781:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2782:Drivers/CMSIS/Include/arm_math.h ****    */
2783:Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q7(
2784:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2785:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2786:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2787:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 110


2788:Drivers/CMSIS/Include/arm_math.h **** 
2789:Drivers/CMSIS/Include/arm_math.h ****   /**
2790:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2791:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2792:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2793:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2794:Drivers/CMSIS/Include/arm_math.h ****    */
2795:Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q15(
2796:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2797:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2798:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2799:Drivers/CMSIS/Include/arm_math.h **** 
2800:Drivers/CMSIS/Include/arm_math.h **** 
2801:Drivers/CMSIS/Include/arm_math.h ****   /**
2802:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2803:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2804:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2805:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2806:Drivers/CMSIS/Include/arm_math.h ****    */
2807:Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q31(
2808:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2809:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2810:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2811:Drivers/CMSIS/Include/arm_math.h **** 
2812:Drivers/CMSIS/Include/arm_math.h **** 
2813:Drivers/CMSIS/Include/arm_math.h ****   /**
2814:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2815:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2816:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2817:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2818:Drivers/CMSIS/Include/arm_math.h ****    */
2819:Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_f32(
2820:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2821:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2822:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2823:Drivers/CMSIS/Include/arm_math.h **** 
2824:Drivers/CMSIS/Include/arm_math.h **** 
2825:Drivers/CMSIS/Include/arm_math.h ****   /**
2826:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2827:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2828:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2829:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2830:Drivers/CMSIS/Include/arm_math.h ****    */
2831:Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q7(
2832:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2833:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2834:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2835:Drivers/CMSIS/Include/arm_math.h **** 
2836:Drivers/CMSIS/Include/arm_math.h **** 
2837:Drivers/CMSIS/Include/arm_math.h ****   /**
2838:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2839:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2840:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2841:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2842:Drivers/CMSIS/Include/arm_math.h ****    */
2843:Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q15(
2844:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
ARM GAS  /tmp/ccgoDI2u.s 			page 111


2845:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2846:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2847:Drivers/CMSIS/Include/arm_math.h **** 
2848:Drivers/CMSIS/Include/arm_math.h **** 
2849:Drivers/CMSIS/Include/arm_math.h ****   /**
2850:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2851:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2852:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2853:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2854:Drivers/CMSIS/Include/arm_math.h ****    */
2855:Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q31(
2856:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2857:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2858:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2859:Drivers/CMSIS/Include/arm_math.h **** 
2860:Drivers/CMSIS/Include/arm_math.h **** 
2861:Drivers/CMSIS/Include/arm_math.h ****   /**
2862:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2863:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2864:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2865:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2866:Drivers/CMSIS/Include/arm_math.h ****    */
2867:Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_f32(
2868:Drivers/CMSIS/Include/arm_math.h ****   float32_t value,
2869:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2870:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2871:Drivers/CMSIS/Include/arm_math.h **** 
2872:Drivers/CMSIS/Include/arm_math.h **** 
2873:Drivers/CMSIS/Include/arm_math.h ****   /**
2874:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2875:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2876:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2877:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2878:Drivers/CMSIS/Include/arm_math.h ****    */
2879:Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q7(
2880:Drivers/CMSIS/Include/arm_math.h ****   q7_t value,
2881:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2882:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2883:Drivers/CMSIS/Include/arm_math.h **** 
2884:Drivers/CMSIS/Include/arm_math.h **** 
2885:Drivers/CMSIS/Include/arm_math.h ****   /**
2886:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2887:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2888:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2889:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2890:Drivers/CMSIS/Include/arm_math.h ****    */
2891:Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q15(
2892:Drivers/CMSIS/Include/arm_math.h ****   q15_t value,
2893:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2894:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2895:Drivers/CMSIS/Include/arm_math.h **** 
2896:Drivers/CMSIS/Include/arm_math.h **** 
2897:Drivers/CMSIS/Include/arm_math.h ****   /**
2898:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2899:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2900:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2901:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
ARM GAS  /tmp/ccgoDI2u.s 			page 112


2902:Drivers/CMSIS/Include/arm_math.h ****    */
2903:Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q31(
2904:Drivers/CMSIS/Include/arm_math.h ****   q31_t value,
2905:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2906:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2907:Drivers/CMSIS/Include/arm_math.h **** 
2908:Drivers/CMSIS/Include/arm_math.h **** 
2909:Drivers/CMSIS/Include/arm_math.h **** /**
2910:Drivers/CMSIS/Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
2911:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2912:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2913:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2914:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2915:Drivers/CMSIS/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2916:Drivers/CMSIS/Include/arm_math.h ****  */
2917:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_f32(
2918:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2919:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2920:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2921:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2922:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
2923:Drivers/CMSIS/Include/arm_math.h **** 
2924:Drivers/CMSIS/Include/arm_math.h **** 
2925:Drivers/CMSIS/Include/arm_math.h ****   /**
2926:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
2927:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2928:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2929:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2930:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2931:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2932:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2933:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2934:Drivers/CMSIS/Include/arm_math.h ****    */
2935:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_opt_q15(
2936:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2937:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2938:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2939:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2940:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2941:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
2942:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
2943:Drivers/CMSIS/Include/arm_math.h **** 
2944:Drivers/CMSIS/Include/arm_math.h **** 
2945:Drivers/CMSIS/Include/arm_math.h **** /**
2946:Drivers/CMSIS/Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
2947:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2948:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2949:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2950:Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2951:Drivers/CMSIS/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2952:Drivers/CMSIS/Include/arm_math.h ****  */
2953:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q15(
2954:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2955:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2956:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2957:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2958:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
ARM GAS  /tmp/ccgoDI2u.s 			page 113


2959:Drivers/CMSIS/Include/arm_math.h **** 
2960:Drivers/CMSIS/Include/arm_math.h **** 
2961:Drivers/CMSIS/Include/arm_math.h ****   /**
2962:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2963:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2964:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2965:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2966:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2967:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2968:Drivers/CMSIS/Include/arm_math.h ****    */
2969:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_q15(
2970:Drivers/CMSIS/Include/arm_math.h ****           q15_t * pSrcA,
2971:Drivers/CMSIS/Include/arm_math.h ****           uint32_t srcALen,
2972:Drivers/CMSIS/Include/arm_math.h ****           q15_t * pSrcB,
2973:Drivers/CMSIS/Include/arm_math.h ****           uint32_t srcBLen,
2974:Drivers/CMSIS/Include/arm_math.h ****           q15_t * pDst);
2975:Drivers/CMSIS/Include/arm_math.h **** 
2976:Drivers/CMSIS/Include/arm_math.h **** 
2977:Drivers/CMSIS/Include/arm_math.h ****   /**
2978:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2979:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2980:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2981:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2982:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2983:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2984:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2985:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2986:Drivers/CMSIS/Include/arm_math.h ****    */
2987:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_opt_q15(
2988:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2989:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2990:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2991:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2992:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2993:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
2994:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
2995:Drivers/CMSIS/Include/arm_math.h **** 
2996:Drivers/CMSIS/Include/arm_math.h **** 
2997:Drivers/CMSIS/Include/arm_math.h ****   /**
2998:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
2999:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3000:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3001:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3002:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3003:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3004:Drivers/CMSIS/Include/arm_math.h ****    */
3005:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q31(
3006:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3007:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3008:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3009:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3010:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
3011:Drivers/CMSIS/Include/arm_math.h **** 
3012:Drivers/CMSIS/Include/arm_math.h **** 
3013:Drivers/CMSIS/Include/arm_math.h ****   /**
3014:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3015:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
ARM GAS  /tmp/ccgoDI2u.s 			page 114


3016:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3017:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3018:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3019:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3020:Drivers/CMSIS/Include/arm_math.h ****    */
3021:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_q31(
3022:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3023:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3024:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3025:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3026:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
3027:Drivers/CMSIS/Include/arm_math.h **** 
3028:Drivers/CMSIS/Include/arm_math.h **** 
3029:Drivers/CMSIS/Include/arm_math.h ****     /**
3030:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3031:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3032:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3033:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3034:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3035:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3036:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3037:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3038:Drivers/CMSIS/Include/arm_math.h ****    */
3039:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_opt_q7(
3040:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3041:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3042:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3043:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3044:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3045:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3046:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3047:Drivers/CMSIS/Include/arm_math.h **** 
3048:Drivers/CMSIS/Include/arm_math.h **** 
3049:Drivers/CMSIS/Include/arm_math.h ****   /**
3050:Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3051:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3052:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3053:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3054:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3055:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3056:Drivers/CMSIS/Include/arm_math.h ****    */
3057:Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q7(
3058:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3059:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3060:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3061:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3062:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst);
3063:Drivers/CMSIS/Include/arm_math.h **** 
3064:Drivers/CMSIS/Include/arm_math.h **** 
3065:Drivers/CMSIS/Include/arm_math.h ****   /**
3066:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3067:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3068:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3069:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3070:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3071:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3072:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
ARM GAS  /tmp/ccgoDI2u.s 			page 115


3073:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3074:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3075:Drivers/CMSIS/Include/arm_math.h ****    */
3076:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3077:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
3078:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3079:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
3080:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3081:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3082:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3083:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3084:Drivers/CMSIS/Include/arm_math.h **** 
3085:Drivers/CMSIS/Include/arm_math.h **** 
3086:Drivers/CMSIS/Include/arm_math.h ****   /**
3087:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3088:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3089:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3090:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3091:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3092:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3093:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3094:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3095:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3096:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3097:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3098:Drivers/CMSIS/Include/arm_math.h ****    */
3099:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3100:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3101:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3102:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3103:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3104:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3105:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3106:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3107:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3108:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3109:Drivers/CMSIS/Include/arm_math.h **** 
3110:Drivers/CMSIS/Include/arm_math.h **** 
3111:Drivers/CMSIS/Include/arm_math.h ****   /**
3112:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3113:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3114:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3115:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3116:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3117:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3118:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3119:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3120:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3121:Drivers/CMSIS/Include/arm_math.h ****    */
3122:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3123:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3124:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3125:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3126:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3127:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3128:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3129:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
ARM GAS  /tmp/ccgoDI2u.s 			page 116


3130:Drivers/CMSIS/Include/arm_math.h **** 
3131:Drivers/CMSIS/Include/arm_math.h **** 
3132:Drivers/CMSIS/Include/arm_math.h ****   /**
3133:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3134:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3135:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3136:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3137:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3138:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3139:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3140:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3141:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3142:Drivers/CMSIS/Include/arm_math.h ****    */
3143:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3144:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3145:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3146:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3147:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3148:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3149:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3150:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3151:Drivers/CMSIS/Include/arm_math.h **** 
3152:Drivers/CMSIS/Include/arm_math.h **** 
3153:Drivers/CMSIS/Include/arm_math.h ****   /**
3154:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3155:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3156:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3157:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3158:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3159:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3160:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3161:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3162:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3163:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3164:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3165:Drivers/CMSIS/Include/arm_math.h ****    */
3166:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3167:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3168:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3169:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3170:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3171:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3172:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3173:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3174:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3175:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3176:Drivers/CMSIS/Include/arm_math.h **** 
3177:Drivers/CMSIS/Include/arm_math.h **** 
3178:Drivers/CMSIS/Include/arm_math.h ****   /**
3179:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3180:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3181:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3182:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3183:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3184:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3185:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3186:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
ARM GAS  /tmp/ccgoDI2u.s 			page 117


3187:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3188:Drivers/CMSIS/Include/arm_math.h ****    */
3189:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3190:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3191:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3192:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3193:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3194:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3195:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3196:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3197:Drivers/CMSIS/Include/arm_math.h **** 
3198:Drivers/CMSIS/Include/arm_math.h **** 
3199:Drivers/CMSIS/Include/arm_math.h ****   /**
3200:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3201:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3202:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3203:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3204:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3205:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3206:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3207:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3208:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3209:Drivers/CMSIS/Include/arm_math.h ****    */
3210:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3211:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3212:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3213:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3214:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3215:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3216:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3217:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3218:Drivers/CMSIS/Include/arm_math.h **** 
3219:Drivers/CMSIS/Include/arm_math.h **** 
3220:Drivers/CMSIS/Include/arm_math.h ****   /**
3221:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3222:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3223:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3224:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3225:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3226:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3227:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3228:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3229:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3230:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3231:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3232:Drivers/CMSIS/Include/arm_math.h ****    */
3233:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3234:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3235:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3236:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3237:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3238:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3239:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3240:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3241:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3242:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3243:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 118


3244:Drivers/CMSIS/Include/arm_math.h **** 
3245:Drivers/CMSIS/Include/arm_math.h **** /**
3246:Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3247:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3248:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3249:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3250:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3251:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3252:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3253:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3254:Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3255:Drivers/CMSIS/Include/arm_math.h ****    */
3256:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3257:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3258:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3259:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3260:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3261:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3262:Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3263:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3264:Drivers/CMSIS/Include/arm_math.h **** 
3265:Drivers/CMSIS/Include/arm_math.h **** 
3266:Drivers/CMSIS/Include/arm_math.h ****   /**
3267:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3268:Drivers/CMSIS/Include/arm_math.h ****    */
3269:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3270:Drivers/CMSIS/Include/arm_math.h ****   {
3271:Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3272:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3273:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3274:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3275:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3276:Drivers/CMSIS/Include/arm_math.h **** 
3277:Drivers/CMSIS/Include/arm_math.h ****   /**
3278:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3279:Drivers/CMSIS/Include/arm_math.h ****    */
3280:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3281:Drivers/CMSIS/Include/arm_math.h ****   {
3282:Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3283:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3284:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3285:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3286:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3287:Drivers/CMSIS/Include/arm_math.h **** 
3288:Drivers/CMSIS/Include/arm_math.h ****   /**
3289:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3290:Drivers/CMSIS/Include/arm_math.h ****    */
3291:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3292:Drivers/CMSIS/Include/arm_math.h ****   {
3293:Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3294:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3295:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3296:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3297:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3298:Drivers/CMSIS/Include/arm_math.h **** 
3299:Drivers/CMSIS/Include/arm_math.h **** 
3300:Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccgoDI2u.s 			page 119


3301:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3302:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3303:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3304:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3305:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3306:Drivers/CMSIS/Include/arm_math.h ****    */
3307:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_f32(
3308:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3309:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3310:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3311:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3312:Drivers/CMSIS/Include/arm_math.h **** 
3313:Drivers/CMSIS/Include/arm_math.h **** 
3314:Drivers/CMSIS/Include/arm_math.h ****   /**
3315:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3316:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3317:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3318:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3319:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3320:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3321:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3322:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3323:Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3324:Drivers/CMSIS/Include/arm_math.h ****    */
3325:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3326:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3327:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3328:Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3329:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3330:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3331:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3332:Drivers/CMSIS/Include/arm_math.h **** 
3333:Drivers/CMSIS/Include/arm_math.h **** 
3334:Drivers/CMSIS/Include/arm_math.h ****   /**
3335:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3336:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3337:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3338:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3339:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3340:Drivers/CMSIS/Include/arm_math.h ****    */
3341:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_q15(
3342:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3343:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3344:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3345:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3346:Drivers/CMSIS/Include/arm_math.h **** 
3347:Drivers/CMSIS/Include/arm_math.h **** 
3348:Drivers/CMSIS/Include/arm_math.h ****   /**
3349:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3350:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3351:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3352:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3353:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3354:Drivers/CMSIS/Include/arm_math.h ****    */
3355:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3356:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3357:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
ARM GAS  /tmp/ccgoDI2u.s 			page 120


3358:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3359:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3360:Drivers/CMSIS/Include/arm_math.h **** 
3361:Drivers/CMSIS/Include/arm_math.h **** 
3362:Drivers/CMSIS/Include/arm_math.h ****   /**
3363:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3364:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3365:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3366:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3367:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3368:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3369:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3370:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3371:Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3372:Drivers/CMSIS/Include/arm_math.h ****    */
3373:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3374:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3375:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3376:Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3377:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3378:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3379:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3380:Drivers/CMSIS/Include/arm_math.h **** 
3381:Drivers/CMSIS/Include/arm_math.h **** 
3382:Drivers/CMSIS/Include/arm_math.h ****   /**
3383:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3384:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3385:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3386:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3387:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3388:Drivers/CMSIS/Include/arm_math.h ****    */
3389:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_q31(
3390:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3391:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3392:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3393:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3394:Drivers/CMSIS/Include/arm_math.h **** 
3395:Drivers/CMSIS/Include/arm_math.h ****   /**
3396:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3397:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3398:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3399:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3400:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3401:Drivers/CMSIS/Include/arm_math.h ****    */
3402:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3403:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3404:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3405:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3406:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3407:Drivers/CMSIS/Include/arm_math.h **** 
3408:Drivers/CMSIS/Include/arm_math.h **** 
3409:Drivers/CMSIS/Include/arm_math.h ****   /**
3410:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3411:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3412:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3413:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3414:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
ARM GAS  /tmp/ccgoDI2u.s 			page 121


3415:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3416:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3417:Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3418:Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3419:Drivers/CMSIS/Include/arm_math.h ****    */
3420:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3421:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3422:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3423:Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3424:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3425:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3426:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3427:Drivers/CMSIS/Include/arm_math.h **** 
3428:Drivers/CMSIS/Include/arm_math.h **** 
3429:Drivers/CMSIS/Include/arm_math.h ****   /**
3430:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3431:Drivers/CMSIS/Include/arm_math.h ****    */
3432:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3433:Drivers/CMSIS/Include/arm_math.h ****   {
3434:Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3435:Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3436:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3437:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3438:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3439:Drivers/CMSIS/Include/arm_math.h **** 
3440:Drivers/CMSIS/Include/arm_math.h ****   /**
3441:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3442:Drivers/CMSIS/Include/arm_math.h ****    */
3443:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3444:Drivers/CMSIS/Include/arm_math.h ****   {
3445:Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3446:Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3447:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3448:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3449:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3450:Drivers/CMSIS/Include/arm_math.h **** 
3451:Drivers/CMSIS/Include/arm_math.h ****   /**
3452:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3453:Drivers/CMSIS/Include/arm_math.h ****    */
3454:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3455:Drivers/CMSIS/Include/arm_math.h ****   {
3456:Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3457:Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3458:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3459:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3460:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3461:Drivers/CMSIS/Include/arm_math.h **** 
3462:Drivers/CMSIS/Include/arm_math.h **** 
3463:Drivers/CMSIS/Include/arm_math.h ****   /**
3464:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3465:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3466:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3467:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3468:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3469:Drivers/CMSIS/Include/arm_math.h ****    */
3470:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_q15(
3471:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
ARM GAS  /tmp/ccgoDI2u.s 			page 122


3472:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3473:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3474:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3475:Drivers/CMSIS/Include/arm_math.h **** 
3476:Drivers/CMSIS/Include/arm_math.h **** 
3477:Drivers/CMSIS/Include/arm_math.h ****   /**
3478:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3479:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3480:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3481:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3482:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3483:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3484:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3485:Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3486:Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3487:Drivers/CMSIS/Include/arm_math.h ****    */
3488:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3489:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3490:Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3491:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3492:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3493:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3494:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3495:Drivers/CMSIS/Include/arm_math.h **** 
3496:Drivers/CMSIS/Include/arm_math.h **** 
3497:Drivers/CMSIS/Include/arm_math.h ****   /**
3498:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3499:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3500:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3501:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3502:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3503:Drivers/CMSIS/Include/arm_math.h ****    */
3504:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_q31(
3505:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3506:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3507:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3508:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3509:Drivers/CMSIS/Include/arm_math.h **** 
3510:Drivers/CMSIS/Include/arm_math.h **** 
3511:Drivers/CMSIS/Include/arm_math.h ****   /**
3512:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3513:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3514:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3515:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3516:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3517:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3518:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3519:Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3520:Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3521:Drivers/CMSIS/Include/arm_math.h ****    */
3522:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3523:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3524:Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3525:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3526:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3527:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3528:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  /tmp/ccgoDI2u.s 			page 123


3529:Drivers/CMSIS/Include/arm_math.h **** 
3530:Drivers/CMSIS/Include/arm_math.h **** 
3531:Drivers/CMSIS/Include/arm_math.h ****   /**
3532:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3533:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3534:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3535:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3536:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3537:Drivers/CMSIS/Include/arm_math.h ****    */
3538:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_f32(
3539:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3540:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3541:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3542:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3543:Drivers/CMSIS/Include/arm_math.h **** 
3544:Drivers/CMSIS/Include/arm_math.h **** 
3545:Drivers/CMSIS/Include/arm_math.h ****   /**
3546:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3547:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3548:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3549:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3550:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3551:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3552:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3553:Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3554:Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3555:Drivers/CMSIS/Include/arm_math.h ****    */
3556:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3557:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3558:Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3559:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3560:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3561:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3562:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3563:Drivers/CMSIS/Include/arm_math.h **** 
3564:Drivers/CMSIS/Include/arm_math.h **** 
3565:Drivers/CMSIS/Include/arm_math.h ****   /**
3566:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3567:Drivers/CMSIS/Include/arm_math.h ****    */
3568:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3569:Drivers/CMSIS/Include/arm_math.h ****   {
3570:Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3571:Drivers/CMSIS/Include/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3572:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3573:Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3574:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3575:Drivers/CMSIS/Include/arm_math.h **** 
3576:Drivers/CMSIS/Include/arm_math.h **** 
3577:Drivers/CMSIS/Include/arm_math.h ****   /**
3578:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3579:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3580:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3581:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3582:Drivers/CMSIS/Include/arm_math.h ****    */
3583:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3584:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3585:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
ARM GAS  /tmp/ccgoDI2u.s 			page 124


3586:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3587:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3588:Drivers/CMSIS/Include/arm_math.h **** 
3589:Drivers/CMSIS/Include/arm_math.h **** 
3590:Drivers/CMSIS/Include/arm_math.h ****   /**
3591:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3592:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3593:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3594:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3595:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3596:Drivers/CMSIS/Include/arm_math.h ****    */
3597:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3598:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3599:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3600:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3601:Drivers/CMSIS/Include/arm_math.h ****   q63_t * pState,
3602:Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
3603:Drivers/CMSIS/Include/arm_math.h **** 
3604:Drivers/CMSIS/Include/arm_math.h **** 
3605:Drivers/CMSIS/Include/arm_math.h ****   /**
3606:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3607:Drivers/CMSIS/Include/arm_math.h ****    */
3608:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3609:Drivers/CMSIS/Include/arm_math.h ****   {
3610:Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3611:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3612:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3613:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3614:Drivers/CMSIS/Include/arm_math.h **** 
3615:Drivers/CMSIS/Include/arm_math.h ****   /**
3616:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3617:Drivers/CMSIS/Include/arm_math.h ****    */
3618:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3619:Drivers/CMSIS/Include/arm_math.h ****   {
3620:Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3621:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3622:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3623:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3624:Drivers/CMSIS/Include/arm_math.h **** 
3625:Drivers/CMSIS/Include/arm_math.h ****   /**
3626:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3627:Drivers/CMSIS/Include/arm_math.h ****    */
3628:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3629:Drivers/CMSIS/Include/arm_math.h ****   {
3630:Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3631:Drivers/CMSIS/Include/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3632:Drivers/CMSIS/Include/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3633:Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3634:Drivers/CMSIS/Include/arm_math.h **** 
3635:Drivers/CMSIS/Include/arm_math.h **** 
3636:Drivers/CMSIS/Include/arm_math.h ****   /**
3637:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3638:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3639:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3640:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3641:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3642:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 125


3643:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3644:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3645:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3646:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3647:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3648:Drivers/CMSIS/Include/arm_math.h **** 
3649:Drivers/CMSIS/Include/arm_math.h **** 
3650:Drivers/CMSIS/Include/arm_math.h ****   /**
3651:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3652:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3653:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3654:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3655:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3656:Drivers/CMSIS/Include/arm_math.h ****    */
3657:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3658:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3659:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3660:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3661:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3662:Drivers/CMSIS/Include/arm_math.h **** 
3663:Drivers/CMSIS/Include/arm_math.h **** 
3664:Drivers/CMSIS/Include/arm_math.h ****   /**
3665:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3666:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3667:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3668:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3669:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3670:Drivers/CMSIS/Include/arm_math.h ****    */
3671:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3672:Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3673:Drivers/CMSIS/Include/arm_math.h ****   float64_t * pSrc,
3674:Drivers/CMSIS/Include/arm_math.h ****   float64_t * pDst,
3675:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3676:Drivers/CMSIS/Include/arm_math.h **** 
3677:Drivers/CMSIS/Include/arm_math.h **** 
3678:Drivers/CMSIS/Include/arm_math.h ****   /**
3679:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3680:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3681:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3682:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3683:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3684:Drivers/CMSIS/Include/arm_math.h ****    */
3685:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3686:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3687:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3688:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3689:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3690:Drivers/CMSIS/Include/arm_math.h **** 
3691:Drivers/CMSIS/Include/arm_math.h **** 
3692:Drivers/CMSIS/Include/arm_math.h ****   /**
3693:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3694:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3695:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3696:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3697:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3698:Drivers/CMSIS/Include/arm_math.h ****    */
3699:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
ARM GAS  /tmp/ccgoDI2u.s 			page 126


3700:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3701:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3702:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3703:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3704:Drivers/CMSIS/Include/arm_math.h **** 
3705:Drivers/CMSIS/Include/arm_math.h **** 
3706:Drivers/CMSIS/Include/arm_math.h ****   /**
3707:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3708:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3709:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3710:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3711:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3712:Drivers/CMSIS/Include/arm_math.h ****    */
3713:Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3714:Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3715:Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3716:Drivers/CMSIS/Include/arm_math.h ****   float64_t * pCoeffs,
3717:Drivers/CMSIS/Include/arm_math.h ****   float64_t * pState);
3718:Drivers/CMSIS/Include/arm_math.h **** 
3719:Drivers/CMSIS/Include/arm_math.h **** 
3720:Drivers/CMSIS/Include/arm_math.h ****   /**
3721:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3722:Drivers/CMSIS/Include/arm_math.h ****    */
3723:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3724:Drivers/CMSIS/Include/arm_math.h ****   {
3725:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3726:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3727:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3728:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3729:Drivers/CMSIS/Include/arm_math.h **** 
3730:Drivers/CMSIS/Include/arm_math.h ****   /**
3731:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3732:Drivers/CMSIS/Include/arm_math.h ****    */
3733:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3734:Drivers/CMSIS/Include/arm_math.h ****   {
3735:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3736:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3737:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3738:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
3739:Drivers/CMSIS/Include/arm_math.h **** 
3740:Drivers/CMSIS/Include/arm_math.h ****   /**
3741:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3742:Drivers/CMSIS/Include/arm_math.h ****    */
3743:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3744:Drivers/CMSIS/Include/arm_math.h ****   {
3745:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3746:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3747:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3748:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3749:Drivers/CMSIS/Include/arm_math.h **** 
3750:Drivers/CMSIS/Include/arm_math.h **** 
3751:Drivers/CMSIS/Include/arm_math.h ****   /**
3752:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3753:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3754:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3755:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3756:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
ARM GAS  /tmp/ccgoDI2u.s 			page 127


3757:Drivers/CMSIS/Include/arm_math.h ****    */
3758:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3759:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3760:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3761:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3762:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
3763:Drivers/CMSIS/Include/arm_math.h **** 
3764:Drivers/CMSIS/Include/arm_math.h **** 
3765:Drivers/CMSIS/Include/arm_math.h ****   /**
3766:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3767:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3768:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3769:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3770:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3771:Drivers/CMSIS/Include/arm_math.h ****    */
3772:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_q15(
3773:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3774:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3775:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3776:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3777:Drivers/CMSIS/Include/arm_math.h **** 
3778:Drivers/CMSIS/Include/arm_math.h **** 
3779:Drivers/CMSIS/Include/arm_math.h ****   /**
3780:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3781:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3782:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3783:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3784:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3785:Drivers/CMSIS/Include/arm_math.h ****    */
3786:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3787:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3788:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3789:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3790:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState);
3791:Drivers/CMSIS/Include/arm_math.h **** 
3792:Drivers/CMSIS/Include/arm_math.h **** 
3793:Drivers/CMSIS/Include/arm_math.h ****   /**
3794:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3795:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3796:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3797:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3798:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3799:Drivers/CMSIS/Include/arm_math.h ****    */
3800:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_q31(
3801:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3802:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3803:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3804:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3805:Drivers/CMSIS/Include/arm_math.h **** 
3806:Drivers/CMSIS/Include/arm_math.h **** 
3807:Drivers/CMSIS/Include/arm_math.h **** /**
3808:Drivers/CMSIS/Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3809:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3810:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3811:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3812:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3813:Drivers/CMSIS/Include/arm_math.h ****  */
ARM GAS  /tmp/ccgoDI2u.s 			page 128


3814:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3815:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3816:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3817:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3818:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3819:Drivers/CMSIS/Include/arm_math.h **** 
3820:Drivers/CMSIS/Include/arm_math.h **** 
3821:Drivers/CMSIS/Include/arm_math.h ****   /**
3822:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3823:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3824:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3825:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3826:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3827:Drivers/CMSIS/Include/arm_math.h ****    */
3828:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_f32(
3829:Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3830:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3831:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3832:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3833:Drivers/CMSIS/Include/arm_math.h **** 
3834:Drivers/CMSIS/Include/arm_math.h **** 
3835:Drivers/CMSIS/Include/arm_math.h ****   /**
3836:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3837:Drivers/CMSIS/Include/arm_math.h ****    */
3838:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3839:Drivers/CMSIS/Include/arm_math.h ****   {
3840:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3841:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3842:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3843:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3844:Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
3845:Drivers/CMSIS/Include/arm_math.h **** 
3846:Drivers/CMSIS/Include/arm_math.h ****   /**
3847:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3848:Drivers/CMSIS/Include/arm_math.h ****    */
3849:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3850:Drivers/CMSIS/Include/arm_math.h ****   {
3851:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3852:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3853:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3854:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3855:Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
3856:Drivers/CMSIS/Include/arm_math.h **** 
3857:Drivers/CMSIS/Include/arm_math.h ****   /**
3858:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3859:Drivers/CMSIS/Include/arm_math.h ****    */
3860:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3861:Drivers/CMSIS/Include/arm_math.h ****   {
3862:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3863:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3864:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3865:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3866:Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
3867:Drivers/CMSIS/Include/arm_math.h **** 
3868:Drivers/CMSIS/Include/arm_math.h **** 
3869:Drivers/CMSIS/Include/arm_math.h ****   /**
3870:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
ARM GAS  /tmp/ccgoDI2u.s 			page 129


3871:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3872:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3873:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3874:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3875:Drivers/CMSIS/Include/arm_math.h ****    */
3876:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_f32(
3877:Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3878:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3879:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3880:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3881:Drivers/CMSIS/Include/arm_math.h **** 
3882:Drivers/CMSIS/Include/arm_math.h **** 
3883:Drivers/CMSIS/Include/arm_math.h ****   /**
3884:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3885:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3886:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3887:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3888:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3889:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3890:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3891:Drivers/CMSIS/Include/arm_math.h ****    */
3892:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_f32(
3893:Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3894:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3895:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pkCoeffs,
3896:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pvCoeffs,
3897:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3898:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3899:Drivers/CMSIS/Include/arm_math.h **** 
3900:Drivers/CMSIS/Include/arm_math.h **** 
3901:Drivers/CMSIS/Include/arm_math.h ****   /**
3902:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3903:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3904:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3905:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3906:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3907:Drivers/CMSIS/Include/arm_math.h ****    */
3908:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_q31(
3909:Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3910:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3911:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3912:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3913:Drivers/CMSIS/Include/arm_math.h **** 
3914:Drivers/CMSIS/Include/arm_math.h **** 
3915:Drivers/CMSIS/Include/arm_math.h ****   /**
3916:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3917:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3918:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3919:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3920:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3921:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3922:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3923:Drivers/CMSIS/Include/arm_math.h ****    */
3924:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_q31(
3925:Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3926:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3927:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pkCoeffs,
ARM GAS  /tmp/ccgoDI2u.s 			page 130


3928:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pvCoeffs,
3929:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3930:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3931:Drivers/CMSIS/Include/arm_math.h **** 
3932:Drivers/CMSIS/Include/arm_math.h **** 
3933:Drivers/CMSIS/Include/arm_math.h ****   /**
3934:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3935:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3936:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3937:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3938:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3939:Drivers/CMSIS/Include/arm_math.h ****    */
3940:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_q15(
3941:Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3942:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3943:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3944:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3945:Drivers/CMSIS/Include/arm_math.h **** 
3946:Drivers/CMSIS/Include/arm_math.h **** 
3947:Drivers/CMSIS/Include/arm_math.h **** /**
3948:Drivers/CMSIS/Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3949:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3950:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3951:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3952:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3953:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3954:Drivers/CMSIS/Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
3955:Drivers/CMSIS/Include/arm_math.h ****  */
3956:Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_q15(
3957:Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3958:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3959:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pkCoeffs,
3960:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pvCoeffs,
3961:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3962:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3963:Drivers/CMSIS/Include/arm_math.h **** 
3964:Drivers/CMSIS/Include/arm_math.h **** 
3965:Drivers/CMSIS/Include/arm_math.h ****   /**
3966:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
3967:Drivers/CMSIS/Include/arm_math.h ****    */
3968:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3969:Drivers/CMSIS/Include/arm_math.h ****   {
3970:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3971:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3972:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3973:Drivers/CMSIS/Include/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3974:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_f32;
3975:Drivers/CMSIS/Include/arm_math.h **** 
3976:Drivers/CMSIS/Include/arm_math.h **** 
3977:Drivers/CMSIS/Include/arm_math.h ****   /**
3978:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3979:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3980:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3981:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3982:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3983:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3984:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  /tmp/ccgoDI2u.s 			page 131


3985:Drivers/CMSIS/Include/arm_math.h ****    */
3986:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_f32(
3987:Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_f32 * S,
3988:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3989:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pRef,
3990:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pOut,
3991:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pErr,
3992:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3993:Drivers/CMSIS/Include/arm_math.h **** 
3994:Drivers/CMSIS/Include/arm_math.h **** 
3995:Drivers/CMSIS/Include/arm_math.h ****   /**
3996:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3997:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
3998:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
3999:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4000:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4001:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4002:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4003:Drivers/CMSIS/Include/arm_math.h ****    */
4004:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_f32(
4005:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_f32 * S,
4006:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4007:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4008:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4009:Drivers/CMSIS/Include/arm_math.h ****   float32_t mu,
4010:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4011:Drivers/CMSIS/Include/arm_math.h **** 
4012:Drivers/CMSIS/Include/arm_math.h **** 
4013:Drivers/CMSIS/Include/arm_math.h ****   /**
4014:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4015:Drivers/CMSIS/Include/arm_math.h ****    */
4016:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4017:Drivers/CMSIS/Include/arm_math.h ****   {
4018:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4019:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4020:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4021:Drivers/CMSIS/Include/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4022:Drivers/CMSIS/Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4023:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_q15;
4024:Drivers/CMSIS/Include/arm_math.h **** 
4025:Drivers/CMSIS/Include/arm_math.h **** 
4026:Drivers/CMSIS/Include/arm_math.h ****   /**
4027:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4028:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4029:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4030:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4031:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4032:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4033:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4034:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4035:Drivers/CMSIS/Include/arm_math.h ****    */
4036:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_q15(
4037:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_q15 * S,
4038:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4039:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4040:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4041:Drivers/CMSIS/Include/arm_math.h ****   q15_t mu,
ARM GAS  /tmp/ccgoDI2u.s 			page 132


4042:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4043:Drivers/CMSIS/Include/arm_math.h ****   uint32_t postShift);
4044:Drivers/CMSIS/Include/arm_math.h **** 
4045:Drivers/CMSIS/Include/arm_math.h **** 
4046:Drivers/CMSIS/Include/arm_math.h ****   /**
4047:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4048:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4049:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4050:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4051:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4052:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4053:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4054:Drivers/CMSIS/Include/arm_math.h ****    */
4055:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_q15(
4056:Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4057:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4058:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRef,
4059:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pOut,
4060:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pErr,
4061:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4062:Drivers/CMSIS/Include/arm_math.h **** 
4063:Drivers/CMSIS/Include/arm_math.h **** 
4064:Drivers/CMSIS/Include/arm_math.h ****   /**
4065:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4066:Drivers/CMSIS/Include/arm_math.h ****    */
4067:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4068:Drivers/CMSIS/Include/arm_math.h ****   {
4069:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4070:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4071:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4072:Drivers/CMSIS/Include/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4073:Drivers/CMSIS/Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4074:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_q31;
4075:Drivers/CMSIS/Include/arm_math.h **** 
4076:Drivers/CMSIS/Include/arm_math.h **** 
4077:Drivers/CMSIS/Include/arm_math.h ****   /**
4078:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4079:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4080:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4081:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4082:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4083:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4084:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4085:Drivers/CMSIS/Include/arm_math.h ****    */
4086:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_q31(
4087:Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4088:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4089:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRef,
4090:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pOut,
4091:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pErr,
4092:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4093:Drivers/CMSIS/Include/arm_math.h **** 
4094:Drivers/CMSIS/Include/arm_math.h **** 
4095:Drivers/CMSIS/Include/arm_math.h ****   /**
4096:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4097:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4098:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
ARM GAS  /tmp/ccgoDI2u.s 			page 133


4099:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4100:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4101:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4102:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4103:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4104:Drivers/CMSIS/Include/arm_math.h ****    */
4105:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_q31(
4106:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_q31 * S,
4107:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4108:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
4109:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4110:Drivers/CMSIS/Include/arm_math.h ****   q31_t mu,
4111:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4112:Drivers/CMSIS/Include/arm_math.h ****   uint32_t postShift);
4113:Drivers/CMSIS/Include/arm_math.h **** 
4114:Drivers/CMSIS/Include/arm_math.h **** 
4115:Drivers/CMSIS/Include/arm_math.h ****   /**
4116:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4117:Drivers/CMSIS/Include/arm_math.h ****    */
4118:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4119:Drivers/CMSIS/Include/arm_math.h ****   {
4120:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4121:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4122:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4123:Drivers/CMSIS/Include/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4124:Drivers/CMSIS/Include/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4125:Drivers/CMSIS/Include/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4126:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4127:Drivers/CMSIS/Include/arm_math.h **** 
4128:Drivers/CMSIS/Include/arm_math.h **** 
4129:Drivers/CMSIS/Include/arm_math.h ****   /**
4130:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4131:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4132:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4133:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4134:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4135:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4136:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4137:Drivers/CMSIS/Include/arm_math.h ****    */
4138:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_f32(
4139:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4140:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4141:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pRef,
4142:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pOut,
4143:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pErr,
4144:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4145:Drivers/CMSIS/Include/arm_math.h **** 
4146:Drivers/CMSIS/Include/arm_math.h **** 
4147:Drivers/CMSIS/Include/arm_math.h ****   /**
4148:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4149:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4150:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4151:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4152:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4153:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4154:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4155:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 134


4156:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_f32(
4157:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4158:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4159:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4160:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4161:Drivers/CMSIS/Include/arm_math.h ****   float32_t mu,
4162:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4163:Drivers/CMSIS/Include/arm_math.h **** 
4164:Drivers/CMSIS/Include/arm_math.h **** 
4165:Drivers/CMSIS/Include/arm_math.h ****   /**
4166:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4167:Drivers/CMSIS/Include/arm_math.h ****    */
4168:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4169:Drivers/CMSIS/Include/arm_math.h ****   {
4170:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4171:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4172:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4173:Drivers/CMSIS/Include/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4174:Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4175:Drivers/CMSIS/Include/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4176:Drivers/CMSIS/Include/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4177:Drivers/CMSIS/Include/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4178:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4179:Drivers/CMSIS/Include/arm_math.h **** 
4180:Drivers/CMSIS/Include/arm_math.h **** 
4181:Drivers/CMSIS/Include/arm_math.h ****   /**
4182:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4183:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4184:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4185:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4186:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4187:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4188:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4189:Drivers/CMSIS/Include/arm_math.h ****    */
4190:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_q31(
4191:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4192:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4193:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRef,
4194:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pOut,
4195:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pErr,
4196:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4197:Drivers/CMSIS/Include/arm_math.h **** 
4198:Drivers/CMSIS/Include/arm_math.h **** 
4199:Drivers/CMSIS/Include/arm_math.h ****   /**
4200:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4201:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4202:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4203:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4204:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4205:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4206:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4207:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4208:Drivers/CMSIS/Include/arm_math.h ****    */
4209:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_q31(
4210:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4211:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4212:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
ARM GAS  /tmp/ccgoDI2u.s 			page 135


4213:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4214:Drivers/CMSIS/Include/arm_math.h ****   q31_t mu,
4215:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4216:Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
4217:Drivers/CMSIS/Include/arm_math.h **** 
4218:Drivers/CMSIS/Include/arm_math.h **** 
4219:Drivers/CMSIS/Include/arm_math.h ****   /**
4220:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4221:Drivers/CMSIS/Include/arm_math.h ****    */
4222:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4223:Drivers/CMSIS/Include/arm_math.h ****   {
4224:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4225:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4226:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4227:Drivers/CMSIS/Include/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4228:Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4229:Drivers/CMSIS/Include/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4230:Drivers/CMSIS/Include/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4231:Drivers/CMSIS/Include/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4232:Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4233:Drivers/CMSIS/Include/arm_math.h **** 
4234:Drivers/CMSIS/Include/arm_math.h **** 
4235:Drivers/CMSIS/Include/arm_math.h ****   /**
4236:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4237:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4238:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4239:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4240:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4241:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4242:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4243:Drivers/CMSIS/Include/arm_math.h ****    */
4244:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_q15(
4245:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4246:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4247:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRef,
4248:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pOut,
4249:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pErr,
4250:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4251:Drivers/CMSIS/Include/arm_math.h **** 
4252:Drivers/CMSIS/Include/arm_math.h **** 
4253:Drivers/CMSIS/Include/arm_math.h ****   /**
4254:Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4255:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4256:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4257:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4258:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4259:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4260:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4261:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4262:Drivers/CMSIS/Include/arm_math.h ****    */
4263:Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_q15(
4264:Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4265:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4266:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4267:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4268:Drivers/CMSIS/Include/arm_math.h ****   q15_t mu,
4269:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
ARM GAS  /tmp/ccgoDI2u.s 			page 136


4270:Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
4271:Drivers/CMSIS/Include/arm_math.h **** 
4272:Drivers/CMSIS/Include/arm_math.h **** 
4273:Drivers/CMSIS/Include/arm_math.h ****   /**
4274:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4275:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4276:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4277:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4278:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4279:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4280:Drivers/CMSIS/Include/arm_math.h ****    */
4281:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_f32(
4282:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
4283:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4284:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
4285:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4286:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
4287:Drivers/CMSIS/Include/arm_math.h **** 
4288:Drivers/CMSIS/Include/arm_math.h **** 
4289:Drivers/CMSIS/Include/arm_math.h ****    /**
4290:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences
4291:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4292:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4293:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4294:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4295:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4296:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4297:Drivers/CMSIS/Include/arm_math.h ****    */
4298:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_opt_q15(
4299:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4300:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4301:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4302:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4303:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4304:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
4305:Drivers/CMSIS/Include/arm_math.h **** 
4306:Drivers/CMSIS/Include/arm_math.h **** 
4307:Drivers/CMSIS/Include/arm_math.h ****   /**
4308:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences.
4309:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4310:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4311:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4312:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4313:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4314:Drivers/CMSIS/Include/arm_math.h ****    */
4315:Drivers/CMSIS/Include/arm_math.h **** 
4316:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q15(
4317:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4318:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4319:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4320:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4321:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
4322:Drivers/CMSIS/Include/arm_math.h **** 
4323:Drivers/CMSIS/Include/arm_math.h **** 
4324:Drivers/CMSIS/Include/arm_math.h ****   /**
4325:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4326:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
ARM GAS  /tmp/ccgoDI2u.s 			page 137


4327:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4328:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4329:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4330:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4331:Drivers/CMSIS/Include/arm_math.h ****    */
4332:Drivers/CMSIS/Include/arm_math.h **** 
4333:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_q15(
4334:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4335:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4336:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4337:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4338:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
4339:Drivers/CMSIS/Include/arm_math.h **** 
4340:Drivers/CMSIS/Include/arm_math.h **** 
4341:Drivers/CMSIS/Include/arm_math.h ****   /**
4342:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4343:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4344:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4345:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4346:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4347:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4348:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4349:Drivers/CMSIS/Include/arm_math.h ****    */
4350:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_opt_q15(
4351:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4352:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4353:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4354:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4355:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4356:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
4357:Drivers/CMSIS/Include/arm_math.h **** 
4358:Drivers/CMSIS/Include/arm_math.h **** 
4359:Drivers/CMSIS/Include/arm_math.h ****   /**
4360:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4361:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4362:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4363:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4364:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4365:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4366:Drivers/CMSIS/Include/arm_math.h ****    */
4367:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q31(
4368:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
4369:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4370:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
4371:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4372:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
4373:Drivers/CMSIS/Include/arm_math.h **** 
4374:Drivers/CMSIS/Include/arm_math.h **** 
4375:Drivers/CMSIS/Include/arm_math.h ****   /**
4376:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4377:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4378:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4379:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4380:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4381:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4382:Drivers/CMSIS/Include/arm_math.h ****    */
4383:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_q31(
ARM GAS  /tmp/ccgoDI2u.s 			page 138


4384:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
4385:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4386:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
4387:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4388:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
4389:Drivers/CMSIS/Include/arm_math.h **** 
4390:Drivers/CMSIS/Include/arm_math.h **** 
4391:Drivers/CMSIS/Include/arm_math.h ****  /**
4392:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4393:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4394:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4395:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4396:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4397:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4398:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4399:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4400:Drivers/CMSIS/Include/arm_math.h ****    */
4401:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_opt_q7(
4402:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
4403:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4404:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
4405:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4406:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
4407:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
4408:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
4409:Drivers/CMSIS/Include/arm_math.h **** 
4410:Drivers/CMSIS/Include/arm_math.h **** 
4411:Drivers/CMSIS/Include/arm_math.h ****   /**
4412:Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4413:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4414:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4415:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4416:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4417:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4418:Drivers/CMSIS/Include/arm_math.h ****    */
4419:Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q7(
4420:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
4421:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4422:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
4423:Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4424:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst);
4425:Drivers/CMSIS/Include/arm_math.h **** 
4426:Drivers/CMSIS/Include/arm_math.h **** 
4427:Drivers/CMSIS/Include/arm_math.h ****   /**
4428:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4429:Drivers/CMSIS/Include/arm_math.h ****    */
4430:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4431:Drivers/CMSIS/Include/arm_math.h ****   {
4432:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4433:Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4434:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4435:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4436:Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4437:Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4438:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4439:Drivers/CMSIS/Include/arm_math.h **** 
4440:Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccgoDI2u.s 			page 139


4441:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4442:Drivers/CMSIS/Include/arm_math.h ****    */
4443:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4444:Drivers/CMSIS/Include/arm_math.h ****   {
4445:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4446:Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4447:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4448:Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4449:Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4450:Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4451:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4452:Drivers/CMSIS/Include/arm_math.h **** 
4453:Drivers/CMSIS/Include/arm_math.h ****   /**
4454:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4455:Drivers/CMSIS/Include/arm_math.h ****    */
4456:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4457:Drivers/CMSIS/Include/arm_math.h ****   {
4458:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4459:Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4460:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4461:Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4462:Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4463:Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4464:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4465:Drivers/CMSIS/Include/arm_math.h **** 
4466:Drivers/CMSIS/Include/arm_math.h ****   /**
4467:Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4468:Drivers/CMSIS/Include/arm_math.h ****    */
4469:Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4470:Drivers/CMSIS/Include/arm_math.h ****   {
4471:Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4472:Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4473:Drivers/CMSIS/Include/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4474:Drivers/CMSIS/Include/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4475:Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4476:Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4477:Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
4478:Drivers/CMSIS/Include/arm_math.h **** 
4479:Drivers/CMSIS/Include/arm_math.h **** 
4480:Drivers/CMSIS/Include/arm_math.h ****   /**
4481:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4482:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4483:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4484:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4485:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4486:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4487:Drivers/CMSIS/Include/arm_math.h ****    */
4488:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_f32(
4489:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4490:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4491:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4492:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pScratchIn,
4493:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4494:Drivers/CMSIS/Include/arm_math.h **** 
4495:Drivers/CMSIS/Include/arm_math.h **** 
4496:Drivers/CMSIS/Include/arm_math.h ****   /**
4497:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
ARM GAS  /tmp/ccgoDI2u.s 			page 140


4498:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4499:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4500:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4501:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4502:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4503:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4504:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4505:Drivers/CMSIS/Include/arm_math.h ****    */
4506:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4507:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4508:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4509:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4510:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4511:Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4512:Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4513:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4514:Drivers/CMSIS/Include/arm_math.h **** 
4515:Drivers/CMSIS/Include/arm_math.h **** 
4516:Drivers/CMSIS/Include/arm_math.h ****   /**
4517:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4518:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4519:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4520:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4521:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4522:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4523:Drivers/CMSIS/Include/arm_math.h ****    */
4524:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q31(
4525:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4526:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4527:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4528:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchIn,
4529:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4530:Drivers/CMSIS/Include/arm_math.h **** 
4531:Drivers/CMSIS/Include/arm_math.h **** 
4532:Drivers/CMSIS/Include/arm_math.h ****   /**
4533:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4534:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4535:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4536:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4537:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4538:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4539:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4540:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4541:Drivers/CMSIS/Include/arm_math.h ****    */
4542:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4543:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4544:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4545:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
4546:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4547:Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4548:Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4549:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4550:Drivers/CMSIS/Include/arm_math.h **** 
4551:Drivers/CMSIS/Include/arm_math.h **** 
4552:Drivers/CMSIS/Include/arm_math.h ****   /**
4553:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4554:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
ARM GAS  /tmp/ccgoDI2u.s 			page 141


4555:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4556:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4557:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4558:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4559:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4560:Drivers/CMSIS/Include/arm_math.h ****    */
4561:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q15(
4562:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4563:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4564:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4565:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratchIn,
4566:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchOut,
4567:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4568:Drivers/CMSIS/Include/arm_math.h **** 
4569:Drivers/CMSIS/Include/arm_math.h **** 
4570:Drivers/CMSIS/Include/arm_math.h ****   /**
4571:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4572:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4573:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4574:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4575:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4576:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4577:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4578:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4579:Drivers/CMSIS/Include/arm_math.h ****    */
4580:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4581:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4582:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4583:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4584:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4585:Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4586:Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4587:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4588:Drivers/CMSIS/Include/arm_math.h **** 
4589:Drivers/CMSIS/Include/arm_math.h **** 
4590:Drivers/CMSIS/Include/arm_math.h ****   /**
4591:Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4592:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4593:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4594:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4595:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4596:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4597:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4598:Drivers/CMSIS/Include/arm_math.h ****    */
4599:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q7(
4600:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4601:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
4602:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
4603:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pScratchIn,
4604:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchOut,
4605:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4606:Drivers/CMSIS/Include/arm_math.h **** 
4607:Drivers/CMSIS/Include/arm_math.h **** 
4608:Drivers/CMSIS/Include/arm_math.h ****   /**
4609:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4610:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4611:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
ARM GAS  /tmp/ccgoDI2u.s 			page 142


4612:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4613:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4614:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4615:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4616:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4617:Drivers/CMSIS/Include/arm_math.h ****    */
4618:Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4619:Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4620:Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4621:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pCoeffs,
4622:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pState,
4623:Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4624:Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4625:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4626:Drivers/CMSIS/Include/arm_math.h **** 
4627:Drivers/CMSIS/Include/arm_math.h **** 
4628:Drivers/CMSIS/Include/arm_math.h ****   /**
4629:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4630:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4631:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4632:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4633:Drivers/CMSIS/Include/arm_math.h ****    */
4634:Drivers/CMSIS/Include/arm_math.h ****   void arm_sin_cos_f32(
4635:Drivers/CMSIS/Include/arm_math.h ****   float32_t theta,
4636:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSinVal,
4637:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCosVal);
4638:Drivers/CMSIS/Include/arm_math.h **** 
4639:Drivers/CMSIS/Include/arm_math.h **** 
4640:Drivers/CMSIS/Include/arm_math.h ****   /**
4641:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4642:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4643:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4644:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4645:Drivers/CMSIS/Include/arm_math.h ****    */
4646:Drivers/CMSIS/Include/arm_math.h ****   void arm_sin_cos_q31(
4647:Drivers/CMSIS/Include/arm_math.h ****   q31_t theta,
4648:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSinVal,
4649:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCosVal);
4650:Drivers/CMSIS/Include/arm_math.h **** 
4651:Drivers/CMSIS/Include/arm_math.h **** 
4652:Drivers/CMSIS/Include/arm_math.h ****   /**
4653:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4654:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4655:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4656:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4657:Drivers/CMSIS/Include/arm_math.h ****    */
4658:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_f32(
4659:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4660:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4661:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4662:Drivers/CMSIS/Include/arm_math.h **** 
4663:Drivers/CMSIS/Include/arm_math.h ****   /**
4664:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4665:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4666:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4667:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4668:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 143


4669:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_q31(
4670:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4671:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4672:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4673:Drivers/CMSIS/Include/arm_math.h **** 
4674:Drivers/CMSIS/Include/arm_math.h **** 
4675:Drivers/CMSIS/Include/arm_math.h ****   /**
4676:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4677:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4678:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4679:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4680:Drivers/CMSIS/Include/arm_math.h ****    */
4681:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_q15(
4682:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4683:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4684:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4685:Drivers/CMSIS/Include/arm_math.h **** 
4686:Drivers/CMSIS/Include/arm_math.h **** 
4687:Drivers/CMSIS/Include/arm_math.h ****   /**
4688:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4689:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4690:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4691:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4692:Drivers/CMSIS/Include/arm_math.h ****    */
4693:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4694:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4695:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4696:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4697:Drivers/CMSIS/Include/arm_math.h **** 
4698:Drivers/CMSIS/Include/arm_math.h **** 
4699:Drivers/CMSIS/Include/arm_math.h ****   /**
4700:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
4701:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4702:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4703:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4704:Drivers/CMSIS/Include/arm_math.h ****    */
4705:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4706:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4707:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4708:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4709:Drivers/CMSIS/Include/arm_math.h **** 
4710:Drivers/CMSIS/Include/arm_math.h **** 
4711:Drivers/CMSIS/Include/arm_math.h ****   /**
4712:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4713:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4714:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4715:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4716:Drivers/CMSIS/Include/arm_math.h ****    */
4717:Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4718:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4719:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4720:Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4721:Drivers/CMSIS/Include/arm_math.h **** 
4722:Drivers/CMSIS/Include/arm_math.h **** 
4723:Drivers/CMSIS/Include/arm_math.h ****  /**
4724:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
4725:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 144


4726:Drivers/CMSIS/Include/arm_math.h **** 
4727:Drivers/CMSIS/Include/arm_math.h ****   /**
4728:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup PID PID Motor Control
4729:Drivers/CMSIS/Include/arm_math.h ****    *
4730:Drivers/CMSIS/Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4731:Drivers/CMSIS/Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4732:Drivers/CMSIS/Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4733:Drivers/CMSIS/Include/arm_math.h ****    *
4734:Drivers/CMSIS/Include/arm_math.h ****    * This set of functions implements (PID) controllers
4735:Drivers/CMSIS/Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4736:Drivers/CMSIS/Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4737:Drivers/CMSIS/Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4738:Drivers/CMSIS/Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4739:Drivers/CMSIS/Include/arm_math.h ****    *
4740:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm:
4741:Drivers/CMSIS/Include/arm_math.h ****    * <pre>
4742:Drivers/CMSIS/Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4743:Drivers/CMSIS/Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4744:Drivers/CMSIS/Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4745:Drivers/CMSIS/Include/arm_math.h ****    *    A2 = Kd  </pre>
4746:Drivers/CMSIS/Include/arm_math.h ****    *
4747:Drivers/CMSIS/Include/arm_math.h ****    * \par
4748:Drivers/CMSIS/Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4749:Drivers/CMSIS/Include/arm_math.h ****    *
4750:Drivers/CMSIS/Include/arm_math.h ****    * \par
4751:Drivers/CMSIS/Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4752:Drivers/CMSIS/Include/arm_math.h ****    *
4753:Drivers/CMSIS/Include/arm_math.h ****    * \par
4754:Drivers/CMSIS/Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4755:Drivers/CMSIS/Include/arm_math.h ****    * the measured output and the reference input.
4756:Drivers/CMSIS/Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4757:Drivers/CMSIS/Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4758:Drivers/CMSIS/Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4759:Drivers/CMSIS/Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4760:Drivers/CMSIS/Include/arm_math.h ****    *
4761:Drivers/CMSIS/Include/arm_math.h ****    * \par Instance Structure
4762:Drivers/CMSIS/Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4763:Drivers/CMSIS/Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4764:Drivers/CMSIS/Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4765:Drivers/CMSIS/Include/arm_math.h ****    *
4766:Drivers/CMSIS/Include/arm_math.h ****    * \par Reset Functions
4767:Drivers/CMSIS/Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4768:Drivers/CMSIS/Include/arm_math.h ****    *
4769:Drivers/CMSIS/Include/arm_math.h ****    * \par Initialization Functions
4770:Drivers/CMSIS/Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4771:Drivers/CMSIS/Include/arm_math.h ****    * The initialization function performs the following operations:
4772:Drivers/CMSIS/Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4773:Drivers/CMSIS/Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4774:Drivers/CMSIS/Include/arm_math.h ****    *
4775:Drivers/CMSIS/Include/arm_math.h ****    * \par
4776:Drivers/CMSIS/Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4777:Drivers/CMSIS/Include/arm_math.h ****    *
4778:Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
4779:Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4780:Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4781:Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4782:Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/ccgoDI2u.s 			page 145


4783:Drivers/CMSIS/Include/arm_math.h **** 
4784:Drivers/CMSIS/Include/arm_math.h ****   /**
4785:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup PID
4786:Drivers/CMSIS/Include/arm_math.h ****    * @{
4787:Drivers/CMSIS/Include/arm_math.h ****    */
4788:Drivers/CMSIS/Include/arm_math.h **** 
4789:Drivers/CMSIS/Include/arm_math.h ****   /**
4790:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4791:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4792:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4793:Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
4794:Drivers/CMSIS/Include/arm_math.h ****    */
4795:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE float32_t arm_pid_f32(
4796:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S,
4797:Drivers/CMSIS/Include/arm_math.h ****   float32_t in)
4798:Drivers/CMSIS/Include/arm_math.h ****   {
4799:Drivers/CMSIS/Include/arm_math.h ****     float32_t out;
4800:Drivers/CMSIS/Include/arm_math.h **** 
4801:Drivers/CMSIS/Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4802:Drivers/CMSIS/Include/arm_math.h ****     out = (S->A0 * in) +
4803:Drivers/CMSIS/Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4804:Drivers/CMSIS/Include/arm_math.h **** 
4805:Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4806:Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4807:Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4808:Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4809:Drivers/CMSIS/Include/arm_math.h **** 
4810:Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4811:Drivers/CMSIS/Include/arm_math.h ****     return (out);
4812:Drivers/CMSIS/Include/arm_math.h **** 
4813:Drivers/CMSIS/Include/arm_math.h ****   }
4814:Drivers/CMSIS/Include/arm_math.h **** 
4815:Drivers/CMSIS/Include/arm_math.h ****   /**
4816:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4817:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4818:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4819:Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
4820:Drivers/CMSIS/Include/arm_math.h ****    *
4821:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4822:Drivers/CMSIS/Include/arm_math.h ****    * \par
4823:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4824:Drivers/CMSIS/Include/arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4825:Drivers/CMSIS/Include/arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4826:Drivers/CMSIS/Include/arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4827:Drivers/CMSIS/Include/arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4828:Drivers/CMSIS/Include/arm_math.h ****    */
4829:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t arm_pid_q31(
4830:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S,
4831:Drivers/CMSIS/Include/arm_math.h ****   q31_t in)
4832:Drivers/CMSIS/Include/arm_math.h ****   {
4833:Drivers/CMSIS/Include/arm_math.h ****     q63_t acc;
4834:Drivers/CMSIS/Include/arm_math.h ****     q31_t out;
4835:Drivers/CMSIS/Include/arm_math.h **** 
4836:Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4837:Drivers/CMSIS/Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4838:Drivers/CMSIS/Include/arm_math.h **** 
4839:Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] */
ARM GAS  /tmp/ccgoDI2u.s 			page 146


4840:Drivers/CMSIS/Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4841:Drivers/CMSIS/Include/arm_math.h **** 
4842:Drivers/CMSIS/Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4843:Drivers/CMSIS/Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4844:Drivers/CMSIS/Include/arm_math.h **** 
4845:Drivers/CMSIS/Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4846:Drivers/CMSIS/Include/arm_math.h ****     out = (q31_t) (acc >> 31u);
4847:Drivers/CMSIS/Include/arm_math.h **** 
4848:Drivers/CMSIS/Include/arm_math.h ****     /* out += y[n-1] */
4849:Drivers/CMSIS/Include/arm_math.h ****     out += S->state[2];
4850:Drivers/CMSIS/Include/arm_math.h **** 
4851:Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4852:Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4853:Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4854:Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4855:Drivers/CMSIS/Include/arm_math.h **** 
4856:Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4857:Drivers/CMSIS/Include/arm_math.h ****     return (out);
4858:Drivers/CMSIS/Include/arm_math.h ****   }
4859:Drivers/CMSIS/Include/arm_math.h **** 
4860:Drivers/CMSIS/Include/arm_math.h **** 
4861:Drivers/CMSIS/Include/arm_math.h ****   /**
4862:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4863:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4864:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4865:Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
4866:Drivers/CMSIS/Include/arm_math.h ****    *
4867:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4868:Drivers/CMSIS/Include/arm_math.h ****    * \par
4869:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4870:Drivers/CMSIS/Include/arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4871:Drivers/CMSIS/Include/arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4872:Drivers/CMSIS/Include/arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4873:Drivers/CMSIS/Include/arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4874:Drivers/CMSIS/Include/arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4875:Drivers/CMSIS/Include/arm_math.h ****    */
4876:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t arm_pid_q15(
4877:Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S,
4878:Drivers/CMSIS/Include/arm_math.h ****   q15_t in)
4879:Drivers/CMSIS/Include/arm_math.h ****   {
4880:Drivers/CMSIS/Include/arm_math.h ****     q63_t acc;
4881:Drivers/CMSIS/Include/arm_math.h ****     q15_t out;
4882:Drivers/CMSIS/Include/arm_math.h **** 
4883:Drivers/CMSIS/Include/arm_math.h **** #ifndef ARM_MATH_CM0_FAMILY
4884:Drivers/CMSIS/Include/arm_math.h ****     __SIMD32_TYPE *vstate;
4885:Drivers/CMSIS/Include/arm_math.h **** 
4886:Drivers/CMSIS/Include/arm_math.h ****     /* Implementation of PID controller */
4887:Drivers/CMSIS/Include/arm_math.h **** 
4888:Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4889:Drivers/CMSIS/Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4890:Drivers/CMSIS/Include/arm_math.h **** 
4891:Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4892:Drivers/CMSIS/Include/arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4893:Drivers/CMSIS/Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4894:Drivers/CMSIS/Include/arm_math.h **** #else
4895:Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4896:Drivers/CMSIS/Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
ARM GAS  /tmp/ccgoDI2u.s 			page 147


4897:Drivers/CMSIS/Include/arm_math.h **** 
4898:Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4899:Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4900:Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4901:Drivers/CMSIS/Include/arm_math.h **** #endif
4902:Drivers/CMSIS/Include/arm_math.h **** 
4903:Drivers/CMSIS/Include/arm_math.h ****     /* acc += y[n-1] */
4904:Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4905:Drivers/CMSIS/Include/arm_math.h **** 
4906:Drivers/CMSIS/Include/arm_math.h ****     /* saturate the output */
4907:Drivers/CMSIS/Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4908:Drivers/CMSIS/Include/arm_math.h **** 
4909:Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4910:Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4911:Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4912:Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4913:Drivers/CMSIS/Include/arm_math.h **** 
4914:Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4915:Drivers/CMSIS/Include/arm_math.h ****     return (out);
4916:Drivers/CMSIS/Include/arm_math.h ****   }
4917:Drivers/CMSIS/Include/arm_math.h **** 
4918:Drivers/CMSIS/Include/arm_math.h ****   /**
4919:Drivers/CMSIS/Include/arm_math.h ****    * @} end of PID group
4920:Drivers/CMSIS/Include/arm_math.h ****    */
4921:Drivers/CMSIS/Include/arm_math.h **** 
4922:Drivers/CMSIS/Include/arm_math.h **** 
4923:Drivers/CMSIS/Include/arm_math.h ****   /**
4924:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4925:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4926:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4927:Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4928:Drivers/CMSIS/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4929:Drivers/CMSIS/Include/arm_math.h ****    */
4930:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
4931:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
4932:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
4933:Drivers/CMSIS/Include/arm_math.h **** 
4934:Drivers/CMSIS/Include/arm_math.h **** 
4935:Drivers/CMSIS/Include/arm_math.h ****   /**
4936:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4937:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4938:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4939:Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4940:Drivers/CMSIS/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4941:Drivers/CMSIS/Include/arm_math.h ****    */
4942:Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
4943:Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
4944:Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
4945:Drivers/CMSIS/Include/arm_math.h **** 
4946:Drivers/CMSIS/Include/arm_math.h **** 
4947:Drivers/CMSIS/Include/arm_math.h **** 
4948:Drivers/CMSIS/Include/arm_math.h ****   /**
4949:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
4950:Drivers/CMSIS/Include/arm_math.h ****    */
4951:Drivers/CMSIS/Include/arm_math.h **** 
4952:Drivers/CMSIS/Include/arm_math.h ****   /**
4953:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
ARM GAS  /tmp/ccgoDI2u.s 			page 148


4954:Drivers/CMSIS/Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
4955:Drivers/CMSIS/Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
4956:Drivers/CMSIS/Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
4957:Drivers/CMSIS/Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
4958:Drivers/CMSIS/Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
4959:Drivers/CMSIS/Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
4960:Drivers/CMSIS/Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
4961:Drivers/CMSIS/Include/arm_math.h ****    *
4962:Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
4963:Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
4964:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
4965:Drivers/CMSIS/Include/arm_math.h ****    * \image html clarkeFormula.gif
4966:Drivers/CMSIS/Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
4967:Drivers/CMSIS/Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
4968:Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
4969:Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
4970:Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
4971:Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4972:Drivers/CMSIS/Include/arm_math.h ****    */
4973:Drivers/CMSIS/Include/arm_math.h **** 
4974:Drivers/CMSIS/Include/arm_math.h ****   /**
4975:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup clarke
4976:Drivers/CMSIS/Include/arm_math.h ****    * @{
4977:Drivers/CMSIS/Include/arm_math.h ****    */
4978:Drivers/CMSIS/Include/arm_math.h **** 
4979:Drivers/CMSIS/Include/arm_math.h ****   /**
4980:Drivers/CMSIS/Include/arm_math.h ****    *
4981:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Clarke transform
4982:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
4983:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
4984:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
4985:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
4986:Drivers/CMSIS/Include/arm_math.h ****    */
4987:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_clarke_f32(
4988:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ia,
4989:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ib,
4990:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIalpha,
4991:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIbeta)
4992:Drivers/CMSIS/Include/arm_math.h ****   {
4993:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
4994:Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Ia;
4995:Drivers/CMSIS/Include/arm_math.h **** 
4996:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
4997:Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
4998:Drivers/CMSIS/Include/arm_math.h ****   }
4999:Drivers/CMSIS/Include/arm_math.h **** 
5000:Drivers/CMSIS/Include/arm_math.h **** 
5001:Drivers/CMSIS/Include/arm_math.h ****   /**
5002:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Clarke transform for Q31 version
5003:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5004:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5005:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5006:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5007:Drivers/CMSIS/Include/arm_math.h ****    *
5008:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5009:Drivers/CMSIS/Include/arm_math.h ****    * \par
5010:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
ARM GAS  /tmp/ccgoDI2u.s 			page 149


5011:Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5012:Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5013:Drivers/CMSIS/Include/arm_math.h ****    */
5014:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_clarke_q31(
5015:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ia,
5016:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ib,
5017:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIalpha,
5018:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIbeta)
5019:Drivers/CMSIS/Include/arm_math.h ****   {
5020:Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5021:Drivers/CMSIS/Include/arm_math.h **** 
5022:Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5023:Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Ia;
5024:Drivers/CMSIS/Include/arm_math.h **** 
5025:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5026:Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5027:Drivers/CMSIS/Include/arm_math.h **** 
5028:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5029:Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5030:Drivers/CMSIS/Include/arm_math.h **** 
5031:Drivers/CMSIS/Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5032:Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5033:Drivers/CMSIS/Include/arm_math.h ****   }
5034:Drivers/CMSIS/Include/arm_math.h **** 
5035:Drivers/CMSIS/Include/arm_math.h ****   /**
5036:Drivers/CMSIS/Include/arm_math.h ****    * @} end of clarke group
5037:Drivers/CMSIS/Include/arm_math.h ****    */
5038:Drivers/CMSIS/Include/arm_math.h **** 
5039:Drivers/CMSIS/Include/arm_math.h ****   /**
5040:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5041:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5042:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
5043:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5044:Drivers/CMSIS/Include/arm_math.h ****    */
5045:Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_q31(
5046:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
5047:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
5048:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5049:Drivers/CMSIS/Include/arm_math.h **** 
5050:Drivers/CMSIS/Include/arm_math.h **** 
5051:Drivers/CMSIS/Include/arm_math.h **** 
5052:Drivers/CMSIS/Include/arm_math.h ****   /**
5053:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5054:Drivers/CMSIS/Include/arm_math.h ****    */
5055:Drivers/CMSIS/Include/arm_math.h **** 
5056:Drivers/CMSIS/Include/arm_math.h ****   /**
5057:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5058:Drivers/CMSIS/Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5059:Drivers/CMSIS/Include/arm_math.h ****    *
5060:Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5061:Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5062:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5063:Drivers/CMSIS/Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5064:Drivers/CMSIS/Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5065:Drivers/CMSIS/Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5066:Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5067:Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
ARM GAS  /tmp/ccgoDI2u.s 			page 150


5068:Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5069:Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5070:Drivers/CMSIS/Include/arm_math.h ****    */
5071:Drivers/CMSIS/Include/arm_math.h **** 
5072:Drivers/CMSIS/Include/arm_math.h ****   /**
5073:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup inv_clarke
5074:Drivers/CMSIS/Include/arm_math.h ****    * @{
5075:Drivers/CMSIS/Include/arm_math.h ****    */
5076:Drivers/CMSIS/Include/arm_math.h **** 
5077:Drivers/CMSIS/Include/arm_math.h ****    /**
5078:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5079:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5080:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5081:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5082:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5083:Drivers/CMSIS/Include/arm_math.h ****    */
5084:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_clarke_f32(
5085:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ialpha,
5086:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ibeta,
5087:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIa,
5088:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIb)
5089:Drivers/CMSIS/Include/arm_math.h ****   {
5090:Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5091:Drivers/CMSIS/Include/arm_math.h ****     *pIa = Ialpha;
5092:Drivers/CMSIS/Include/arm_math.h **** 
5093:Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5094:Drivers/CMSIS/Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5095:Drivers/CMSIS/Include/arm_math.h ****   }
5096:Drivers/CMSIS/Include/arm_math.h **** 
5097:Drivers/CMSIS/Include/arm_math.h **** 
5098:Drivers/CMSIS/Include/arm_math.h ****   /**
5099:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5100:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5101:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5102:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5103:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5104:Drivers/CMSIS/Include/arm_math.h ****    *
5105:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5106:Drivers/CMSIS/Include/arm_math.h ****    * \par
5107:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5108:Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5109:Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5110:Drivers/CMSIS/Include/arm_math.h ****    */
5111:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_clarke_q31(
5112:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ialpha,
5113:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ibeta,
5114:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIa,
5115:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIb)
5116:Drivers/CMSIS/Include/arm_math.h ****   {
5117:Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5118:Drivers/CMSIS/Include/arm_math.h **** 
5119:Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5120:Drivers/CMSIS/Include/arm_math.h ****     *pIa = Ialpha;
5121:Drivers/CMSIS/Include/arm_math.h **** 
5122:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5123:Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5124:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 151


5125:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5126:Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5127:Drivers/CMSIS/Include/arm_math.h **** 
5128:Drivers/CMSIS/Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5129:Drivers/CMSIS/Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5130:Drivers/CMSIS/Include/arm_math.h ****   }
5131:Drivers/CMSIS/Include/arm_math.h **** 
5132:Drivers/CMSIS/Include/arm_math.h ****   /**
5133:Drivers/CMSIS/Include/arm_math.h ****    * @} end of inv_clarke group
5134:Drivers/CMSIS/Include/arm_math.h ****    */
5135:Drivers/CMSIS/Include/arm_math.h **** 
5136:Drivers/CMSIS/Include/arm_math.h ****   /**
5137:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5138:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5139:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
5140:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5141:Drivers/CMSIS/Include/arm_math.h ****    */
5142:Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_q15(
5143:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
5144:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
5145:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5146:Drivers/CMSIS/Include/arm_math.h **** 
5147:Drivers/CMSIS/Include/arm_math.h **** 
5148:Drivers/CMSIS/Include/arm_math.h **** 
5149:Drivers/CMSIS/Include/arm_math.h ****   /**
5150:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5151:Drivers/CMSIS/Include/arm_math.h ****    */
5152:Drivers/CMSIS/Include/arm_math.h **** 
5153:Drivers/CMSIS/Include/arm_math.h ****   /**
5154:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup park Vector Park Transform
5155:Drivers/CMSIS/Include/arm_math.h ****    *
5156:Drivers/CMSIS/Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5157:Drivers/CMSIS/Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5158:Drivers/CMSIS/Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5159:Drivers/CMSIS/Include/arm_math.h ****    * the stator vector current and rotor flux vector.
5160:Drivers/CMSIS/Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5161:Drivers/CMSIS/Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5162:Drivers/CMSIS/Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5163:Drivers/CMSIS/Include/arm_math.h ****    *
5164:Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5165:Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5166:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5167:Drivers/CMSIS/Include/arm_math.h ****    * \image html parkFormula.gif
5168:Drivers/CMSIS/Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5169:Drivers/CMSIS/Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5170:Drivers/CMSIS/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5171:Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5172:Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5173:Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5174:Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5175:Drivers/CMSIS/Include/arm_math.h ****    */
5176:Drivers/CMSIS/Include/arm_math.h **** 
5177:Drivers/CMSIS/Include/arm_math.h ****   /**
5178:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup park
5179:Drivers/CMSIS/Include/arm_math.h ****    * @{
5180:Drivers/CMSIS/Include/arm_math.h ****    */
5181:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 152


5182:Drivers/CMSIS/Include/arm_math.h ****   /**
5183:Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point Park transform
5184:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5185:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5186:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5187:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5188:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5189:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5190:Drivers/CMSIS/Include/arm_math.h ****    *
5191:Drivers/CMSIS/Include/arm_math.h ****    * The function implements the forward Park transform.
5192:Drivers/CMSIS/Include/arm_math.h ****    *
5193:Drivers/CMSIS/Include/arm_math.h ****    */
5194:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_park_f32(
5195:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ialpha,
5196:Drivers/CMSIS/Include/arm_math.h ****   float32_t Ibeta,
5197:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pId,
5198:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIq,
5199:Drivers/CMSIS/Include/arm_math.h ****   float32_t sinVal,
5200:Drivers/CMSIS/Include/arm_math.h ****   float32_t cosVal)
5201:Drivers/CMSIS/Include/arm_math.h ****   {
5202:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5203:Drivers/CMSIS/Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5204:Drivers/CMSIS/Include/arm_math.h **** 
5205:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5206:Drivers/CMSIS/Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5207:Drivers/CMSIS/Include/arm_math.h ****   }
5208:Drivers/CMSIS/Include/arm_math.h **** 
5209:Drivers/CMSIS/Include/arm_math.h **** 
5210:Drivers/CMSIS/Include/arm_math.h ****   /**
5211:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Park transform for Q31 version
5212:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5213:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5214:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5215:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5216:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5217:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5218:Drivers/CMSIS/Include/arm_math.h ****    *
5219:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5220:Drivers/CMSIS/Include/arm_math.h ****    * \par
5221:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5222:Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5223:Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5224:Drivers/CMSIS/Include/arm_math.h ****    */
5225:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_park_q31(
5226:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ialpha,
5227:Drivers/CMSIS/Include/arm_math.h ****   q31_t Ibeta,
5228:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pId,
5229:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIq,
5230:Drivers/CMSIS/Include/arm_math.h ****   q31_t sinVal,
5231:Drivers/CMSIS/Include/arm_math.h ****   q31_t cosVal)
5232:Drivers/CMSIS/Include/arm_math.h ****   {
5233:Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5234:Drivers/CMSIS/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5235:Drivers/CMSIS/Include/arm_math.h **** 
5236:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5237:Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5238:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 153


5239:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5240:Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5241:Drivers/CMSIS/Include/arm_math.h **** 
5242:Drivers/CMSIS/Include/arm_math.h **** 
5243:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5244:Drivers/CMSIS/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5245:Drivers/CMSIS/Include/arm_math.h **** 
5246:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5247:Drivers/CMSIS/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5248:Drivers/CMSIS/Include/arm_math.h **** 
5249:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5250:Drivers/CMSIS/Include/arm_math.h ****     *pId = __QADD(product1, product2);
5251:Drivers/CMSIS/Include/arm_math.h **** 
5252:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5253:Drivers/CMSIS/Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5254:Drivers/CMSIS/Include/arm_math.h ****   }
5255:Drivers/CMSIS/Include/arm_math.h **** 
5256:Drivers/CMSIS/Include/arm_math.h ****   /**
5257:Drivers/CMSIS/Include/arm_math.h ****    * @} end of park group
5258:Drivers/CMSIS/Include/arm_math.h ****    */
5259:Drivers/CMSIS/Include/arm_math.h **** 
5260:Drivers/CMSIS/Include/arm_math.h ****   /**
5261:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5262:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5263:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       is output pointer
5264:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5265:Drivers/CMSIS/Include/arm_math.h ****    */
5266:Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_float(
5267:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
5268:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
5269:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5270:Drivers/CMSIS/Include/arm_math.h **** 
5271:Drivers/CMSIS/Include/arm_math.h **** 
5272:Drivers/CMSIS/Include/arm_math.h ****   /**
5273:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5274:Drivers/CMSIS/Include/arm_math.h ****    */
5275:Drivers/CMSIS/Include/arm_math.h **** 
5276:Drivers/CMSIS/Include/arm_math.h ****   /**
5277:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5278:Drivers/CMSIS/Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5279:Drivers/CMSIS/Include/arm_math.h ****    *
5280:Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5281:Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5282:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5283:Drivers/CMSIS/Include/arm_math.h ****    * \image html parkInvFormula.gif
5284:Drivers/CMSIS/Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5285:Drivers/CMSIS/Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5286:Drivers/CMSIS/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5287:Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5288:Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5289:Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5290:Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5291:Drivers/CMSIS/Include/arm_math.h ****    */
5292:Drivers/CMSIS/Include/arm_math.h **** 
5293:Drivers/CMSIS/Include/arm_math.h ****   /**
5294:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup inv_park
5295:Drivers/CMSIS/Include/arm_math.h ****    * @{
ARM GAS  /tmp/ccgoDI2u.s 			page 154


5296:Drivers/CMSIS/Include/arm_math.h ****    */
5297:Drivers/CMSIS/Include/arm_math.h **** 
5298:Drivers/CMSIS/Include/arm_math.h ****    /**
5299:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5300:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5301:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5302:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5303:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5304:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5305:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5306:Drivers/CMSIS/Include/arm_math.h ****    */
5307:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_park_f32(
5308:Drivers/CMSIS/Include/arm_math.h ****   float32_t Id,
5309:Drivers/CMSIS/Include/arm_math.h ****   float32_t Iq,
5310:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIalpha,
5311:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIbeta,
5312:Drivers/CMSIS/Include/arm_math.h ****   float32_t sinVal,
5313:Drivers/CMSIS/Include/arm_math.h ****   float32_t cosVal)
5314:Drivers/CMSIS/Include/arm_math.h ****   {
5315:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5316:Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5317:Drivers/CMSIS/Include/arm_math.h **** 
5318:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5319:Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5320:Drivers/CMSIS/Include/arm_math.h ****   }
5321:Drivers/CMSIS/Include/arm_math.h **** 
5322:Drivers/CMSIS/Include/arm_math.h **** 
5323:Drivers/CMSIS/Include/arm_math.h ****   /**
5324:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Inverse Park transform for   Q31 version
5325:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5326:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5327:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5328:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5329:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5330:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5331:Drivers/CMSIS/Include/arm_math.h ****    *
5332:Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5333:Drivers/CMSIS/Include/arm_math.h ****    * \par
5334:Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5335:Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5336:Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5337:Drivers/CMSIS/Include/arm_math.h ****    */
5338:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_park_q31(
5339:Drivers/CMSIS/Include/arm_math.h ****   q31_t Id,
5340:Drivers/CMSIS/Include/arm_math.h ****   q31_t Iq,
5341:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIalpha,
5342:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIbeta,
5343:Drivers/CMSIS/Include/arm_math.h ****   q31_t sinVal,
5344:Drivers/CMSIS/Include/arm_math.h ****   q31_t cosVal)
5345:Drivers/CMSIS/Include/arm_math.h ****   {
5346:Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5347:Drivers/CMSIS/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5348:Drivers/CMSIS/Include/arm_math.h **** 
5349:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5350:Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5351:Drivers/CMSIS/Include/arm_math.h **** 
5352:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
ARM GAS  /tmp/ccgoDI2u.s 			page 155


5353:Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5354:Drivers/CMSIS/Include/arm_math.h **** 
5355:Drivers/CMSIS/Include/arm_math.h **** 
5356:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5357:Drivers/CMSIS/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5358:Drivers/CMSIS/Include/arm_math.h **** 
5359:Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5360:Drivers/CMSIS/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5361:Drivers/CMSIS/Include/arm_math.h **** 
5362:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5363:Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5364:Drivers/CMSIS/Include/arm_math.h **** 
5365:Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5366:Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = __QADD(product4, product3);
5367:Drivers/CMSIS/Include/arm_math.h ****   }
5368:Drivers/CMSIS/Include/arm_math.h **** 
5369:Drivers/CMSIS/Include/arm_math.h ****   /**
5370:Drivers/CMSIS/Include/arm_math.h ****    * @} end of Inverse park group
5371:Drivers/CMSIS/Include/arm_math.h ****    */
5372:Drivers/CMSIS/Include/arm_math.h **** 
5373:Drivers/CMSIS/Include/arm_math.h **** 
5374:Drivers/CMSIS/Include/arm_math.h ****   /**
5375:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q31 vector to floating-point vector.
5376:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5377:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       is output pointer
5378:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5379:Drivers/CMSIS/Include/arm_math.h ****    */
5380:Drivers/CMSIS/Include/arm_math.h ****   void arm_q31_to_float(
5381:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
5382:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
5383:Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5384:Drivers/CMSIS/Include/arm_math.h **** 
5385:Drivers/CMSIS/Include/arm_math.h ****   /**
5386:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupInterpolation
5387:Drivers/CMSIS/Include/arm_math.h ****    */
5388:Drivers/CMSIS/Include/arm_math.h **** 
5389:Drivers/CMSIS/Include/arm_math.h ****   /**
5390:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5391:Drivers/CMSIS/Include/arm_math.h ****    *
5392:Drivers/CMSIS/Include/arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5393:Drivers/CMSIS/Include/arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5394:Drivers/CMSIS/Include/arm_math.h ****    *
5395:Drivers/CMSIS/Include/arm_math.h ****    * \par
5396:Drivers/CMSIS/Include/arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5397:Drivers/CMSIS/Include/arm_math.h ****    *
5398:Drivers/CMSIS/Include/arm_math.h ****    * \par
5399:Drivers/CMSIS/Include/arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5400:Drivers/CMSIS/Include/arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5401:Drivers/CMSIS/Include/arm_math.h ****    *
5402:Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm:
5403:Drivers/CMSIS/Include/arm_math.h ****    * <pre>
5404:Drivers/CMSIS/Include/arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5405:Drivers/CMSIS/Include/arm_math.h ****    *       where x0, x1 are nearest values of input x
5406:Drivers/CMSIS/Include/arm_math.h ****    *             y0, y1 are nearest values to output y
5407:Drivers/CMSIS/Include/arm_math.h ****    * </pre>
5408:Drivers/CMSIS/Include/arm_math.h ****    *
5409:Drivers/CMSIS/Include/arm_math.h ****    * \par
ARM GAS  /tmp/ccgoDI2u.s 			page 156


5410:Drivers/CMSIS/Include/arm_math.h ****    * This set of functions implements Linear interpolation process
5411:Drivers/CMSIS/Include/arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5412:Drivers/CMSIS/Include/arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5413:Drivers/CMSIS/Include/arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5414:Drivers/CMSIS/Include/arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5415:Drivers/CMSIS/Include/arm_math.h ****    *
5416:Drivers/CMSIS/Include/arm_math.h ****    * \par
5417:Drivers/CMSIS/Include/arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5418:Drivers/CMSIS/Include/arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5419:Drivers/CMSIS/Include/arm_math.h ****    */
5420:Drivers/CMSIS/Include/arm_math.h **** 
5421:Drivers/CMSIS/Include/arm_math.h ****   /**
5422:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup LinearInterpolate
5423:Drivers/CMSIS/Include/arm_math.h ****    * @{
5424:Drivers/CMSIS/Include/arm_math.h ****    */
5425:Drivers/CMSIS/Include/arm_math.h **** 
5426:Drivers/CMSIS/Include/arm_math.h ****   /**
5427:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5428:Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5429:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     x  input sample to process
5430:Drivers/CMSIS/Include/arm_math.h ****    * @return y processed output sample.
5431:Drivers/CMSIS/Include/arm_math.h ****    *
5432:Drivers/CMSIS/Include/arm_math.h ****    */
5433:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE float32_t arm_linear_interp_f32(
5434:Drivers/CMSIS/Include/arm_math.h ****   arm_linear_interp_instance_f32 * S,
5435:Drivers/CMSIS/Include/arm_math.h ****   float32_t x)
5436:Drivers/CMSIS/Include/arm_math.h ****   {
5437:Drivers/CMSIS/Include/arm_math.h ****     float32_t y;
5438:Drivers/CMSIS/Include/arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5439:Drivers/CMSIS/Include/arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5440:Drivers/CMSIS/Include/arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5441:Drivers/CMSIS/Include/arm_math.h ****     int32_t i;                                   /* Index variable */
5442:Drivers/CMSIS/Include/arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5443:Drivers/CMSIS/Include/arm_math.h **** 
5444:Drivers/CMSIS/Include/arm_math.h ****     /* Calculation of index */
5445:Drivers/CMSIS/Include/arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5446:Drivers/CMSIS/Include/arm_math.h **** 
5447:Drivers/CMSIS/Include/arm_math.h ****     if(i < 0)
5448:Drivers/CMSIS/Include/arm_math.h ****     {
5449:Drivers/CMSIS/Include/arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5450:Drivers/CMSIS/Include/arm_math.h ****       y = pYData[0];
5451:Drivers/CMSIS/Include/arm_math.h ****     }
5452:Drivers/CMSIS/Include/arm_math.h ****     else if((uint32_t)i >= S->nValues)
5453:Drivers/CMSIS/Include/arm_math.h ****     {
5454:Drivers/CMSIS/Include/arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5455:Drivers/CMSIS/Include/arm_math.h ****       y = pYData[S->nValues - 1];
5456:Drivers/CMSIS/Include/arm_math.h ****     }
5457:Drivers/CMSIS/Include/arm_math.h ****     else
5458:Drivers/CMSIS/Include/arm_math.h ****     {
5459:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of nearest input values */
5460:Drivers/CMSIS/Include/arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5461:Drivers/CMSIS/Include/arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5462:Drivers/CMSIS/Include/arm_math.h **** 
5463:Drivers/CMSIS/Include/arm_math.h ****       /* Read of nearest output values */
5464:Drivers/CMSIS/Include/arm_math.h ****       y0 = pYData[i];
5465:Drivers/CMSIS/Include/arm_math.h ****       y1 = pYData[i + 1];
5466:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 157


5467:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of output */
5468:Drivers/CMSIS/Include/arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5469:Drivers/CMSIS/Include/arm_math.h **** 
5470:Drivers/CMSIS/Include/arm_math.h ****     }
5471:Drivers/CMSIS/Include/arm_math.h **** 
5472:Drivers/CMSIS/Include/arm_math.h ****     /* returns output value */
5473:Drivers/CMSIS/Include/arm_math.h ****     return (y);
5474:Drivers/CMSIS/Include/arm_math.h ****   }
5475:Drivers/CMSIS/Include/arm_math.h **** 
5476:Drivers/CMSIS/Include/arm_math.h **** 
5477:Drivers/CMSIS/Include/arm_math.h ****    /**
5478:Drivers/CMSIS/Include/arm_math.h ****    *
5479:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5480:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5481:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x        input sample to process
5482:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] nValues  number of table values
5483:Drivers/CMSIS/Include/arm_math.h ****    * @return y processed output sample.
5484:Drivers/CMSIS/Include/arm_math.h ****    *
5485:Drivers/CMSIS/Include/arm_math.h ****    * \par
5486:Drivers/CMSIS/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5487:Drivers/CMSIS/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5488:Drivers/CMSIS/Include/arm_math.h ****    *
5489:Drivers/CMSIS/Include/arm_math.h ****    */
5490:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t arm_linear_interp_q31(
5491:Drivers/CMSIS/Include/arm_math.h ****   q31_t * pYData,
5492:Drivers/CMSIS/Include/arm_math.h ****   q31_t x,
5493:Drivers/CMSIS/Include/arm_math.h ****   uint32_t nValues)
5494:Drivers/CMSIS/Include/arm_math.h ****   {
5495:Drivers/CMSIS/Include/arm_math.h ****     q31_t y;                                     /* output */
5496:Drivers/CMSIS/Include/arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5497:Drivers/CMSIS/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5498:Drivers/CMSIS/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5499:Drivers/CMSIS/Include/arm_math.h **** 
5500:Drivers/CMSIS/Include/arm_math.h ****     /* Input is in 12.20 format */
5501:Drivers/CMSIS/Include/arm_math.h ****     /* 12 bits for the table index */
5502:Drivers/CMSIS/Include/arm_math.h ****     /* Index value calculation */
5503:Drivers/CMSIS/Include/arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5504:Drivers/CMSIS/Include/arm_math.h **** 
5505:Drivers/CMSIS/Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
5506:Drivers/CMSIS/Include/arm_math.h ****     {
5507:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[nValues - 1]);
5508:Drivers/CMSIS/Include/arm_math.h ****     }
5509:Drivers/CMSIS/Include/arm_math.h ****     else if(index < 0)
5510:Drivers/CMSIS/Include/arm_math.h ****     {
5511:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[0]);
5512:Drivers/CMSIS/Include/arm_math.h ****     }
5513:Drivers/CMSIS/Include/arm_math.h ****     else
5514:Drivers/CMSIS/Include/arm_math.h ****     {
5515:Drivers/CMSIS/Include/arm_math.h ****       /* 20 bits for the fractional part */
5516:Drivers/CMSIS/Include/arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5517:Drivers/CMSIS/Include/arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5518:Drivers/CMSIS/Include/arm_math.h **** 
5519:Drivers/CMSIS/Include/arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5520:Drivers/CMSIS/Include/arm_math.h ****       y0 = pYData[index];
5521:Drivers/CMSIS/Include/arm_math.h ****       y1 = pYData[index + 1];
5522:Drivers/CMSIS/Include/arm_math.h **** 
5523:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
ARM GAS  /tmp/ccgoDI2u.s 			page 158


5524:Drivers/CMSIS/Include/arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5525:Drivers/CMSIS/Include/arm_math.h **** 
5526:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5527:Drivers/CMSIS/Include/arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5528:Drivers/CMSIS/Include/arm_math.h **** 
5529:Drivers/CMSIS/Include/arm_math.h ****       /* Convert y to 1.31 format */
5530:Drivers/CMSIS/Include/arm_math.h ****       return (y << 1u);
5531:Drivers/CMSIS/Include/arm_math.h ****     }
5532:Drivers/CMSIS/Include/arm_math.h ****   }
5533:Drivers/CMSIS/Include/arm_math.h **** 
5534:Drivers/CMSIS/Include/arm_math.h **** 
5535:Drivers/CMSIS/Include/arm_math.h ****   /**
5536:Drivers/CMSIS/Include/arm_math.h ****    *
5537:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5538:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5539:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x        input sample to process
5540:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] nValues  number of table values
5541:Drivers/CMSIS/Include/arm_math.h ****    * @return y processed output sample.
5542:Drivers/CMSIS/Include/arm_math.h ****    *
5543:Drivers/CMSIS/Include/arm_math.h ****    * \par
5544:Drivers/CMSIS/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5545:Drivers/CMSIS/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5546:Drivers/CMSIS/Include/arm_math.h ****    *
5547:Drivers/CMSIS/Include/arm_math.h ****    */
5548:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t arm_linear_interp_q15(
5549:Drivers/CMSIS/Include/arm_math.h ****   q15_t * pYData,
5550:Drivers/CMSIS/Include/arm_math.h ****   q31_t x,
5551:Drivers/CMSIS/Include/arm_math.h ****   uint32_t nValues)
5552:Drivers/CMSIS/Include/arm_math.h ****   {
5553:Drivers/CMSIS/Include/arm_math.h ****     q63_t y;                                     /* output */
5554:Drivers/CMSIS/Include/arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5555:Drivers/CMSIS/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5556:Drivers/CMSIS/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5557:Drivers/CMSIS/Include/arm_math.h **** 
5558:Drivers/CMSIS/Include/arm_math.h ****     /* Input is in 12.20 format */
5559:Drivers/CMSIS/Include/arm_math.h ****     /* 12 bits for the table index */
5560:Drivers/CMSIS/Include/arm_math.h ****     /* Index value calculation */
5561:Drivers/CMSIS/Include/arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5562:Drivers/CMSIS/Include/arm_math.h **** 
5563:Drivers/CMSIS/Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
5564:Drivers/CMSIS/Include/arm_math.h ****     {
5565:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[nValues - 1]);
5566:Drivers/CMSIS/Include/arm_math.h ****     }
5567:Drivers/CMSIS/Include/arm_math.h ****     else if(index < 0)
5568:Drivers/CMSIS/Include/arm_math.h ****     {
5569:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[0]);
5570:Drivers/CMSIS/Include/arm_math.h ****     }
5571:Drivers/CMSIS/Include/arm_math.h ****     else
5572:Drivers/CMSIS/Include/arm_math.h ****     {
5573:Drivers/CMSIS/Include/arm_math.h ****       /* 20 bits for the fractional part */
5574:Drivers/CMSIS/Include/arm_math.h ****       /* fract is in 12.20 format */
5575:Drivers/CMSIS/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5576:Drivers/CMSIS/Include/arm_math.h **** 
5577:Drivers/CMSIS/Include/arm_math.h ****       /* Read two nearest output values from the index */
5578:Drivers/CMSIS/Include/arm_math.h ****       y0 = pYData[index];
5579:Drivers/CMSIS/Include/arm_math.h ****       y1 = pYData[index + 1];
5580:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 159


5581:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5582:Drivers/CMSIS/Include/arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5583:Drivers/CMSIS/Include/arm_math.h **** 
5584:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5585:Drivers/CMSIS/Include/arm_math.h ****       y += ((q63_t) y1 * (fract));
5586:Drivers/CMSIS/Include/arm_math.h **** 
5587:Drivers/CMSIS/Include/arm_math.h ****       /* convert y to 1.15 format */
5588:Drivers/CMSIS/Include/arm_math.h ****       return (q15_t) (y >> 20);
5589:Drivers/CMSIS/Include/arm_math.h ****     }
5590:Drivers/CMSIS/Include/arm_math.h ****   }
5591:Drivers/CMSIS/Include/arm_math.h **** 
5592:Drivers/CMSIS/Include/arm_math.h **** 
5593:Drivers/CMSIS/Include/arm_math.h ****   /**
5594:Drivers/CMSIS/Include/arm_math.h ****    *
5595:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5596:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5597:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x        input sample to process
5598:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] nValues  number of table values
5599:Drivers/CMSIS/Include/arm_math.h ****    * @return y processed output sample.
5600:Drivers/CMSIS/Include/arm_math.h ****    *
5601:Drivers/CMSIS/Include/arm_math.h ****    * \par
5602:Drivers/CMSIS/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5603:Drivers/CMSIS/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5604:Drivers/CMSIS/Include/arm_math.h ****    */
5605:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q7_t arm_linear_interp_q7(
5606:Drivers/CMSIS/Include/arm_math.h ****   q7_t * pYData,
5607:Drivers/CMSIS/Include/arm_math.h ****   q31_t x,
5608:Drivers/CMSIS/Include/arm_math.h ****   uint32_t nValues)
5609:Drivers/CMSIS/Include/arm_math.h ****   {
5610:Drivers/CMSIS/Include/arm_math.h ****     q31_t y;                                     /* output */
5611:Drivers/CMSIS/Include/arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5612:Drivers/CMSIS/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5613:Drivers/CMSIS/Include/arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5614:Drivers/CMSIS/Include/arm_math.h **** 
5615:Drivers/CMSIS/Include/arm_math.h ****     /* Input is in 12.20 format */
5616:Drivers/CMSIS/Include/arm_math.h ****     /* 12 bits for the table index */
5617:Drivers/CMSIS/Include/arm_math.h ****     /* Index value calculation */
5618:Drivers/CMSIS/Include/arm_math.h ****     if (x < 0)
5619:Drivers/CMSIS/Include/arm_math.h ****     {
5620:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[0]);
5621:Drivers/CMSIS/Include/arm_math.h ****     }
5622:Drivers/CMSIS/Include/arm_math.h ****     index = (x >> 20) & 0xfff;
5623:Drivers/CMSIS/Include/arm_math.h **** 
5624:Drivers/CMSIS/Include/arm_math.h ****     if(index >= (nValues - 1))
5625:Drivers/CMSIS/Include/arm_math.h ****     {
5626:Drivers/CMSIS/Include/arm_math.h ****       return (pYData[nValues - 1]);
5627:Drivers/CMSIS/Include/arm_math.h ****     }
5628:Drivers/CMSIS/Include/arm_math.h ****     else
5629:Drivers/CMSIS/Include/arm_math.h ****     {
5630:Drivers/CMSIS/Include/arm_math.h ****       /* 20 bits for the fractional part */
5631:Drivers/CMSIS/Include/arm_math.h ****       /* fract is in 12.20 format */
5632:Drivers/CMSIS/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5633:Drivers/CMSIS/Include/arm_math.h **** 
5634:Drivers/CMSIS/Include/arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5635:Drivers/CMSIS/Include/arm_math.h ****       y0 = pYData[index];
5636:Drivers/CMSIS/Include/arm_math.h ****       y1 = pYData[index + 1];
5637:Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 160


5638:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5639:Drivers/CMSIS/Include/arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5640:Drivers/CMSIS/Include/arm_math.h **** 
5641:Drivers/CMSIS/Include/arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5642:Drivers/CMSIS/Include/arm_math.h ****       y += (y1 * fract);
5643:Drivers/CMSIS/Include/arm_math.h **** 
5644:Drivers/CMSIS/Include/arm_math.h ****       /* convert y to 1.7(q7) format */
5645:Drivers/CMSIS/Include/arm_math.h ****       return (q7_t) (y >> 20);
5646:Drivers/CMSIS/Include/arm_math.h ****      }
5647:Drivers/CMSIS/Include/arm_math.h ****   }
5648:Drivers/CMSIS/Include/arm_math.h **** 
5649:Drivers/CMSIS/Include/arm_math.h ****   /**
5650:Drivers/CMSIS/Include/arm_math.h ****    * @} end of LinearInterpolate group
5651:Drivers/CMSIS/Include/arm_math.h ****    */
5652:Drivers/CMSIS/Include/arm_math.h **** 
5653:Drivers/CMSIS/Include/arm_math.h ****   /**
5654:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5655:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  input value in radians.
5656:Drivers/CMSIS/Include/arm_math.h ****    * @return  sin(x).
5657:Drivers/CMSIS/Include/arm_math.h ****    */
5658:Drivers/CMSIS/Include/arm_math.h ****   float32_t arm_sin_f32(
5659:Drivers/CMSIS/Include/arm_math.h ****   float32_t x);
5660:Drivers/CMSIS/Include/arm_math.h **** 
5661:Drivers/CMSIS/Include/arm_math.h **** 
5662:Drivers/CMSIS/Include/arm_math.h ****   /**
5663:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5664:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5665:Drivers/CMSIS/Include/arm_math.h ****    * @return  sin(x).
5666:Drivers/CMSIS/Include/arm_math.h ****    */
5667:Drivers/CMSIS/Include/arm_math.h ****   q31_t arm_sin_q31(
5668:Drivers/CMSIS/Include/arm_math.h ****   q31_t x);
5669:Drivers/CMSIS/Include/arm_math.h **** 
5670:Drivers/CMSIS/Include/arm_math.h **** 
5671:Drivers/CMSIS/Include/arm_math.h ****   /**
5672:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5673:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5674:Drivers/CMSIS/Include/arm_math.h ****    * @return  sin(x).
5675:Drivers/CMSIS/Include/arm_math.h ****    */
5676:Drivers/CMSIS/Include/arm_math.h ****   q15_t arm_sin_q15(
5677:Drivers/CMSIS/Include/arm_math.h ****   q15_t x);
5678:Drivers/CMSIS/Include/arm_math.h **** 
5679:Drivers/CMSIS/Include/arm_math.h **** 
5680:Drivers/CMSIS/Include/arm_math.h ****   /**
5681:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5682:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  input value in radians.
5683:Drivers/CMSIS/Include/arm_math.h ****    * @return  cos(x).
5684:Drivers/CMSIS/Include/arm_math.h ****    */
5685:Drivers/CMSIS/Include/arm_math.h ****   float32_t arm_cos_f32(
5686:Drivers/CMSIS/Include/arm_math.h ****   float32_t x);
5687:Drivers/CMSIS/Include/arm_math.h **** 
5688:Drivers/CMSIS/Include/arm_math.h **** 
5689:Drivers/CMSIS/Include/arm_math.h ****   /**
5690:Drivers/CMSIS/Include/arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5691:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5692:Drivers/CMSIS/Include/arm_math.h ****    * @return  cos(x).
5693:Drivers/CMSIS/Include/arm_math.h ****    */
5694:Drivers/CMSIS/Include/arm_math.h ****   q31_t arm_cos_q31(
ARM GAS  /tmp/ccgoDI2u.s 			page 161


5695:Drivers/CMSIS/Include/arm_math.h ****   q31_t x);
5696:Drivers/CMSIS/Include/arm_math.h **** 
5697:Drivers/CMSIS/Include/arm_math.h **** 
5698:Drivers/CMSIS/Include/arm_math.h ****   /**
5699:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5700:Drivers/CMSIS/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5701:Drivers/CMSIS/Include/arm_math.h ****    * @return  cos(x).
5702:Drivers/CMSIS/Include/arm_math.h ****    */
5703:Drivers/CMSIS/Include/arm_math.h ****   q15_t arm_cos_q15(
5704:Drivers/CMSIS/Include/arm_math.h ****   q15_t x);
5705:Drivers/CMSIS/Include/arm_math.h **** 
5706:Drivers/CMSIS/Include/arm_math.h **** 
5707:Drivers/CMSIS/Include/arm_math.h ****   /**
5708:Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupFastMath
5709:Drivers/CMSIS/Include/arm_math.h ****    */
5710:Drivers/CMSIS/Include/arm_math.h **** 
5711:Drivers/CMSIS/Include/arm_math.h **** 
5712:Drivers/CMSIS/Include/arm_math.h ****   /**
5713:Drivers/CMSIS/Include/arm_math.h ****    * @defgroup SQRT Square Root
5714:Drivers/CMSIS/Include/arm_math.h ****    *
5715:Drivers/CMSIS/Include/arm_math.h ****    * Computes the square root of a number.
5716:Drivers/CMSIS/Include/arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5717:Drivers/CMSIS/Include/arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5718:Drivers/CMSIS/Include/arm_math.h ****    * This is an iterative algorithm of the form:
5719:Drivers/CMSIS/Include/arm_math.h ****    * <pre>
5720:Drivers/CMSIS/Include/arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5721:Drivers/CMSIS/Include/arm_math.h ****    * </pre>
5722:Drivers/CMSIS/Include/arm_math.h ****    * where <code>x1</code> is the current estimate,
5723:Drivers/CMSIS/Include/arm_math.h ****    * <code>x0</code> is the previous estimate, and
5724:Drivers/CMSIS/Include/arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5725:Drivers/CMSIS/Include/arm_math.h ****    * For the square root function, the algorithm reduces to:
5726:Drivers/CMSIS/Include/arm_math.h ****    * <pre>
5727:Drivers/CMSIS/Include/arm_math.h ****    *     x0 = in/2                         [initial guess]
5728:Drivers/CMSIS/Include/arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5729:Drivers/CMSIS/Include/arm_math.h ****    * </pre>
5730:Drivers/CMSIS/Include/arm_math.h ****    */
5731:Drivers/CMSIS/Include/arm_math.h **** 
5732:Drivers/CMSIS/Include/arm_math.h **** 
5733:Drivers/CMSIS/Include/arm_math.h ****   /**
5734:Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup SQRT
5735:Drivers/CMSIS/Include/arm_math.h ****    * @{
5736:Drivers/CMSIS/Include/arm_math.h ****    */
5737:Drivers/CMSIS/Include/arm_math.h **** 
5738:Drivers/CMSIS/Include/arm_math.h ****   /**
5739:Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point square root function.
5740:Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  in    input value.
5741:Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut  square root of input value.
5742:Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5743:Drivers/CMSIS/Include/arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5744:Drivers/CMSIS/Include/arm_math.h ****    */
5745:Drivers/CMSIS/Include/arm_math.h ****   static __INLINE arm_status arm_sqrt_f32(
 948              		.loc 3 5745 30 view .LVU309
 949              	.LBB13:
5746:Drivers/CMSIS/Include/arm_math.h ****   float32_t in,
5747:Drivers/CMSIS/Include/arm_math.h ****   float32_t * pOut)
5748:Drivers/CMSIS/Include/arm_math.h ****   {
5749:Drivers/CMSIS/Include/arm_math.h ****     if(in >= 0.0f)
ARM GAS  /tmp/ccgoDI2u.s 			page 162


 950              		.loc 3 5749 5 view .LVU310
 951              		.loc 3 5749 7 is_stmt 0 view .LVU311
 952 00a4 B5EEC00A 		vcmpe.f32	s0, #0
 953 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 954 00ac 04DB     		blt	.L53
5750:Drivers/CMSIS/Include/arm_math.h ****     {
5751:Drivers/CMSIS/Include/arm_math.h **** 
5752:Drivers/CMSIS/Include/arm_math.h **** #if   (__FPU_USED == 1) && defined ( __CC_ARM   )
5753:Drivers/CMSIS/Include/arm_math.h ****       *pOut = __sqrtf(in);
5754:Drivers/CMSIS/Include/arm_math.h **** #elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
5755:Drivers/CMSIS/Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
5756:Drivers/CMSIS/Include/arm_math.h **** #elif (__FPU_USED == 1) && defined(__GNUC__)
5757:Drivers/CMSIS/Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
 955              		.loc 3 5757 7 is_stmt 1 view .LVU312
 956              		.loc 3 5757 15 is_stmt 0 view .LVU313
 957 00ae FFF7FEFF 		bl	sqrtf
 958              	.LVL76:
 959              		.loc 3 5757 13 view .LVU314
 960 00b2 84ED000A 		vstr.32	s0, [r4]
5758:Drivers/CMSIS/Include/arm_math.h **** #elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
5759:Drivers/CMSIS/Include/arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5760:Drivers/CMSIS/Include/arm_math.h **** #else
5761:Drivers/CMSIS/Include/arm_math.h ****       *pOut = sqrtf(in);
5762:Drivers/CMSIS/Include/arm_math.h **** #endif
5763:Drivers/CMSIS/Include/arm_math.h **** 
5764:Drivers/CMSIS/Include/arm_math.h ****       return (ARM_MATH_SUCCESS);
 961              		.loc 3 5764 7 is_stmt 1 view .LVU315
 962              	.LVL77:
 963              	.L43:
 964              		.loc 3 5764 7 is_stmt 0 view .LVU316
 965              	.LBE13:
 966              	.LBE12:
 703:Src/ADCsrc.c  **** 
 704:Src/ADCsrc.c  ****  #else
 705:Src/ADCsrc.c  **** 
 706:Src/ADCsrc.c  ****    /* Run the below code for Cortex-M0 */
 707:Src/ADCsrc.c  **** 
 708:Src/ADCsrc.c  ****    float32_t squareOfSum;                         /* Square of Sum */
 709:Src/ADCsrc.c  ****    float32_t var;                                 /* Temporary varaince storage */
 710:Src/ADCsrc.c  **** 
 711:Src/ADCsrc.c  ****  	if(blockSize == 1)
 712:Src/ADCsrc.c  ****  	{
 713:Src/ADCsrc.c  ****  		*pResult = 0;
 714:Src/ADCsrc.c  ****  		return;
 715:Src/ADCsrc.c  ****  	}
 716:Src/ADCsrc.c  **** 
 717:Src/ADCsrc.c  ****    /* Loop over blockSize number of values */
 718:Src/ADCsrc.c  ****    blkCnt = blockSize;
 719:Src/ADCsrc.c  **** 
 720:Src/ADCsrc.c  ****    while(blkCnt > 0u)
 721:Src/ADCsrc.c  ****    {
 722:Src/ADCsrc.c  ****      /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 723:Src/ADCsrc.c  ****      /* Compute Sum of squares of the input samples
 724:Src/ADCsrc.c  ****       * and then store the result in a temporary variable, sumOfSquares. */
 725:Src/ADCsrc.c  ****      in = *pSrc++;
 726:Src/ADCsrc.c  ****      sumOfSquares += in * in;
 727:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 163


 728:Src/ADCsrc.c  ****      /* C = (A[0] + A[1] + ... + A[blockSize-1]) */
 729:Src/ADCsrc.c  ****      /* Compute Sum of the input samples
 730:Src/ADCsrc.c  ****       * and then store the result in a temporary variable, sum. */
 731:Src/ADCsrc.c  ****      sum += in;
 732:Src/ADCsrc.c  **** 
 733:Src/ADCsrc.c  ****      /* Decrement the loop counter */
 734:Src/ADCsrc.c  ****      blkCnt--;
 735:Src/ADCsrc.c  ****    }
 736:Src/ADCsrc.c  **** 
 737:Src/ADCsrc.c  ****    /* Compute the square of sum */
 738:Src/ADCsrc.c  ****    squareOfSum = ((sum * sum) / (float32_t) blockSize);
 739:Src/ADCsrc.c  **** 
 740:Src/ADCsrc.c  ****    /* Compute the variance */
 741:Src/ADCsrc.c  ****    var = ((sumOfSquares - squareOfSum) / (float32_t) (blockSize - 1.0f));
 742:Src/ADCsrc.c  **** 
 743:Src/ADCsrc.c  ****    /* Compute standard deviation and then store the result to the destination */
 744:Src/ADCsrc.c  ****    arm_sqrt_f32(var, pResult);
 745:Src/ADCsrc.c  **** 
 746:Src/ADCsrc.c  ****  #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 747:Src/ADCsrc.c  **** 
 748:Src/ADCsrc.c  ****  }
 967              		.loc 1 748 2 view .LVU317
 968 00b6 10BD     		pop	{r4, pc}
 969              	.LVL78:
 970              	.L53:
 971              	.LBB15:
 972              	.LBB14:
5765:Drivers/CMSIS/Include/arm_math.h ****     }
5766:Drivers/CMSIS/Include/arm_math.h ****     else
5767:Drivers/CMSIS/Include/arm_math.h ****     {
5768:Drivers/CMSIS/Include/arm_math.h ****       *pOut = 0.0f;
 973              		.loc 3 5768 7 is_stmt 1 view .LVU318
 974              		.loc 3 5768 13 is_stmt 0 view .LVU319
 975 00b8 0023     		movs	r3, #0
 976              	.LVL79:
 977              		.loc 3 5768 13 view .LVU320
 978 00ba 2360     		str	r3, [r4]	@ float
5769:Drivers/CMSIS/Include/arm_math.h ****       return (ARM_MATH_ARGUMENT_ERROR);
 979              		.loc 3 5769 7 is_stmt 1 view .LVU321
 980              	.LVL80:
 981              		.loc 3 5769 14 is_stmt 0 view .LVU322
 982 00bc FBE7     		b	.L43
 983              	.L58:
 984 00be 00BF     		.align	2
 985              	.L57:
 986 00c0 00000000 		.word	0
 987              	.LBE14:
 988              	.LBE15:
 989              		.cfi_endproc
 990              	.LFE351:
 992              		.section	.text.arm_max_f32,"ax",%progbits
 993              		.align	1
 994              		.global	arm_max_f32
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccgoDI2u.s 			page 164


 1000              	arm_max_f32:
 1001              	.LVL81:
 1002              	.LFB352:
 749:Src/ADCsrc.c  **** 
 750:Src/ADCsrc.c  ****  /**
 751:Src/ADCsrc.c  ****   * @} end of STD group
 752:Src/ADCsrc.c  ****   */
 753:Src/ADCsrc.c  **** 
 754:Src/ADCsrc.c  **** 
 755:Src/ADCsrc.c  ****   /* ----------------------------------------------------------------------
 756:Src/ADCsrc.c  ****   * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 757:Src/ADCsrc.c  ****   *
 758:Src/ADCsrc.c  ****   * $Date:        19. March 2015
 759:Src/ADCsrc.c  ****   * $Revision: 	V.1.4.5
 760:Src/ADCsrc.c  ****   *
 761:Src/ADCsrc.c  ****   * Project: 	    CMSIS DSP Library
 762:Src/ADCsrc.c  ****   * Title:		arm_max_f32.c
 763:Src/ADCsrc.c  ****   *
 764:Src/ADCsrc.c  ****   * Description:	Maximum value of a floating-point vector.
 765:Src/ADCsrc.c  ****   *
 766:Src/ADCsrc.c  ****   * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
 767:Src/ADCsrc.c  ****   *
 768:Src/ADCsrc.c  ****   * Redistribution and use in source and binary forms, with or without
 769:Src/ADCsrc.c  ****   * modification, are permitted provided that the following conditions
 770:Src/ADCsrc.c  ****   * are met:
 771:Src/ADCsrc.c  ****   *   - Redistributions of source code must retain the above copyright
 772:Src/ADCsrc.c  ****   *     notice, this list of conditions and the following disclaimer.
 773:Src/ADCsrc.c  ****   *   - Redistributions in binary form must reproduce the above copyright
 774:Src/ADCsrc.c  ****   *     notice, this list of conditions and the following disclaimer in
 775:Src/ADCsrc.c  ****   *     the documentation and/or other materials provided with the
 776:Src/ADCsrc.c  ****   *     distribution.
 777:Src/ADCsrc.c  ****   *   - Neither the name of ARM LIMITED nor the names of its contributors
 778:Src/ADCsrc.c  ****   *     may be used to endorse or promote products derived from this
 779:Src/ADCsrc.c  ****   *     software without specific prior written permission.
 780:Src/ADCsrc.c  ****   *
 781:Src/ADCsrc.c  ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 782:Src/ADCsrc.c  ****   * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 783:Src/ADCsrc.c  ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 784:Src/ADCsrc.c  ****   * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 785:Src/ADCsrc.c  ****   * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 786:Src/ADCsrc.c  ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 787:Src/ADCsrc.c  ****   * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 788:Src/ADCsrc.c  ****   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 789:Src/ADCsrc.c  ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 790:Src/ADCsrc.c  ****   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 791:Src/ADCsrc.c  ****   * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 792:Src/ADCsrc.c  ****   * POSSIBILITY OF SUCH DAMAGE.
 793:Src/ADCsrc.c  ****   * ---------------------------------------------------------------------------- */
 794:Src/ADCsrc.c  **** 
 795:Src/ADCsrc.c  **** 
 796:Src/ADCsrc.c  **** 
 797:Src/ADCsrc.c  ****   /**
 798:Src/ADCsrc.c  ****    * @ingroup groupStats
 799:Src/ADCsrc.c  ****    */
 800:Src/ADCsrc.c  **** 
 801:Src/ADCsrc.c  ****   /**
 802:Src/ADCsrc.c  ****    * @defgroup Max Maximum
ARM GAS  /tmp/ccgoDI2u.s 			page 165


 803:Src/ADCsrc.c  ****    *
 804:Src/ADCsrc.c  ****    * Computes the maximum value of an array of data.
 805:Src/ADCsrc.c  ****    * The function returns both the maximum value and its position within the array.
 806:Src/ADCsrc.c  ****    * There are separate functions for floating-point, Q31, Q15, and Q7 data types.
 807:Src/ADCsrc.c  ****    */
 808:Src/ADCsrc.c  **** 
 809:Src/ADCsrc.c  ****   /**
 810:Src/ADCsrc.c  ****    * @addtogroup Max
 811:Src/ADCsrc.c  ****    * @{
 812:Src/ADCsrc.c  ****    */
 813:Src/ADCsrc.c  **** 
 814:Src/ADCsrc.c  **** 
 815:Src/ADCsrc.c  ****   /**
 816:Src/ADCsrc.c  ****    * @brief Maximum value of a floating-point vector.
 817:Src/ADCsrc.c  ****    * @param[in]       *pSrc points to the input vector
 818:Src/ADCsrc.c  ****    * @param[in]       blockSize length of the input vector
 819:Src/ADCsrc.c  ****    * @param[out]      *pResult maximum value returned here
 820:Src/ADCsrc.c  ****    * @param[out]      *pIndex index of maximum value returned here
 821:Src/ADCsrc.c  ****    * @return none.
 822:Src/ADCsrc.c  ****    */
 823:Src/ADCsrc.c  **** 
 824:Src/ADCsrc.c  ****   void arm_max_f32(
 825:Src/ADCsrc.c  ****     float32_t * pSrc,
 826:Src/ADCsrc.c  ****     uint32_t blockSize,
 827:Src/ADCsrc.c  ****     float32_t * pResult,
 828:Src/ADCsrc.c  ****     uint32_t * pIndex)
 829:Src/ADCsrc.c  ****   {
 1003              		.loc 1 829 3 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008              		.loc 1 829 3 is_stmt 0 view .LVU324
 1009 0000 F0B4     		push	{r4, r5, r6, r7}
 1010              	.LCFI7:
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 4, -16
 1013              		.cfi_offset 5, -12
 1014              		.cfi_offset 6, -8
 1015              		.cfi_offset 7, -4
 830:Src/ADCsrc.c  ****   #ifndef ARM_MATH_CM0_FAMILY
 831:Src/ADCsrc.c  **** 
 832:Src/ADCsrc.c  ****     /* Run the below code for Cortex-M4 and Cortex-M3 */
 833:Src/ADCsrc.c  ****     float32_t maxVal1, maxVal2, out;               /* Temporary variables to store the output value
 1016              		.loc 1 833 5 is_stmt 1 view .LVU325
 834:Src/ADCsrc.c  ****     uint32_t blkCnt, outIndex, count;              /* loop counter */
 1017              		.loc 1 834 5 view .LVU326
 835:Src/ADCsrc.c  **** 
 836:Src/ADCsrc.c  ****     /* Initialise the count value. */
 837:Src/ADCsrc.c  ****     count = 0u;
 1018              		.loc 1 837 5 view .LVU327
 1019              	.LVL82:
 838:Src/ADCsrc.c  ****     /* Initialise the index value to zero. */
 839:Src/ADCsrc.c  ****     outIndex = 0u;
 1020              		.loc 1 839 5 view .LVU328
 840:Src/ADCsrc.c  ****     /* Load first input value that act as reference value for comparision */
 841:Src/ADCsrc.c  ****     out = *pSrc++;
ARM GAS  /tmp/ccgoDI2u.s 			page 166


 1021              		.loc 1 841 5 view .LVU329
 1022              		.loc 1 841 9 is_stmt 0 view .LVU330
 1023 0002 F0EC017A 		vldmia.32	r0!, {s15}
 1024              	.LVL83:
 842:Src/ADCsrc.c  **** 
 843:Src/ADCsrc.c  ****     /* Loop unrolling */
 844:Src/ADCsrc.c  ****     blkCnt = (blockSize - 1u) >> 2u;
 1025              		.loc 1 844 5 is_stmt 1 view .LVU331
 1026              		.loc 1 844 25 is_stmt 0 view .LVU332
 1027 0006 4D1E     		subs	r5, r1, #1
 1028              		.loc 1 844 12 view .LVU333
 1029 0008 AE08     		lsrs	r6, r5, #2
 1030              	.LVL84:
 845:Src/ADCsrc.c  **** 
 846:Src/ADCsrc.c  ****     /* Run the below code for Cortex-M4 and Cortex-M3 */
 847:Src/ADCsrc.c  ****     while(blkCnt > 0u)
 1031              		.loc 1 847 5 is_stmt 1 view .LVU334
 837:Src/ADCsrc.c  ****     /* Initialise the index value to zero. */
 1032              		.loc 1 837 11 is_stmt 0 view .LVU335
 1033 000a 0024     		movs	r4, #0
 839:Src/ADCsrc.c  ****     /* Load first input value that act as reference value for comparision */
 1034              		.loc 1 839 14 view .LVU336
 1035 000c 2746     		mov	r7, r4
 1036              		.loc 1 847 10 view .LVU337
 1037 000e 02E0     		b	.L60
 1038              	.LVL85:
 1039              	.L67:
 848:Src/ADCsrc.c  ****     {
 849:Src/ADCsrc.c  ****       /* Initialize maxVal to the next consecutive values one by one */
 850:Src/ADCsrc.c  ****       maxVal1 = *pSrc++;
 851:Src/ADCsrc.c  **** 
 852:Src/ADCsrc.c  ****       maxVal2 = *pSrc++;
 853:Src/ADCsrc.c  **** 
 854:Src/ADCsrc.c  ****       /* compare for the maximum value */
 855:Src/ADCsrc.c  ****       if(out < maxVal1)
 856:Src/ADCsrc.c  ****       {
 857:Src/ADCsrc.c  ****         /* Update the maximum value and its index */
 858:Src/ADCsrc.c  ****         out = maxVal1;
 859:Src/ADCsrc.c  ****         outIndex = count + 1u;
 860:Src/ADCsrc.c  ****       }
 861:Src/ADCsrc.c  **** 
 862:Src/ADCsrc.c  ****       maxVal1 = *pSrc++;
 863:Src/ADCsrc.c  **** 
 864:Src/ADCsrc.c  ****       /* compare for the maximum value */
 865:Src/ADCsrc.c  ****       if(out < maxVal2)
 866:Src/ADCsrc.c  ****       {
 867:Src/ADCsrc.c  ****         /* Update the maximum value and its index */
 868:Src/ADCsrc.c  ****         out = maxVal2;
 869:Src/ADCsrc.c  ****         outIndex = count + 2u;
 870:Src/ADCsrc.c  ****       }
 871:Src/ADCsrc.c  **** 
 872:Src/ADCsrc.c  ****       maxVal2 = *pSrc++;
 873:Src/ADCsrc.c  **** 
 874:Src/ADCsrc.c  ****       /* compare for the maximum value */
 875:Src/ADCsrc.c  ****       if(out < maxVal1)
 876:Src/ADCsrc.c  ****       {
 877:Src/ADCsrc.c  ****         /* Update the maximum value and its index */
ARM GAS  /tmp/ccgoDI2u.s 			page 167


 878:Src/ADCsrc.c  ****         out = maxVal1;
 879:Src/ADCsrc.c  ****         outIndex = count + 3u;
 880:Src/ADCsrc.c  ****       }
 881:Src/ADCsrc.c  **** 
 882:Src/ADCsrc.c  ****       /* compare for the maximum value */
 883:Src/ADCsrc.c  ****       if(out < maxVal2)
 884:Src/ADCsrc.c  ****       {
 885:Src/ADCsrc.c  ****         /* Update the maximum value and its index */
 886:Src/ADCsrc.c  ****         out = maxVal2;
 887:Src/ADCsrc.c  ****         outIndex = count + 4u;
 888:Src/ADCsrc.c  ****       }
 889:Src/ADCsrc.c  **** 
 890:Src/ADCsrc.c  ****       count += 4u;
 1040              		.loc 1 890 7 is_stmt 1 view .LVU338
 1041              		.loc 1 890 13 is_stmt 0 view .LVU339
 1042 0010 0434     		adds	r4, r4, #4
 1043              	.LVL86:
 891:Src/ADCsrc.c  **** 
 892:Src/ADCsrc.c  ****       /* Decrement the loop counter */
 893:Src/ADCsrc.c  ****       blkCnt--;
 1044              		.loc 1 893 7 is_stmt 1 view .LVU340
 1045              		.loc 1 893 13 is_stmt 0 view .LVU341
 1046 0012 013E     		subs	r6, r6, #1
 1047              	.LVL87:
 872:Src/ADCsrc.c  **** 
 1048              		.loc 1 872 22 view .LVU342
 1049 0014 6046     		mov	r0, ip
 1050              	.LVL88:
 1051              	.L60:
 847:Src/ADCsrc.c  ****     {
 1052              		.loc 1 847 10 is_stmt 1 view .LVU343
 1053 0016 56B3     		cbz	r6, .L80
 850:Src/ADCsrc.c  **** 
 1054              		.loc 1 850 7 view .LVU344
 1055              	.LVL89:
 850:Src/ADCsrc.c  **** 
 1056              		.loc 1 850 15 is_stmt 0 view .LVU345
 1057 0018 D0ED006A 		vldr.32	s13, [r0]
 1058              	.LVL90:
 852:Src/ADCsrc.c  **** 
 1059              		.loc 1 852 7 is_stmt 1 view .LVU346
 852:Src/ADCsrc.c  **** 
 1060              		.loc 1 852 15 is_stmt 0 view .LVU347
 1061 001c 90ED017A 		vldr.32	s14, [r0, #4]
 1062              	.LVL91:
 855:Src/ADCsrc.c  ****       {
 1063              		.loc 1 855 7 is_stmt 1 view .LVU348
 855:Src/ADCsrc.c  ****       {
 1064              		.loc 1 855 9 is_stmt 0 view .LVU349
 1065 0020 F4EEE67A 		vcmpe.f32	s15, s13
 1066 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1067 0028 02D5     		bpl	.L61
 858:Src/ADCsrc.c  ****         outIndex = count + 1u;
 1068              		.loc 1 858 9 is_stmt 1 view .LVU350
 1069              	.LVL92:
 859:Src/ADCsrc.c  ****       }
 1070              		.loc 1 859 9 view .LVU351
ARM GAS  /tmp/ccgoDI2u.s 			page 168


 859:Src/ADCsrc.c  ****       }
 1071              		.loc 1 859 18 is_stmt 0 view .LVU352
 1072 002a 671C     		adds	r7, r4, #1
 1073              	.LVL93:
 858:Src/ADCsrc.c  ****         outIndex = count + 1u;
 1074              		.loc 1 858 13 view .LVU353
 1075 002c F0EE667A 		vmov.f32	s15, s13
 1076              	.LVL94:
 1077              	.L61:
 862:Src/ADCsrc.c  **** 
 1078              		.loc 1 862 7 is_stmt 1 view .LVU354
 862:Src/ADCsrc.c  **** 
 1079              		.loc 1 862 15 is_stmt 0 view .LVU355
 1080 0030 D0ED026A 		vldr.32	s13, [r0, #8]
 1081              	.LVL95:
 865:Src/ADCsrc.c  ****       {
 1082              		.loc 1 865 7 is_stmt 1 view .LVU356
 865:Src/ADCsrc.c  ****       {
 1083              		.loc 1 865 9 is_stmt 0 view .LVU357
 1084 0034 F4EEC77A 		vcmpe.f32	s15, s14
 1085 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1086 003c 02D5     		bpl	.L63
 868:Src/ADCsrc.c  ****         outIndex = count + 2u;
 1087              		.loc 1 868 9 is_stmt 1 view .LVU358
 1088              	.LVL96:
 869:Src/ADCsrc.c  ****       }
 1089              		.loc 1 869 9 view .LVU359
 869:Src/ADCsrc.c  ****       }
 1090              		.loc 1 869 18 is_stmt 0 view .LVU360
 1091 003e A71C     		adds	r7, r4, #2
 1092              	.LVL97:
 868:Src/ADCsrc.c  ****         outIndex = count + 2u;
 1093              		.loc 1 868 13 view .LVU361
 1094 0040 F0EE477A 		vmov.f32	s15, s14
 1095              	.LVL98:
 1096              	.L63:
 872:Src/ADCsrc.c  **** 
 1097              		.loc 1 872 7 is_stmt 1 view .LVU362
 872:Src/ADCsrc.c  **** 
 1098              		.loc 1 872 22 is_stmt 0 view .LVU363
 1099 0044 00F1100C 		add	ip, r0, #16
 1100              	.LVL99:
 872:Src/ADCsrc.c  **** 
 1101              		.loc 1 872 15 view .LVU364
 1102 0048 90ED037A 		vldr.32	s14, [r0, #12]
 1103              	.LVL100:
 875:Src/ADCsrc.c  ****       {
 1104              		.loc 1 875 7 is_stmt 1 view .LVU365
 875:Src/ADCsrc.c  ****       {
 1105              		.loc 1 875 9 is_stmt 0 view .LVU366
 1106 004c F4EEE67A 		vcmpe.f32	s15, s13
 1107 0050 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1108 0054 02D5     		bpl	.L65
 878:Src/ADCsrc.c  ****         outIndex = count + 3u;
 1109              		.loc 1 878 9 is_stmt 1 view .LVU367
 1110              	.LVL101:
 879:Src/ADCsrc.c  ****       }
ARM GAS  /tmp/ccgoDI2u.s 			page 169


 1111              		.loc 1 879 9 view .LVU368
 879:Src/ADCsrc.c  ****       }
 1112              		.loc 1 879 18 is_stmt 0 view .LVU369
 1113 0056 E71C     		adds	r7, r4, #3
 1114              	.LVL102:
 878:Src/ADCsrc.c  ****         outIndex = count + 3u;
 1115              		.loc 1 878 13 view .LVU370
 1116 0058 F0EE667A 		vmov.f32	s15, s13
 1117              	.LVL103:
 1118              	.L65:
 883:Src/ADCsrc.c  ****       {
 1119              		.loc 1 883 7 is_stmt 1 view .LVU371
 883:Src/ADCsrc.c  ****       {
 1120              		.loc 1 883 9 is_stmt 0 view .LVU372
 1121 005c F4EEC77A 		vcmpe.f32	s15, s14
 1122 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1123 0064 D4D5     		bpl	.L67
 886:Src/ADCsrc.c  ****         outIndex = count + 4u;
 1124              		.loc 1 886 9 is_stmt 1 view .LVU373
 1125              	.LVL104:
 887:Src/ADCsrc.c  ****       }
 1126              		.loc 1 887 9 view .LVU374
 887:Src/ADCsrc.c  ****       }
 1127              		.loc 1 887 18 is_stmt 0 view .LVU375
 1128 0066 271D     		adds	r7, r4, #4
 1129              	.LVL105:
 886:Src/ADCsrc.c  ****         outIndex = count + 4u;
 1130              		.loc 1 886 13 view .LVU376
 1131 0068 F0EE477A 		vmov.f32	s15, s14
 1132 006c D0E7     		b	.L67
 1133              	.LVL106:
 1134              	.L80:
 894:Src/ADCsrc.c  ****     }
 895:Src/ADCsrc.c  **** 
 896:Src/ADCsrc.c  ****     /* if (blockSize - 1u) is not multiple of 4 */
 897:Src/ADCsrc.c  ****     blkCnt = (blockSize - 1u) % 4u;
 1135              		.loc 1 897 5 is_stmt 1 view .LVU377
 1136              		.loc 1 897 12 is_stmt 0 view .LVU378
 1137 006e 05F00305 		and	r5, r5, #3
 1138              	.LVL107:
 898:Src/ADCsrc.c  **** 
 899:Src/ADCsrc.c  ****   #else
 900:Src/ADCsrc.c  **** 
 901:Src/ADCsrc.c  ****     /* Run the below code for Cortex-M0 */
 902:Src/ADCsrc.c  ****     float32_t maxVal1, out;                        /* Temporary variables to store the output value
 903:Src/ADCsrc.c  ****     uint32_t blkCnt, outIndex;                     /* loop counter */
 904:Src/ADCsrc.c  **** 
 905:Src/ADCsrc.c  ****     /* Initialise the index value to zero. */
 906:Src/ADCsrc.c  ****     outIndex = 0u;
 907:Src/ADCsrc.c  ****     /* Load first input value that act as reference value for comparision */
 908:Src/ADCsrc.c  ****     out = *pSrc++;
 909:Src/ADCsrc.c  **** 
 910:Src/ADCsrc.c  ****     blkCnt = (blockSize - 1u);
 911:Src/ADCsrc.c  **** 
 912:Src/ADCsrc.c  ****   #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 913:Src/ADCsrc.c  **** 
 914:Src/ADCsrc.c  ****     while(blkCnt > 0u)
ARM GAS  /tmp/ccgoDI2u.s 			page 170


 1139              		.loc 1 914 5 is_stmt 1 view .LVU379
 1140              		.loc 1 914 10 is_stmt 0 view .LVU380
 1141 0072 00E0     		b	.L70
 1142              	.LVL108:
 1143              	.L71:
 915:Src/ADCsrc.c  ****     {
 916:Src/ADCsrc.c  ****       /* Initialize maxVal to the next consecutive values one by one */
 917:Src/ADCsrc.c  ****       maxVal1 = *pSrc++;
 918:Src/ADCsrc.c  **** 
 919:Src/ADCsrc.c  ****       /* compare for the maximum value */
 920:Src/ADCsrc.c  ****       if(out < maxVal1)
 921:Src/ADCsrc.c  ****       {
 922:Src/ADCsrc.c  ****         /* Update the maximum value and it's index */
 923:Src/ADCsrc.c  ****         out = maxVal1;
 924:Src/ADCsrc.c  ****         outIndex = blockSize - blkCnt;
 925:Src/ADCsrc.c  ****       }
 926:Src/ADCsrc.c  **** 
 927:Src/ADCsrc.c  **** 
 928:Src/ADCsrc.c  ****       /* Decrement the loop counter */
 929:Src/ADCsrc.c  ****       blkCnt--;
 1144              		.loc 1 929 7 is_stmt 1 view .LVU381
 1145              		.loc 1 929 13 is_stmt 0 view .LVU382
 1146 0074 013D     		subs	r5, r5, #1
 1147              	.LVL109:
 1148              	.L70:
 914:Src/ADCsrc.c  ****     {
 1149              		.loc 1 914 10 is_stmt 1 view .LVU383
 1150 0076 55B1     		cbz	r5, .L81
 917:Src/ADCsrc.c  **** 
 1151              		.loc 1 917 7 view .LVU384
 1152              	.LVL110:
 917:Src/ADCsrc.c  **** 
 1153              		.loc 1 917 15 is_stmt 0 view .LVU385
 1154 0078 B0EC017A 		vldmia.32	r0!, {s14}
 1155              	.LVL111:
 920:Src/ADCsrc.c  ****       {
 1156              		.loc 1 920 7 is_stmt 1 view .LVU386
 920:Src/ADCsrc.c  ****       {
 1157              		.loc 1 920 9 is_stmt 0 view .LVU387
 1158 007c F4EEC77A 		vcmpe.f32	s15, s14
 1159 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1160 0084 F6D5     		bpl	.L71
 923:Src/ADCsrc.c  ****         outIndex = blockSize - blkCnt;
 1161              		.loc 1 923 9 is_stmt 1 view .LVU388
 1162              	.LVL112:
 924:Src/ADCsrc.c  ****       }
 1163              		.loc 1 924 9 view .LVU389
 924:Src/ADCsrc.c  ****       }
 1164              		.loc 1 924 18 is_stmt 0 view .LVU390
 1165 0086 4F1B     		subs	r7, r1, r5
 1166              	.LVL113:
 923:Src/ADCsrc.c  ****         outIndex = blockSize - blkCnt;
 1167              		.loc 1 923 13 view .LVU391
 1168 0088 F0EE477A 		vmov.f32	s15, s14
 1169 008c F2E7     		b	.L71
 1170              	.LVL114:
 1171              	.L81:
ARM GAS  /tmp/ccgoDI2u.s 			page 171


 930:Src/ADCsrc.c  **** 
 931:Src/ADCsrc.c  ****     }
 932:Src/ADCsrc.c  **** 
 933:Src/ADCsrc.c  ****     /* Store the maximum value and it's index into destination pointers */
 934:Src/ADCsrc.c  ****     *pResult = out;
 1172              		.loc 1 934 5 is_stmt 1 view .LVU392
 1173              		.loc 1 934 14 is_stmt 0 view .LVU393
 1174 008e C2ED007A 		vstr.32	s15, [r2]
 935:Src/ADCsrc.c  ****     *pIndex = outIndex;
 1175              		.loc 1 935 5 is_stmt 1 view .LVU394
 1176              		.loc 1 935 13 is_stmt 0 view .LVU395
 1177 0092 1F60     		str	r7, [r3]
 936:Src/ADCsrc.c  ****   }
 1178              		.loc 1 936 3 view .LVU396
 1179 0094 F0BC     		pop	{r4, r5, r6, r7}
 1180              	.LCFI8:
 1181              		.cfi_restore 7
 1182              		.cfi_restore 6
 1183              		.cfi_restore 5
 1184              		.cfi_restore 4
 1185              		.cfi_def_cfa_offset 0
 1186              	.LVL115:
 1187              		.loc 1 936 3 view .LVU397
 1188 0096 7047     		bx	lr
 1189              		.cfi_endproc
 1190              	.LFE352:
 1192              		.section	.text.arm_correlate_f32,"ax",%progbits
 1193              		.align	1
 1194              		.global	arm_correlate_f32
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu fpv4-sp-d16
 1200              	arm_correlate_f32:
 1201              	.LVL116:
 1202              	.LFB353:
 937:Src/ADCsrc.c  **** 
 938:Src/ADCsrc.c  ****   /**
 939:Src/ADCsrc.c  ****    * @} end of Max group
 940:Src/ADCsrc.c  ****    */
 941:Src/ADCsrc.c  **** 
 942:Src/ADCsrc.c  **** 
 943:Src/ADCsrc.c  **** 
 944:Src/ADCsrc.c  **** 
 945:Src/ADCsrc.c  ****    /* ----------------------------------------------------------------------------
 946:Src/ADCsrc.c  ****    * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 947:Src/ADCsrc.c  ****    *
 948:Src/ADCsrc.c  ****    * $Date:        19. March 2015
 949:Src/ADCsrc.c  ****    * $Revision: 	V.1.4.5
 950:Src/ADCsrc.c  ****    *
 951:Src/ADCsrc.c  ****    * Project: 	    CMSIS DSP Library
 952:Src/ADCsrc.c  ****    * Title:		arm_correlate_f32.c
 953:Src/ADCsrc.c  ****    *
 954:Src/ADCsrc.c  ****    * Description:	 Correlation of floating-point sequences.
 955:Src/ADCsrc.c  ****    *
 956:Src/ADCsrc.c  ****    * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
 957:Src/ADCsrc.c  ****    *
ARM GAS  /tmp/ccgoDI2u.s 			page 172


 958:Src/ADCsrc.c  ****    * Redistribution and use in source and binary forms, with or without
 959:Src/ADCsrc.c  ****    * modification, are permitted provided that the following conditions
 960:Src/ADCsrc.c  ****    * are met:
 961:Src/ADCsrc.c  ****    *   - Redistributions of source code must retain the above copyright
 962:Src/ADCsrc.c  ****    *     notice, this list of conditions and the following disclaimer.
 963:Src/ADCsrc.c  ****    *   - Redistributions in binary form must reproduce the above copyright
 964:Src/ADCsrc.c  ****    *     notice, this list of conditions and the following disclaimer in
 965:Src/ADCsrc.c  ****    *     the documentation and/or other materials provided with the
 966:Src/ADCsrc.c  ****    *     distribution.
 967:Src/ADCsrc.c  ****    *   - Neither the name of ARM LIMITED nor the names of its contributors
 968:Src/ADCsrc.c  ****    *     may be used to endorse or promote products derived from this
 969:Src/ADCsrc.c  ****    *     software without specific prior written permission.
 970:Src/ADCsrc.c  ****    *
 971:Src/ADCsrc.c  ****    * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 972:Src/ADCsrc.c  ****    * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 973:Src/ADCsrc.c  ****    * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 974:Src/ADCsrc.c  ****    * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 975:Src/ADCsrc.c  ****    * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 976:Src/ADCsrc.c  ****    * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 977:Src/ADCsrc.c  ****    * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 978:Src/ADCsrc.c  ****    * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 979:Src/ADCsrc.c  ****    * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 980:Src/ADCsrc.c  ****    * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 981:Src/ADCsrc.c  ****    * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 982:Src/ADCsrc.c  ****    * POSSIBILITY OF SUCH DAMAGE.
 983:Src/ADCsrc.c  ****    * -------------------------------------------------------------------------- */
 984:Src/ADCsrc.c  **** 
 985:Src/ADCsrc.c  **** 
 986:Src/ADCsrc.c  **** 
 987:Src/ADCsrc.c  ****    /**
 988:Src/ADCsrc.c  ****     * @ingroup groupFilters
 989:Src/ADCsrc.c  ****     */
 990:Src/ADCsrc.c  **** 
 991:Src/ADCsrc.c  ****    /**
 992:Src/ADCsrc.c  ****     * @defgroup Corr Correlation
 993:Src/ADCsrc.c  ****     *
 994:Src/ADCsrc.c  ****     * Correlation is a mathematical operation that is similar to convolution.
 995:Src/ADCsrc.c  ****     * As with convolution, correlation uses two signals to produce a third signal.
 996:Src/ADCsrc.c  ****     * The underlying algorithms in correlation and convolution are identical except that one of the
 997:Src/ADCsrc.c  ****     * Correlation is commonly used to measure the similarity between two signals.
 998:Src/ADCsrc.c  ****     * It has applications in pattern recognition, cryptanalysis, and searching.
 999:Src/ADCsrc.c  ****     * The CMSIS library provides correlation functions for Q7, Q15, Q31 and floating-point data typ
1000:Src/ADCsrc.c  ****     * Fast versions of the Q15 and Q31 functions are also provided.
1001:Src/ADCsrc.c  ****     *
1002:Src/ADCsrc.c  ****     * \par Algorithm
1003:Src/ADCsrc.c  ****     * Let <code>a[n]</code> and <code>b[n]</code> be sequences of length <code>srcALen</code> and <
1004:Src/ADCsrc.c  ****     * The convolution of the two signals is denoted by
1005:Src/ADCsrc.c  ****     * <pre>
1006:Src/ADCsrc.c  ****     *                   c[n] = a[n] * b[n]
1007:Src/ADCsrc.c  ****     * </pre>
1008:Src/ADCsrc.c  ****     * In correlation, one of the signals is flipped in time
1009:Src/ADCsrc.c  ****     * <pre>
1010:Src/ADCsrc.c  ****     *                   c[n] = a[n] * b[-n]
1011:Src/ADCsrc.c  ****     * </pre>
1012:Src/ADCsrc.c  ****     *
1013:Src/ADCsrc.c  ****     * \par
1014:Src/ADCsrc.c  ****     * and this is mathematically defined as
ARM GAS  /tmp/ccgoDI2u.s 			page 173


1015:Src/ADCsrc.c  ****     * \image html CorrelateEquation.gif
1016:Src/ADCsrc.c  ****     * \par
1017:Src/ADCsrc.c  ****     * The <code>pSrcA</code> points to the first input vector of length <code>srcALen</code> and <c
1018:Src/ADCsrc.c  ****     * The result <code>c[n]</code> is of length <code>2 * max(srcALen, srcBLen) - 1</code> and is d
1019:Src/ADCsrc.c  ****     * The output result is written to <code>pDst</code> and the calling function must allocate <cod
1020:Src/ADCsrc.c  ****     *
1021:Src/ADCsrc.c  ****     * <b>Note</b>
1022:Src/ADCsrc.c  ****     * \par
1023:Src/ADCsrc.c  ****     * The <code>pDst</code> should be initialized to all zeros before being used.
1024:Src/ADCsrc.c  ****     *
1025:Src/ADCsrc.c  ****     * <b>Fixed-Point Behavior</b>
1026:Src/ADCsrc.c  ****     * \par
1027:Src/ADCsrc.c  ****     * Correlation requires summing up a large number of intermediate products.
1028:Src/ADCsrc.c  ****     * As such, the Q7, Q15, and Q31 functions run a risk of overflow and saturation.
1029:Src/ADCsrc.c  ****     * Refer to the function specific documentation below for further details of the particular algo
1030:Src/ADCsrc.c  ****     *
1031:Src/ADCsrc.c  ****     *
1032:Src/ADCsrc.c  ****     * <b>Fast Versions</b>
1033:Src/ADCsrc.c  ****     *
1034:Src/ADCsrc.c  ****     * \par
1035:Src/ADCsrc.c  ****     * Fast versions are supported for Q31 and Q15.  Cycles for Fast versions are less compared to Q
1036:Src/ADCsrc.c  ****     * the input signals should be scaled down to avoid intermediate overflows.
1037:Src/ADCsrc.c  ****     *
1038:Src/ADCsrc.c  ****     *
1039:Src/ADCsrc.c  ****     * <b>Opt Versions</b>
1040:Src/ADCsrc.c  ****     *
1041:Src/ADCsrc.c  ****     * \par
1042:Src/ADCsrc.c  ****     * Opt versions are supported for Q15 and Q7.  Design uses internal scratch buffer for getting g
1043:Src/ADCsrc.c  ****     * These versions are optimised in cycles and consumes more memory(Scratch memory) compared to Q
1044:Src/ADCsrc.c  ****     */
1045:Src/ADCsrc.c  **** 
1046:Src/ADCsrc.c  ****    /**
1047:Src/ADCsrc.c  ****     * @addtogroup Corr
1048:Src/ADCsrc.c  ****     * @{
1049:Src/ADCsrc.c  ****     */
1050:Src/ADCsrc.c  ****    /**
1051:Src/ADCsrc.c  ****     * @brief Correlation of floating-point sequences.
1052:Src/ADCsrc.c  ****     * @param[in]  *pSrcA points to the first input sequence.
1053:Src/ADCsrc.c  ****     * @param[in]  srcALen length of the first input sequence.
1054:Src/ADCsrc.c  ****     * @param[in]  *pSrcB points to the second input sequence.
1055:Src/ADCsrc.c  ****     * @param[in]  srcBLen length of the second input sequence.
1056:Src/ADCsrc.c  ****     * @param[out] *pDst points to the location where the output result is written.  Length 2 * max(
1057:Src/ADCsrc.c  ****     * @return none.
1058:Src/ADCsrc.c  ****     */
1059:Src/ADCsrc.c  **** 
1060:Src/ADCsrc.c  ****    void arm_correlate_f32(
1061:Src/ADCsrc.c  ****      float32_t * pSrcA,
1062:Src/ADCsrc.c  ****      uint32_t srcALen,
1063:Src/ADCsrc.c  ****      float32_t * pSrcB,
1064:Src/ADCsrc.c  ****      uint32_t srcBLen,
1065:Src/ADCsrc.c  ****      float32_t * pDst)
1066:Src/ADCsrc.c  ****    {
 1203              		.loc 1 1066 4 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 4, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		.loc 1 1066 4 is_stmt 0 view .LVU399
ARM GAS  /tmp/ccgoDI2u.s 			page 174


 1208 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1209              	.LCFI9:
 1210              		.cfi_def_cfa_offset 36
 1211              		.cfi_offset 4, -36
 1212              		.cfi_offset 5, -32
 1213              		.cfi_offset 6, -28
 1214              		.cfi_offset 7, -24
 1215              		.cfi_offset 8, -20
 1216              		.cfi_offset 9, -16
 1217              		.cfi_offset 10, -12
 1218              		.cfi_offset 11, -8
 1219              		.cfi_offset 14, -4
 1220 0004 9346     		mov	fp, r2
 1221 0006 9C46     		mov	ip, r3
1067:Src/ADCsrc.c  **** 
1068:Src/ADCsrc.c  **** 
1069:Src/ADCsrc.c  ****    #ifndef ARM_MATH_CM0_FAMILY
1070:Src/ADCsrc.c  **** 
1071:Src/ADCsrc.c  ****      /* Run the below code for Cortex-M4 and Cortex-M3 */
1072:Src/ADCsrc.c  **** 
1073:Src/ADCsrc.c  ****      float32_t *pIn1;                               /* inputA pointer */
 1222              		.loc 1 1073 6 is_stmt 1 view .LVU400
1074:Src/ADCsrc.c  ****      float32_t *pIn2;                               /* inputB pointer */
 1223              		.loc 1 1074 6 view .LVU401
1075:Src/ADCsrc.c  ****      float32_t *pOut = pDst;                        /* output pointer */
 1224              		.loc 1 1075 6 view .LVU402
 1225              	.LVL117:
1076:Src/ADCsrc.c  ****      float32_t *px;                                 /* Intermediate inputA pointer */
 1226              		.loc 1 1076 6 view .LVU403
1077:Src/ADCsrc.c  ****      float32_t *py;                                 /* Intermediate inputB pointer */
 1227              		.loc 1 1077 6 view .LVU404
1078:Src/ADCsrc.c  ****      float32_t *pSrc1;                              /* Intermediate pointers */
 1228              		.loc 1 1078 6 view .LVU405
1079:Src/ADCsrc.c  ****      float32_t sum, acc0, acc1, acc2, acc3;         /* Accumulators */
 1229              		.loc 1 1079 6 view .LVU406
1080:Src/ADCsrc.c  ****      float32_t x0, x1, x2, x3, c0;                  /* temporary variables for holding input and co
 1230              		.loc 1 1080 6 view .LVU407
1081:Src/ADCsrc.c  ****      uint32_t j, k = 0u, count, blkCnt, outBlockSize, blockSize1, blockSize2, blockSize3;  /* loop 
 1231              		.loc 1 1081 6 view .LVU408
1082:Src/ADCsrc.c  ****      int32_t inc = 1;                               /* Destination address modifier */
 1232              		.loc 1 1082 6 view .LVU409
1083:Src/ADCsrc.c  **** 
1084:Src/ADCsrc.c  **** 
1085:Src/ADCsrc.c  ****      /* The algorithm implementation is based on the lengths of the inputs. */
1086:Src/ADCsrc.c  ****      /* srcB is always made to slide across srcA. */
1087:Src/ADCsrc.c  ****      /* So srcBLen is always considered as shorter or equal to srcALen */
1088:Src/ADCsrc.c  ****      /* But CORR(x, y) is reverse of CORR(y, x) */
1089:Src/ADCsrc.c  ****      /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer
1090:Src/ADCsrc.c  ****      /* and the destination pointer modifier, inc is set to -1 */
1091:Src/ADCsrc.c  ****      /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length
1092:Src/ADCsrc.c  ****      /* But to improve the performance,
1093:Src/ADCsrc.c  ****       * we assume zeroes in the output instead of zero padding either of the the inputs*/
1094:Src/ADCsrc.c  ****      /* If srcALen > srcBLen,
1095:Src/ADCsrc.c  ****       * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
1096:Src/ADCsrc.c  ****      /* If srcALen < srcBLen,
1097:Src/ADCsrc.c  ****       * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
1098:Src/ADCsrc.c  ****      if(srcALen >= srcBLen)
ARM GAS  /tmp/ccgoDI2u.s 			page 175


 1233              		.loc 1 1098 6 view .LVU410
 1234              		.loc 1 1098 8 is_stmt 0 view .LVU411
 1235 0008 9942     		cmp	r1, r3
 1236 000a 19D3     		bcc	.L83
1099:Src/ADCsrc.c  ****      {
1100:Src/ADCsrc.c  ****        /* Initialization of inputA pointer */
1101:Src/ADCsrc.c  ****        pIn1 = pSrcA;
 1237              		.loc 1 1101 8 is_stmt 1 view .LVU412
 1238              	.LVL118:
1102:Src/ADCsrc.c  **** 
1103:Src/ADCsrc.c  ****        /* Initialization of inputB pointer */
1104:Src/ADCsrc.c  ****        pIn2 = pSrcB;
 1239              		.loc 1 1104 8 view .LVU413
1105:Src/ADCsrc.c  **** 
1106:Src/ADCsrc.c  ****        /* Number of output samples is calculated */
1107:Src/ADCsrc.c  ****        outBlockSize = (2u * srcALen) - 1u;
 1240              		.loc 1 1107 8 view .LVU414
 1241              		.loc 1 1107 27 is_stmt 0 view .LVU415
 1242 000c 4D00     		lsls	r5, r1, #1
 1243              		.loc 1 1107 21 view .LVU416
 1244 000e 013D     		subs	r5, r5, #1
 1245              	.LVL119:
1108:Src/ADCsrc.c  **** 
1109:Src/ADCsrc.c  ****        /* When srcALen > srcBLen, zero padding has to be done to srcB
1110:Src/ADCsrc.c  ****         * to make their lengths equal.
1111:Src/ADCsrc.c  ****         * Instead, (outBlockSize - (srcALen + srcBLen - 1))
1112:Src/ADCsrc.c  ****         * number of output samples are made zero */
1113:Src/ADCsrc.c  ****        j = outBlockSize - (srcALen + (srcBLen - 1u));
 1246              		.loc 1 1113 8 is_stmt 1 view .LVU417
 1247              		.loc 1 1113 36 is_stmt 0 view .LVU418
 1248 0010 CB18     		adds	r3, r1, r3
 1249              	.LVL120:
 1250              		.loc 1 1113 25 view .LVU419
 1251 0012 ED1A     		subs	r5, r5, r3
 1252              	.LVL121:
 1253              		.loc 1 1113 10 view .LVU420
 1254 0014 0135     		adds	r5, r5, #1
 1255              	.LVL122:
1114:Src/ADCsrc.c  **** 
1115:Src/ADCsrc.c  ****        /* Updating the pointer position to non zero value */
1116:Src/ADCsrc.c  ****        pOut += j;
 1256              		.loc 1 1116 8 is_stmt 1 view .LVU421
 1257              		.loc 1 1116 13 is_stmt 0 view .LVU422
 1258 0016 099B     		ldr	r3, [sp, #36]
 1259 0018 03EB8505 		add	r5, r3, r5, lsl #2
 1260              	.LVL123:
1082:Src/ADCsrc.c  **** 
 1261              		.loc 1 1082 14 view .LVU423
 1262 001c 0126     		movs	r6, #1
 1263              	.LVL124:
 1264              	.L84:
1117:Src/ADCsrc.c  **** 
1118:Src/ADCsrc.c  ****        //while(j > 0u)
1119:Src/ADCsrc.c  ****        //{
1120:Src/ADCsrc.c  ****        //  /* Zero is stored in the destination buffer */
1121:Src/ADCsrc.c  ****        //  *pOut++ = 0.0f;
1122:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 176


1123:Src/ADCsrc.c  ****        //  /* Decrement the loop counter */
1124:Src/ADCsrc.c  ****        //  j--;
1125:Src/ADCsrc.c  ****        //}
1126:Src/ADCsrc.c  **** 
1127:Src/ADCsrc.c  ****      }
1128:Src/ADCsrc.c  ****      else
1129:Src/ADCsrc.c  ****      {
1130:Src/ADCsrc.c  ****        /* Initialization of inputA pointer */
1131:Src/ADCsrc.c  ****        pIn1 = pSrcB;
1132:Src/ADCsrc.c  **** 
1133:Src/ADCsrc.c  ****        /* Initialization of inputB pointer */
1134:Src/ADCsrc.c  ****        pIn2 = pSrcA;
1135:Src/ADCsrc.c  **** 
1136:Src/ADCsrc.c  ****        /* srcBLen is always considered as shorter or equal to srcALen */
1137:Src/ADCsrc.c  ****        j = srcBLen;
1138:Src/ADCsrc.c  ****        srcBLen = srcALen;
1139:Src/ADCsrc.c  ****        srcALen = j;
1140:Src/ADCsrc.c  **** 
1141:Src/ADCsrc.c  ****        /* CORR(x, y) = Reverse order(CORR(y, x)) */
1142:Src/ADCsrc.c  ****        /* Hence set the destination pointer to point to the last output sample */
1143:Src/ADCsrc.c  ****        pOut = pDst + ((srcALen + srcBLen) - 2u);
1144:Src/ADCsrc.c  **** 
1145:Src/ADCsrc.c  ****        /* Destination address modifier is set to -1 */
1146:Src/ADCsrc.c  ****        inc = -1;
1147:Src/ADCsrc.c  **** 
1148:Src/ADCsrc.c  ****      }
1149:Src/ADCsrc.c  **** 
1150:Src/ADCsrc.c  ****      /* The function is internally
1151:Src/ADCsrc.c  ****       * divided into three parts according to the number of multiplications that has to be
1152:Src/ADCsrc.c  ****       * taken place between inputA samples and inputB samples. In the first part of the
1153:Src/ADCsrc.c  ****       * algorithm, the multiplications increase by one for every iteration.
1154:Src/ADCsrc.c  ****       * In the second part of the algorithm, srcBLen number of multiplications are done.
1155:Src/ADCsrc.c  ****       * In the third part of the algorithm, the multiplications decrease by one
1156:Src/ADCsrc.c  ****       * for every iteration.*/
1157:Src/ADCsrc.c  ****      /* The algorithm is implemented in three stages.
1158:Src/ADCsrc.c  ****       * The loop counters of each stage is initiated here. */
1159:Src/ADCsrc.c  ****      blockSize1 = srcBLen - 1u;
 1265              		.loc 1 1159 6 is_stmt 1 view .LVU424
 1266              		.loc 1 1159 17 is_stmt 0 view .LVU425
 1267 001e 0CF1FF37 		add	r7, ip, #-1
 1268              	.LVL125:
1160:Src/ADCsrc.c  ****      blockSize2 = srcALen - (srcBLen - 1u);
 1269              		.loc 1 1160 6 is_stmt 1 view .LVU426
 1270              		.loc 1 1160 27 is_stmt 0 view .LVU427
 1271 0022 A1EB0C01 		sub	r1, r1, ip
 1272              	.LVL126:
 1273              		.loc 1 1160 17 view .LVU428
 1274 0026 01F1010E 		add	lr, r1, #1
 1275              	.LVL127:
1161:Src/ADCsrc.c  ****      blockSize3 = blockSize1;
 1276              		.loc 1 1161 6 is_stmt 1 view .LVU429
1162:Src/ADCsrc.c  **** 
1163:Src/ADCsrc.c  ****      /* --------------------------
1164:Src/ADCsrc.c  ****       * Initializations of stage1
1165:Src/ADCsrc.c  ****       * -------------------------*/
1166:Src/ADCsrc.c  **** 
1167:Src/ADCsrc.c  ****      /* sum = x[0] * y[srcBlen - 1]
ARM GAS  /tmp/ccgoDI2u.s 			page 177


1168:Src/ADCsrc.c  ****       * sum = x[0] * y[srcBlen-2] + x[1] * y[srcBlen - 1]
1169:Src/ADCsrc.c  ****       * ....
1170:Src/ADCsrc.c  ****       * sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen - 1] * y[srcBLen - 1]
1171:Src/ADCsrc.c  ****       */
1172:Src/ADCsrc.c  **** 
1173:Src/ADCsrc.c  ****      /* In this stage the MAC operations are increased by 1 for every iteration.
1174:Src/ADCsrc.c  ****         The count variable holds the number of MAC operations performed */
1175:Src/ADCsrc.c  ****      count = 1u;
 1277              		.loc 1 1175 6 view .LVU430
1176:Src/ADCsrc.c  **** 
1177:Src/ADCsrc.c  ****      /* Working pointer of inputA */
1178:Src/ADCsrc.c  ****      px = pIn1;
 1278              		.loc 1 1178 6 view .LVU431
1179:Src/ADCsrc.c  **** 
1180:Src/ADCsrc.c  ****      /* Working pointer of inputB */
1181:Src/ADCsrc.c  ****      pSrc1 = pIn2 + (srcBLen - 1u);
 1279              		.loc 1 1181 6 view .LVU432
 1280              		.loc 1 1181 19 is_stmt 0 view .LVU433
 1281 002a 0CF1804A 		add	r10, ip, #1073741824
 1282 002e 0AF1FF3A 		add	r10, r10, #-1
 1283              		.loc 1 1181 12 view .LVU434
 1284 0032 0BEB8A0A 		add	r10, fp, r10, lsl #2
 1285              	.LVL128:
1182:Src/ADCsrc.c  ****      py = pSrc1;
 1286              		.loc 1 1182 6 is_stmt 1 view .LVU435
1183:Src/ADCsrc.c  **** 
1184:Src/ADCsrc.c  ****      /* ------------------------
1185:Src/ADCsrc.c  ****       * Stage1 process
1186:Src/ADCsrc.c  ****       * ----------------------*/
1187:Src/ADCsrc.c  **** 
1188:Src/ADCsrc.c  ****      /* The first stage starts here */
1189:Src/ADCsrc.c  ****      while(blockSize1 > 0u)
 1287              		.loc 1 1189 6 view .LVU436
1159:Src/ADCsrc.c  ****      blockSize2 = srcALen - (srcBLen - 1u);
 1288              		.loc 1 1159 17 is_stmt 0 view .LVU437
 1289 0036 3B46     		mov	r3, r7
1182:Src/ADCsrc.c  ****      py = pSrc1;
 1290              		.loc 1 1182 9 view .LVU438
 1291 0038 5146     		mov	r1, r10
1175:Src/ADCsrc.c  **** 
 1292              		.loc 1 1175 12 view .LVU439
 1293 003a 4FF00109 		mov	r9, #1
 1294              		.loc 1 1189 11 view .LVU440
 1295 003e 4AE0     		b	.L85
 1296              	.LVL129:
 1297              	.L83:
1131:Src/ADCsrc.c  **** 
 1298              		.loc 1 1131 8 is_stmt 1 view .LVU441
1134:Src/ADCsrc.c  **** 
 1299              		.loc 1 1134 8 view .LVU442
1137:Src/ADCsrc.c  ****        srcBLen = srcALen;
 1300              		.loc 1 1137 8 view .LVU443
1138:Src/ADCsrc.c  ****        srcALen = j;
 1301              		.loc 1 1138 8 view .LVU444
1139:Src/ADCsrc.c  **** 
 1302              		.loc 1 1139 8 view .LVU445
1143:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 178


 1303              		.loc 1 1143 8 view .LVU446
1143:Src/ADCsrc.c  **** 
 1304              		.loc 1 1143 32 is_stmt 0 view .LVU447
 1305 0040 CD18     		adds	r5, r1, r3
1143:Src/ADCsrc.c  **** 
 1306              		.loc 1 1143 20 view .LVU448
 1307 0042 05F18045 		add	r5, r5, #1073741824
 1308 0046 023D     		subs	r5, r5, #2
1143:Src/ADCsrc.c  **** 
 1309              		.loc 1 1143 13 view .LVU449
 1310 0048 099B     		ldr	r3, [sp, #36]
 1311              	.LVL130:
1143:Src/ADCsrc.c  **** 
 1312              		.loc 1 1143 13 view .LVU450
 1313 004a 03EB8505 		add	r5, r3, r5, lsl #2
 1314              	.LVL131:
1146:Src/ADCsrc.c  **** 
 1315              		.loc 1 1146 8 is_stmt 1 view .LVU451
1143:Src/ADCsrc.c  **** 
 1316              		.loc 1 1143 13 is_stmt 0 view .LVU452
 1317 004e 0346     		mov	r3, r0
1131:Src/ADCsrc.c  **** 
 1318              		.loc 1 1131 13 view .LVU453
 1319 0050 1046     		mov	r0, r2
 1320              	.LVL132:
1134:Src/ADCsrc.c  **** 
 1321              		.loc 1 1134 13 view .LVU454
 1322 0052 9B46     		mov	fp, r3
1143:Src/ADCsrc.c  **** 
 1323              		.loc 1 1143 13 view .LVU455
 1324 0054 0B46     		mov	r3, r1
 1325              	.LVL133:
1139:Src/ADCsrc.c  **** 
 1326              		.loc 1 1139 16 view .LVU456
 1327 0056 6146     		mov	r1, ip
 1328              	.LVL134:
1138:Src/ADCsrc.c  ****        srcALen = j;
 1329              		.loc 1 1138 16 view .LVU457
 1330 0058 9C46     		mov	ip, r3
 1331              	.LVL135:
1146:Src/ADCsrc.c  **** 
 1332              		.loc 1 1146 12 view .LVU458
 1333 005a 4FF0FF36 		mov	r6, #-1
 1334 005e DEE7     		b	.L84
 1335              	.LVL136:
 1336              	.L87:
1190:Src/ADCsrc.c  ****      {
1191:Src/ADCsrc.c  ****        /* Accumulator is made zero for every iteration */
1192:Src/ADCsrc.c  ****        sum = 0.0f;
1193:Src/ADCsrc.c  **** 
1194:Src/ADCsrc.c  ****        /* Apply loop unrolling and compute 4 MACs simultaneously. */
1195:Src/ADCsrc.c  ****        k = count >> 2u;
1196:Src/ADCsrc.c  **** 
1197:Src/ADCsrc.c  ****        /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1198:Src/ADCsrc.c  ****         ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1199:Src/ADCsrc.c  ****        while(k > 0u)
1200:Src/ADCsrc.c  ****        {
ARM GAS  /tmp/ccgoDI2u.s 			page 179


1201:Src/ADCsrc.c  ****          /* x[0] * y[srcBLen - 4] */
1202:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1337              		.loc 1 1202 10 is_stmt 1 view .LVU459
 1338              		.loc 1 1202 17 is_stmt 0 view .LVU460
 1339 0060 94ED007A 		vldr.32	s14, [r4]
 1340              	.LVL137:
 1341              		.loc 1 1202 25 view .LVU461
 1342 0064 D1ED006A 		vldr.32	s13, [r1]
 1343              		.loc 1 1202 23 view .LVU462
 1344 0068 27EE267A 		vmul.f32	s14, s14, s13
 1345              		.loc 1 1202 14 view .LVU463
 1346 006c 77EE877A 		vadd.f32	s15, s15, s14
 1347              	.LVL138:
1203:Src/ADCsrc.c  ****          /* x[1] * y[srcBLen - 3] */
1204:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1348              		.loc 1 1204 10 is_stmt 1 view .LVU464
 1349              		.loc 1 1204 17 is_stmt 0 view .LVU465
 1350 0070 94ED017A 		vldr.32	s14, [r4, #4]
 1351              	.LVL139:
 1352              		.loc 1 1204 25 view .LVU466
 1353 0074 D1ED016A 		vldr.32	s13, [r1, #4]
 1354              		.loc 1 1204 23 view .LVU467
 1355 0078 27EE267A 		vmul.f32	s14, s14, s13
 1356              		.loc 1 1204 14 view .LVU468
 1357 007c 77EE877A 		vadd.f32	s15, s15, s14
 1358              	.LVL140:
1205:Src/ADCsrc.c  ****          /* x[2] * y[srcBLen - 2] */
1206:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1359              		.loc 1 1206 10 is_stmt 1 view .LVU469
 1360              		.loc 1 1206 17 is_stmt 0 view .LVU470
 1361 0080 94ED027A 		vldr.32	s14, [r4, #8]
 1362              	.LVL141:
 1363              		.loc 1 1206 25 view .LVU471
 1364 0084 D1ED026A 		vldr.32	s13, [r1, #8]
 1365              		.loc 1 1206 23 view .LVU472
 1366 0088 27EE267A 		vmul.f32	s14, s14, s13
 1367              		.loc 1 1206 14 view .LVU473
 1368 008c 77EE877A 		vadd.f32	s15, s15, s14
 1369              	.LVL142:
1207:Src/ADCsrc.c  ****          /* x[3] * y[srcBLen - 1] */
1208:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1370              		.loc 1 1208 10 is_stmt 1 view .LVU474
 1371              		.loc 1 1208 17 is_stmt 0 view .LVU475
 1372 0090 94ED037A 		vldr.32	s14, [r4, #12]
 1373              	.LVL143:
 1374              		.loc 1 1208 25 view .LVU476
 1375 0094 D1ED036A 		vldr.32	s13, [r1, #12]
 1376              		.loc 1 1208 23 view .LVU477
 1377 0098 27EE267A 		vmul.f32	s14, s14, s13
 1378              		.loc 1 1208 14 view .LVU478
 1379 009c 77EE877A 		vadd.f32	s15, s15, s14
 1380              	.LVL144:
1209:Src/ADCsrc.c  **** 
1210:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1211:Src/ADCsrc.c  ****          k--;
 1381              		.loc 1 1211 10 is_stmt 1 view .LVU479
 1382              		.loc 1 1211 11 is_stmt 0 view .LVU480
ARM GAS  /tmp/ccgoDI2u.s 			page 180


 1383 00a0 013A     		subs	r2, r2, #1
 1384              	.LVL145:
1208:Src/ADCsrc.c  **** 
 1385              		.loc 1 1208 28 view .LVU481
 1386 00a2 1031     		adds	r1, r1, #16
 1387              	.LVL146:
1208:Src/ADCsrc.c  **** 
 1388              		.loc 1 1208 20 view .LVU482
 1389 00a4 1034     		adds	r4, r4, #16
 1390              	.LVL147:
 1391              	.L86:
1199:Src/ADCsrc.c  ****        {
 1392              		.loc 1 1199 13 is_stmt 1 view .LVU483
 1393 00a6 002A     		cmp	r2, #0
 1394 00a8 DAD1     		bne	.L87
1212:Src/ADCsrc.c  ****        }
1213:Src/ADCsrc.c  **** 
1214:Src/ADCsrc.c  ****        /* If the count is not a multiple of 4, compute any remaining MACs here.
1215:Src/ADCsrc.c  ****         ** No loop unrolling is used. */
1216:Src/ADCsrc.c  ****        k = count % 0x4u;
 1395              		.loc 1 1216 8 view .LVU484
 1396              		.loc 1 1216 10 is_stmt 0 view .LVU485
 1397 00aa 09F00302 		and	r2, r9, #3
 1398              	.LVL148:
1217:Src/ADCsrc.c  **** 
1218:Src/ADCsrc.c  ****        while(k > 0u)
 1399              		.loc 1 1218 8 is_stmt 1 view .LVU486
 1400              	.L88:
 1401              		.loc 1 1218 13 view .LVU487
 1402 00ae 4AB1     		cbz	r2, .L115
1219:Src/ADCsrc.c  ****        {
1220:Src/ADCsrc.c  ****          /* Perform the multiply-accumulate */
1221:Src/ADCsrc.c  ****          /* x[0] * y[srcBLen - 1] */
1222:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1403              		.loc 1 1222 10 view .LVU488
 1404              	.LVL149:
 1405              		.loc 1 1222 17 is_stmt 0 view .LVU489
 1406 00b0 B4EC017A 		vldmia.32	r4!, {s14}
 1407              	.LVL150:
 1408              		.loc 1 1222 25 view .LVU490
 1409 00b4 F1EC016A 		vldmia.32	r1!, {s13}
 1410              	.LVL151:
 1411              		.loc 1 1222 23 view .LVU491
 1412 00b8 27EE267A 		vmul.f32	s14, s14, s13
 1413              		.loc 1 1222 14 view .LVU492
 1414 00bc 77EE877A 		vadd.f32	s15, s15, s14
 1415              	.LVL152:
1223:Src/ADCsrc.c  **** 
1224:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1225:Src/ADCsrc.c  ****          k--;
 1416              		.loc 1 1225 10 is_stmt 1 view .LVU493
 1417              		.loc 1 1225 11 is_stmt 0 view .LVU494
 1418 00c0 013A     		subs	r2, r2, #1
 1419              	.LVL153:
 1420              		.loc 1 1225 11 view .LVU495
 1421 00c2 F4E7     		b	.L88
 1422              	.L115:
ARM GAS  /tmp/ccgoDI2u.s 			page 181


1226:Src/ADCsrc.c  ****        }
1227:Src/ADCsrc.c  **** 
1228:Src/ADCsrc.c  ****        /* Store the result in the accumulator in the destination buffer. */
1229:Src/ADCsrc.c  ****        *pOut = sum;
 1423              		.loc 1 1229 8 is_stmt 1 view .LVU496
 1424              		.loc 1 1229 14 is_stmt 0 view .LVU497
 1425 00c4 C5ED007A 		vstr.32	s15, [r5]
1230:Src/ADCsrc.c  ****        /* Destination pointer is updated according to the address modifier, inc */
1231:Src/ADCsrc.c  ****        pOut += inc;
 1426              		.loc 1 1231 8 is_stmt 1 view .LVU498
 1427              		.loc 1 1231 13 is_stmt 0 view .LVU499
 1428 00c8 05EB8605 		add	r5, r5, r6, lsl #2
 1429              	.LVL154:
1232:Src/ADCsrc.c  **** 
1233:Src/ADCsrc.c  ****        /* Update the inputA and inputB pointers for next MAC calculation */
1234:Src/ADCsrc.c  ****        py = pSrc1 - count;
 1430              		.loc 1 1234 8 is_stmt 1 view .LVU500
 1431              		.loc 1 1234 11 is_stmt 0 view .LVU501
 1432 00cc AAEB8901 		sub	r1, r10, r9, lsl #2
 1433              	.LVL155:
1235:Src/ADCsrc.c  ****        px = pIn1;
 1434              		.loc 1 1235 8 is_stmt 1 view .LVU502
1236:Src/ADCsrc.c  **** 
1237:Src/ADCsrc.c  ****        /* Increment the MAC count */
1238:Src/ADCsrc.c  ****        count++;
 1435              		.loc 1 1238 8 view .LVU503
 1436              		.loc 1 1238 13 is_stmt 0 view .LVU504
 1437 00d0 09F10109 		add	r9, r9, #1
 1438              	.LVL156:
1239:Src/ADCsrc.c  **** 
1240:Src/ADCsrc.c  ****        /* Decrement the loop counter */
1241:Src/ADCsrc.c  ****        blockSize1--;
 1439              		.loc 1 1241 8 is_stmt 1 view .LVU505
 1440              		.loc 1 1241 18 is_stmt 0 view .LVU506
 1441 00d4 013B     		subs	r3, r3, #1
 1442              	.LVL157:
 1443              	.L85:
1189:Src/ADCsrc.c  ****      {
 1444              		.loc 1 1189 11 is_stmt 1 view .LVU507
 1445 00d6 2BB1     		cbz	r3, .L116
1192:Src/ADCsrc.c  **** 
 1446              		.loc 1 1192 8 view .LVU508
 1447              	.LVL158:
1195:Src/ADCsrc.c  **** 
 1448              		.loc 1 1195 8 view .LVU509
1195:Src/ADCsrc.c  **** 
 1449              		.loc 1 1195 10 is_stmt 0 view .LVU510
 1450 00d8 4FEA9902 		lsr	r2, r9, #2
 1451              	.LVL159:
1199:Src/ADCsrc.c  ****        {
 1452              		.loc 1 1199 8 is_stmt 1 view .LVU511
1199:Src/ADCsrc.c  ****        {
 1453              		.loc 1 1199 13 is_stmt 0 view .LVU512
 1454 00dc 0446     		mov	r4, r0
1192:Src/ADCsrc.c  **** 
 1455              		.loc 1 1192 12 view .LVU513
 1456 00de DFEDAF7A 		vldr.32	s15, .L120
ARM GAS  /tmp/ccgoDI2u.s 			page 182


1199:Src/ADCsrc.c  ****        {
 1457              		.loc 1 1199 13 view .LVU514
 1458 00e2 E0E7     		b	.L86
 1459              	.LVL160:
 1460              	.L116:
1242:Src/ADCsrc.c  ****      }
1243:Src/ADCsrc.c  **** 
1244:Src/ADCsrc.c  ****      /* --------------------------
1245:Src/ADCsrc.c  ****       * Initializations of stage2
1246:Src/ADCsrc.c  ****       * ------------------------*/
1247:Src/ADCsrc.c  **** 
1248:Src/ADCsrc.c  ****      /* sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen-1] * y[srcBLen-1]
1249:Src/ADCsrc.c  ****       * sum = x[1] * y[0] + x[2] * y[1] +...+ x[srcBLen] * y[srcBLen-1]
1250:Src/ADCsrc.c  ****       * ....
1251:Src/ADCsrc.c  ****       * sum = x[srcALen-srcBLen-2] * y[0] + x[srcALen-srcBLen-1] * y[1] +...+ x[srcALen-1] * y[srcB
1252:Src/ADCsrc.c  ****       */
1253:Src/ADCsrc.c  **** 
1254:Src/ADCsrc.c  ****      /* Working pointer of inputA */
1255:Src/ADCsrc.c  ****      px = pIn1;
 1461              		.loc 1 1255 6 is_stmt 1 view .LVU515
1256:Src/ADCsrc.c  **** 
1257:Src/ADCsrc.c  ****      /* Working pointer of inputB */
1258:Src/ADCsrc.c  ****      py = pIn2;
 1462              		.loc 1 1258 6 view .LVU516
1259:Src/ADCsrc.c  **** 
1260:Src/ADCsrc.c  ****      /* count is index by which the pointer pIn1 to be incremented */
1261:Src/ADCsrc.c  ****      count = 0u;
 1463              		.loc 1 1261 6 view .LVU517
1262:Src/ADCsrc.c  **** 
1263:Src/ADCsrc.c  ****      /* -------------------
1264:Src/ADCsrc.c  ****       * Stage2 process
1265:Src/ADCsrc.c  ****       * ------------------*/
1266:Src/ADCsrc.c  **** 
1267:Src/ADCsrc.c  ****      /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
1268:Src/ADCsrc.c  ****       * So, to loop unroll over blockSize2,
1269:Src/ADCsrc.c  ****       * srcBLen should be greater than or equal to 4, to loop unroll the srcBLen loop */
1270:Src/ADCsrc.c  ****      if(srcBLen >= 4u)
 1464              		.loc 1 1270 6 view .LVU518
 1465              		.loc 1 1270 8 is_stmt 0 view .LVU519
 1466 00e4 BCF1030F 		cmp	ip, #3
 1467 00e8 40F20A81 		bls	.L112
1271:Src/ADCsrc.c  ****      {
1272:Src/ADCsrc.c  ****        /* Loop unroll over blockSize2, by 4 */
1273:Src/ADCsrc.c  ****        blkCnt = blockSize2 >> 2u;
 1468              		.loc 1 1273 8 is_stmt 1 view .LVU520
 1469              		.loc 1 1273 15 is_stmt 0 view .LVU521
 1470 00ec 4FEA9E09 		lsr	r9, lr, #2
 1471              	.LVL161:
1274:Src/ADCsrc.c  **** 
1275:Src/ADCsrc.c  ****        while(blkCnt > 0u)
 1472              		.loc 1 1275 8 is_stmt 1 view .LVU522
1255:Src/ADCsrc.c  **** 
 1473              		.loc 1 1255 9 is_stmt 0 view .LVU523
 1474 00f0 0446     		mov	r4, r0
 1475              		.loc 1 1275 13 view .LVU524
 1476 00f2 31E0     		b	.L92
 1477              	.LVL162:
ARM GAS  /tmp/ccgoDI2u.s 			page 183


 1478              	.L95:
1276:Src/ADCsrc.c  ****        {
1277:Src/ADCsrc.c  ****          /* Set all accumulators to zero */
1278:Src/ADCsrc.c  ****          acc0 = 0.0f;
1279:Src/ADCsrc.c  ****          acc1 = 0.0f;
1280:Src/ADCsrc.c  ****          acc2 = 0.0f;
1281:Src/ADCsrc.c  ****          acc3 = 0.0f;
1282:Src/ADCsrc.c  **** 
1283:Src/ADCsrc.c  ****          /* read x[0], x[1], x[2] samples */
1284:Src/ADCsrc.c  ****          x0 = *(px++);
1285:Src/ADCsrc.c  ****          x1 = *(px++);
1286:Src/ADCsrc.c  ****          x2 = *(px++);
1287:Src/ADCsrc.c  **** 
1288:Src/ADCsrc.c  ****          /* Apply loop unrolling and compute 4 MACs simultaneously. */
1289:Src/ADCsrc.c  ****          k = srcBLen >> 2u;
1290:Src/ADCsrc.c  **** 
1291:Src/ADCsrc.c  ****          /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1292:Src/ADCsrc.c  ****           ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1293:Src/ADCsrc.c  ****          do
1294:Src/ADCsrc.c  ****          {
1295:Src/ADCsrc.c  ****            /* Read y[0] sample */
1296:Src/ADCsrc.c  ****            c0 = *(py++);
1297:Src/ADCsrc.c  **** 
1298:Src/ADCsrc.c  ****            /* Read x[3] sample */
1299:Src/ADCsrc.c  ****            x3 = *(px++);
1300:Src/ADCsrc.c  **** 
1301:Src/ADCsrc.c  ****            /* Perform the multiply-accumulate */
1302:Src/ADCsrc.c  ****            /* acc0 +=  x[0] * y[0] */
1303:Src/ADCsrc.c  ****            acc0 += x0 * c0;
1304:Src/ADCsrc.c  ****            /* acc1 +=  x[1] * y[0] */
1305:Src/ADCsrc.c  ****            acc1 += x1 * c0;
1306:Src/ADCsrc.c  ****            /* acc2 +=  x[2] * y[0] */
1307:Src/ADCsrc.c  ****            acc2 += x2 * c0;
1308:Src/ADCsrc.c  ****            /* acc3 +=  x[3] * y[0] */
1309:Src/ADCsrc.c  ****            acc3 += x3 * c0;
1310:Src/ADCsrc.c  **** 
1311:Src/ADCsrc.c  ****            /* Read y[1] sample */
1312:Src/ADCsrc.c  ****            c0 = *(py++);
1313:Src/ADCsrc.c  **** 
1314:Src/ADCsrc.c  ****            /* Read x[4] sample */
1315:Src/ADCsrc.c  ****            x0 = *(px++);
1316:Src/ADCsrc.c  **** 
1317:Src/ADCsrc.c  ****            /* Perform the multiply-accumulate */
1318:Src/ADCsrc.c  ****            /* acc0 +=  x[1] * y[1] */
1319:Src/ADCsrc.c  ****            acc0 += x1 * c0;
1320:Src/ADCsrc.c  ****            /* acc1 +=  x[2] * y[1] */
1321:Src/ADCsrc.c  ****            acc1 += x2 * c0;
1322:Src/ADCsrc.c  ****            /* acc2 +=  x[3] * y[1] */
1323:Src/ADCsrc.c  ****            acc2 += x3 * c0;
1324:Src/ADCsrc.c  ****            /* acc3 +=  x[4] * y[1] */
1325:Src/ADCsrc.c  ****            acc3 += x0 * c0;
1326:Src/ADCsrc.c  **** 
1327:Src/ADCsrc.c  ****            /* Read y[2] sample */
1328:Src/ADCsrc.c  ****            c0 = *(py++);
1329:Src/ADCsrc.c  **** 
1330:Src/ADCsrc.c  ****            /* Read x[5] sample */
1331:Src/ADCsrc.c  ****            x1 = *(px++);
ARM GAS  /tmp/ccgoDI2u.s 			page 184


1332:Src/ADCsrc.c  **** 
1333:Src/ADCsrc.c  ****            /* Perform the multiply-accumulates */
1334:Src/ADCsrc.c  ****            /* acc0 +=  x[2] * y[2] */
1335:Src/ADCsrc.c  ****            acc0 += x2 * c0;
1336:Src/ADCsrc.c  ****            /* acc1 +=  x[3] * y[2] */
1337:Src/ADCsrc.c  ****            acc1 += x3 * c0;
1338:Src/ADCsrc.c  ****            /* acc2 +=  x[4] * y[2] */
1339:Src/ADCsrc.c  ****            acc2 += x0 * c0;
1340:Src/ADCsrc.c  ****            /* acc3 +=  x[5] * y[2] */
1341:Src/ADCsrc.c  ****            acc3 += x1 * c0;
1342:Src/ADCsrc.c  **** 
1343:Src/ADCsrc.c  ****            /* Read y[3] sample */
1344:Src/ADCsrc.c  ****            c0 = *(py++);
1345:Src/ADCsrc.c  **** 
1346:Src/ADCsrc.c  ****            /* Read x[6] sample */
1347:Src/ADCsrc.c  ****            x2 = *(px++);
1348:Src/ADCsrc.c  **** 
1349:Src/ADCsrc.c  ****            /* Perform the multiply-accumulates */
1350:Src/ADCsrc.c  ****            /* acc0 +=  x[3] * y[3] */
1351:Src/ADCsrc.c  ****            acc0 += x3 * c0;
1352:Src/ADCsrc.c  ****            /* acc1 +=  x[4] * y[3] */
1353:Src/ADCsrc.c  ****            acc1 += x0 * c0;
1354:Src/ADCsrc.c  ****            /* acc2 +=  x[5] * y[3] */
1355:Src/ADCsrc.c  ****            acc2 += x1 * c0;
1356:Src/ADCsrc.c  ****            /* acc3 +=  x[6] * y[3] */
1357:Src/ADCsrc.c  ****            acc3 += x2 * c0;
1358:Src/ADCsrc.c  **** 
1359:Src/ADCsrc.c  **** 
1360:Src/ADCsrc.c  ****          } while(--k);
1361:Src/ADCsrc.c  **** 
1362:Src/ADCsrc.c  ****          /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1363:Src/ADCsrc.c  ****           ** No loop unrolling is used. */
1364:Src/ADCsrc.c  ****          k = srcBLen % 0x4u;
1365:Src/ADCsrc.c  **** 
1366:Src/ADCsrc.c  ****          while(k > 0u)
1367:Src/ADCsrc.c  ****          {
1368:Src/ADCsrc.c  ****            /* Read y[4] sample */
1369:Src/ADCsrc.c  ****            c0 = *(py++);
 1479              		.loc 1 1369 12 is_stmt 1 view .LVU525
 1480              		.loc 1 1369 15 is_stmt 0 view .LVU526
 1481 00f4 B4EC017A 		vldmia.32	r4!, {s14}
 1482              	.LVL163:
1370:Src/ADCsrc.c  **** 
1371:Src/ADCsrc.c  ****            /* Read x[7] sample */
1372:Src/ADCsrc.c  ****            x3 = *(px++);
 1483              		.loc 1 1372 12 is_stmt 1 view .LVU527
 1484              		.loc 1 1372 15 is_stmt 0 view .LVU528
 1485 00f8 F1EC014A 		vldmia.32	r1!, {s9}
 1486              	.LVL164:
1373:Src/ADCsrc.c  **** 
1374:Src/ADCsrc.c  ****            /* Perform the multiply-accumulates */
1375:Src/ADCsrc.c  ****            /* acc0 +=  x[4] * y[4] */
1376:Src/ADCsrc.c  ****            acc0 += x0 * c0;
 1487              		.loc 1 1376 12 is_stmt 1 view .LVU529
 1488              		.loc 1 1376 23 is_stmt 0 view .LVU530
 1489 00fc 66EE876A 		vmul.f32	s13, s13, s14
 1490              	.LVL165:
ARM GAS  /tmp/ccgoDI2u.s 			page 185


 1491              		.loc 1 1376 17 view .LVU531
 1492 0100 36EE266A 		vadd.f32	s12, s12, s13
 1493              	.LVL166:
1377:Src/ADCsrc.c  ****            /* acc1 +=  x[5] * y[4] */
1378:Src/ADCsrc.c  ****            acc1 += x1 * c0;
 1494              		.loc 1 1378 12 is_stmt 1 view .LVU532
 1495              		.loc 1 1378 23 is_stmt 0 view .LVU533
 1496 0104 65EE876A 		vmul.f32	s13, s11, s14
 1497              		.loc 1 1378 17 view .LVU534
 1498 0108 73EEA63A 		vadd.f32	s7, s7, s13
 1499              	.LVL167:
1379:Src/ADCsrc.c  ****            /* acc2 +=  x[6] * y[4] */
1380:Src/ADCsrc.c  ****            acc2 += x2 * c0;
 1500              		.loc 1 1380 12 is_stmt 1 view .LVU535
 1501              		.loc 1 1380 23 is_stmt 0 view .LVU536
 1502 010c 65EE076A 		vmul.f32	s13, s10, s14
 1503              		.loc 1 1380 17 view .LVU537
 1504 0110 34EE264A 		vadd.f32	s8, s8, s13
 1505              	.LVL168:
1381:Src/ADCsrc.c  ****            /* acc3 +=  x[7] * y[4] */
1382:Src/ADCsrc.c  ****            acc3 += x3 * c0;
 1506              		.loc 1 1382 12 is_stmt 1 view .LVU538
 1507              		.loc 1 1382 23 is_stmt 0 view .LVU539
 1508 0114 27EE247A 		vmul.f32	s14, s14, s9
 1509              	.LVL169:
 1510              		.loc 1 1382 17 view .LVU540
 1511 0118 77EE877A 		vadd.f32	s15, s15, s14
 1512              	.LVL170:
1383:Src/ADCsrc.c  **** 
1384:Src/ADCsrc.c  ****            /* Reuse the present samples for the next MAC */
1385:Src/ADCsrc.c  ****            x0 = x1;
 1513              		.loc 1 1385 12 is_stmt 1 view .LVU541
1386:Src/ADCsrc.c  ****            x1 = x2;
 1514              		.loc 1 1386 12 view .LVU542
1387:Src/ADCsrc.c  ****            x2 = x3;
 1515              		.loc 1 1387 12 view .LVU543
1388:Src/ADCsrc.c  **** 
1389:Src/ADCsrc.c  ****            /* Decrement the loop counter */
1390:Src/ADCsrc.c  ****            k--;
 1516              		.loc 1 1390 12 view .LVU544
 1517              		.loc 1 1390 13 is_stmt 0 view .LVU545
 1518 011c 013A     		subs	r2, r2, #1
 1519              	.LVL171:
1385:Src/ADCsrc.c  ****            x1 = x2;
 1520              		.loc 1 1385 15 view .LVU546
 1521 011e F0EE656A 		vmov.f32	s13, s11
1386:Src/ADCsrc.c  ****            x2 = x3;
 1522              		.loc 1 1386 15 view .LVU547
 1523 0122 F0EE455A 		vmov.f32	s11, s10
 1524              	.LVL172:
1387:Src/ADCsrc.c  **** 
 1525              		.loc 1 1387 15 view .LVU548
 1526 0126 B0EE645A 		vmov.f32	s10, s9
 1527              	.LVL173:
 1528              	.L94:
1366:Src/ADCsrc.c  ****          {
 1529              		.loc 1 1366 15 is_stmt 1 view .LVU549
ARM GAS  /tmp/ccgoDI2u.s 			page 186


 1530 012a 002A     		cmp	r2, #0
 1531 012c E2D1     		bne	.L95
1391:Src/ADCsrc.c  ****          }
1392:Src/ADCsrc.c  **** 
1393:Src/ADCsrc.c  ****          /* Store the result in the accumulator in the destination buffer. */
1394:Src/ADCsrc.c  ****          *pOut = acc0;
 1532              		.loc 1 1394 10 view .LVU550
 1533              		.loc 1 1394 16 is_stmt 0 view .LVU551
 1534 012e 85ED006A 		vstr.32	s12, [r5]
1395:Src/ADCsrc.c  ****          /* Destination pointer is updated according to the address modifier, inc */
1396:Src/ADCsrc.c  ****          pOut += inc;
 1535              		.loc 1 1396 10 is_stmt 1 view .LVU552
 1536              		.loc 1 1396 15 is_stmt 0 view .LVU553
 1537 0132 05EB8605 		add	r5, r5, r6, lsl #2
 1538              	.LVL174:
1397:Src/ADCsrc.c  **** 
1398:Src/ADCsrc.c  ****          *pOut = acc1;
 1539              		.loc 1 1398 10 is_stmt 1 view .LVU554
 1540              		.loc 1 1398 16 is_stmt 0 view .LVU555
 1541 0136 C5ED003A 		vstr.32	s7, [r5]
1399:Src/ADCsrc.c  ****          pOut += inc;
 1542              		.loc 1 1399 10 is_stmt 1 view .LVU556
 1543              		.loc 1 1399 15 is_stmt 0 view .LVU557
 1544 013a 05EB8605 		add	r5, r5, r6, lsl #2
 1545              	.LVL175:
1400:Src/ADCsrc.c  **** 
1401:Src/ADCsrc.c  ****          *pOut = acc2;
 1546              		.loc 1 1401 10 is_stmt 1 view .LVU558
 1547              		.loc 1 1401 16 is_stmt 0 view .LVU559
 1548 013e 85ED004A 		vstr.32	s8, [r5]
1402:Src/ADCsrc.c  ****          pOut += inc;
 1549              		.loc 1 1402 10 is_stmt 1 view .LVU560
 1550              		.loc 1 1402 15 is_stmt 0 view .LVU561
 1551 0142 05EB8605 		add	r5, r5, r6, lsl #2
 1552              	.LVL176:
1403:Src/ADCsrc.c  **** 
1404:Src/ADCsrc.c  ****          *pOut = acc3;
 1553              		.loc 1 1404 10 is_stmt 1 view .LVU562
 1554              		.loc 1 1404 16 is_stmt 0 view .LVU563
 1555 0146 C5ED007A 		vstr.32	s15, [r5]
1405:Src/ADCsrc.c  ****          pOut += inc;
 1556              		.loc 1 1405 10 is_stmt 1 view .LVU564
 1557              		.loc 1 1405 15 is_stmt 0 view .LVU565
 1558 014a 05EB8605 		add	r5, r5, r6, lsl #2
 1559              	.LVL177:
1406:Src/ADCsrc.c  **** 
1407:Src/ADCsrc.c  ****          /* Increment the pointer pIn1 index, count by 4 */
1408:Src/ADCsrc.c  ****          count += 4u;
 1560              		.loc 1 1408 10 is_stmt 1 view .LVU566
 1561              		.loc 1 1408 16 is_stmt 0 view .LVU567
 1562 014e 0433     		adds	r3, r3, #4
 1563              	.LVL178:
1409:Src/ADCsrc.c  **** 
1410:Src/ADCsrc.c  ****          /* Update the inputA and inputB pointers for next MAC calculation */
1411:Src/ADCsrc.c  ****          px = pIn1 + count;
 1564              		.loc 1 1411 10 is_stmt 1 view .LVU568
 1565              		.loc 1 1411 13 is_stmt 0 view .LVU569
ARM GAS  /tmp/ccgoDI2u.s 			page 187


 1566 0150 00EB8304 		add	r4, r0, r3, lsl #2
 1567              	.LVL179:
1412:Src/ADCsrc.c  ****          py = pIn2;
 1568              		.loc 1 1412 10 is_stmt 1 view .LVU570
1413:Src/ADCsrc.c  **** 
1414:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1415:Src/ADCsrc.c  ****          blkCnt--;
 1569              		.loc 1 1415 10 view .LVU571
 1570              		.loc 1 1415 16 is_stmt 0 view .LVU572
 1571 0154 09F1FF39 		add	r9, r9, #-1
 1572              	.LVL180:
 1573              	.L92:
1275:Src/ADCsrc.c  ****        {
 1574              		.loc 1 1275 13 is_stmt 1 view .LVU573
 1575 0158 B9F1000F 		cmp	r9, #0
 1576 015c 6AD0     		beq	.L117
1278:Src/ADCsrc.c  ****          acc1 = 0.0f;
 1577              		.loc 1 1278 10 view .LVU574
 1578              	.LVL181:
1279:Src/ADCsrc.c  ****          acc2 = 0.0f;
 1579              		.loc 1 1279 10 view .LVU575
1280:Src/ADCsrc.c  ****          acc3 = 0.0f;
 1580              		.loc 1 1280 10 view .LVU576
1281:Src/ADCsrc.c  **** 
 1581              		.loc 1 1281 10 view .LVU577
1284:Src/ADCsrc.c  ****          x1 = *(px++);
 1582              		.loc 1 1284 10 view .LVU578
1284:Src/ADCsrc.c  ****          x1 = *(px++);
 1583              		.loc 1 1284 13 is_stmt 0 view .LVU579
 1584 015e D4ED006A 		vldr.32	s13, [r4]
 1585              	.LVL182:
1285:Src/ADCsrc.c  ****          x2 = *(px++);
 1586              		.loc 1 1285 10 is_stmt 1 view .LVU580
1285:Src/ADCsrc.c  ****          x2 = *(px++);
 1587              		.loc 1 1285 13 is_stmt 0 view .LVU581
 1588 0162 D4ED015A 		vldr.32	s11, [r4, #4]
 1589              	.LVL183:
1286:Src/ADCsrc.c  **** 
 1590              		.loc 1 1286 10 is_stmt 1 view .LVU582
1286:Src/ADCsrc.c  **** 
 1591              		.loc 1 1286 19 is_stmt 0 view .LVU583
 1592 0166 04F10C01 		add	r1, r4, #12
 1593              	.LVL184:
1286:Src/ADCsrc.c  **** 
 1594              		.loc 1 1286 13 view .LVU584
 1595 016a 94ED025A 		vldr.32	s10, [r4, #8]
 1596              	.LVL185:
1289:Src/ADCsrc.c  **** 
 1597              		.loc 1 1289 10 is_stmt 1 view .LVU585
1289:Src/ADCsrc.c  **** 
 1598              		.loc 1 1289 12 is_stmt 0 view .LVU586
 1599 016e 4FEA9C0A 		lsr	r10, ip, #2
 1600              	.LVL186:
1289:Src/ADCsrc.c  **** 
 1601              		.loc 1 1289 12 view .LVU587
 1602 0172 5C46     		mov	r4, fp
1281:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 188


 1603              		.loc 1 1281 15 view .LVU588
 1604 0174 DFED897A 		vldr.32	s15, .L120
1280:Src/ADCsrc.c  ****          acc3 = 0.0f;
 1605              		.loc 1 1280 15 view .LVU589
 1606 0178 B0EE674A 		vmov.f32	s8, s15
1279:Src/ADCsrc.c  ****          acc2 = 0.0f;
 1607              		.loc 1 1279 15 view .LVU590
 1608 017c F0EE673A 		vmov.f32	s7, s15
1278:Src/ADCsrc.c  ****          acc1 = 0.0f;
 1609              		.loc 1 1278 15 view .LVU591
 1610 0180 B0EE676A 		vmov.f32	s12, s15
 1611              	.LVL187:
 1612              	.L93:
1293:Src/ADCsrc.c  ****          {
 1613              		.loc 1 1293 10 is_stmt 1 discriminator 1 view .LVU592
1296:Src/ADCsrc.c  **** 
 1614              		.loc 1 1296 12 discriminator 1 view .LVU593
1296:Src/ADCsrc.c  **** 
 1615              		.loc 1 1296 15 is_stmt 0 discriminator 1 view .LVU594
 1616 0184 94ED007A 		vldr.32	s14, [r4]
 1617              	.LVL188:
1299:Src/ADCsrc.c  **** 
 1618              		.loc 1 1299 12 is_stmt 1 discriminator 1 view .LVU595
1299:Src/ADCsrc.c  **** 
 1619              		.loc 1 1299 15 is_stmt 0 discriminator 1 view .LVU596
 1620 0188 D1ED004A 		vldr.32	s9, [r1]
 1621              	.LVL189:
1303:Src/ADCsrc.c  ****            /* acc1 +=  x[1] * y[0] */
 1622              		.loc 1 1303 12 is_stmt 1 discriminator 1 view .LVU597
1303:Src/ADCsrc.c  ****            /* acc1 +=  x[1] * y[0] */
 1623              		.loc 1 1303 23 is_stmt 0 discriminator 1 view .LVU598
 1624 018c 26EE872A 		vmul.f32	s4, s13, s14
1303:Src/ADCsrc.c  ****            /* acc1 +=  x[1] * y[0] */
 1625              		.loc 1 1303 17 discriminator 1 view .LVU599
 1626 0190 32EE062A 		vadd.f32	s4, s4, s12
 1627              	.LVL190:
1305:Src/ADCsrc.c  ****            /* acc2 +=  x[2] * y[0] */
 1628              		.loc 1 1305 12 is_stmt 1 discriminator 1 view .LVU600
1305:Src/ADCsrc.c  ****            /* acc2 +=  x[2] * y[0] */
 1629              		.loc 1 1305 23 is_stmt 0 discriminator 1 view .LVU601
 1630 0194 65EE872A 		vmul.f32	s5, s11, s14
1305:Src/ADCsrc.c  ****            /* acc2 +=  x[2] * y[0] */
 1631              		.loc 1 1305 17 discriminator 1 view .LVU602
 1632 0198 72EEA33A 		vadd.f32	s7, s5, s7
 1633              	.LVL191:
1307:Src/ADCsrc.c  ****            /* acc3 +=  x[3] * y[0] */
 1634              		.loc 1 1307 12 is_stmt 1 discriminator 1 view .LVU603
1307:Src/ADCsrc.c  ****            /* acc3 +=  x[3] * y[0] */
 1635              		.loc 1 1307 23 is_stmt 0 discriminator 1 view .LVU604
 1636 019c 25EE073A 		vmul.f32	s6, s10, s14
1307:Src/ADCsrc.c  ****            /* acc3 +=  x[3] * y[0] */
 1637              		.loc 1 1307 17 discriminator 1 view .LVU605
 1638 01a0 33EE044A 		vadd.f32	s8, s6, s8
 1639              	.LVL192:
1309:Src/ADCsrc.c  **** 
 1640              		.loc 1 1309 12 is_stmt 1 discriminator 1 view .LVU606
1309:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 189


 1641              		.loc 1 1309 23 is_stmt 0 discriminator 1 view .LVU607
 1642 01a4 27EE247A 		vmul.f32	s14, s14, s9
 1643              	.LVL193:
1309:Src/ADCsrc.c  **** 
 1644              		.loc 1 1309 17 discriminator 1 view .LVU608
 1645 01a8 77EE277A 		vadd.f32	s15, s14, s15
 1646              	.LVL194:
1312:Src/ADCsrc.c  **** 
 1647              		.loc 1 1312 12 is_stmt 1 discriminator 1 view .LVU609
1312:Src/ADCsrc.c  **** 
 1648              		.loc 1 1312 15 is_stmt 0 discriminator 1 view .LVU610
 1649 01ac 94ED017A 		vldr.32	s14, [r4, #4]
 1650              	.LVL195:
1315:Src/ADCsrc.c  **** 
 1651              		.loc 1 1315 12 is_stmt 1 discriminator 1 view .LVU611
1315:Src/ADCsrc.c  **** 
 1652              		.loc 1 1315 15 is_stmt 0 discriminator 1 view .LVU612
 1653 01b0 D1ED016A 		vldr.32	s13, [r1, #4]
 1654              	.LVL196:
1319:Src/ADCsrc.c  ****            /* acc1 +=  x[2] * y[1] */
 1655              		.loc 1 1319 12 is_stmt 1 discriminator 1 view .LVU613
1319:Src/ADCsrc.c  ****            /* acc1 +=  x[2] * y[1] */
 1656              		.loc 1 1319 23 is_stmt 0 discriminator 1 view .LVU614
 1657 01b4 25EE876A 		vmul.f32	s12, s11, s14
1319:Src/ADCsrc.c  ****            /* acc1 +=  x[2] * y[1] */
 1658              		.loc 1 1319 17 discriminator 1 view .LVU615
 1659 01b8 36EE022A 		vadd.f32	s4, s12, s4
 1660              	.LVL197:
1321:Src/ADCsrc.c  ****            /* acc2 +=  x[3] * y[1] */
 1661              		.loc 1 1321 12 is_stmt 1 discriminator 1 view .LVU616
1321:Src/ADCsrc.c  ****            /* acc2 +=  x[3] * y[1] */
 1662              		.loc 1 1321 23 is_stmt 0 discriminator 1 view .LVU617
 1663 01bc 65EE072A 		vmul.f32	s5, s10, s14
1321:Src/ADCsrc.c  ****            /* acc2 +=  x[3] * y[1] */
 1664              		.loc 1 1321 17 discriminator 1 view .LVU618
 1665 01c0 72EEA32A 		vadd.f32	s5, s5, s7
 1666              	.LVL198:
1323:Src/ADCsrc.c  ****            /* acc3 +=  x[4] * y[1] */
 1667              		.loc 1 1323 12 is_stmt 1 discriminator 1 view .LVU619
1323:Src/ADCsrc.c  ****            /* acc3 +=  x[4] * y[1] */
 1668              		.loc 1 1323 23 is_stmt 0 discriminator 1 view .LVU620
 1669 01c4 24EE873A 		vmul.f32	s6, s9, s14
1323:Src/ADCsrc.c  ****            /* acc3 +=  x[4] * y[1] */
 1670              		.loc 1 1323 17 discriminator 1 view .LVU621
 1671 01c8 33EE043A 		vadd.f32	s6, s6, s8
 1672              	.LVL199:
1325:Src/ADCsrc.c  **** 
 1673              		.loc 1 1325 12 is_stmt 1 discriminator 1 view .LVU622
1325:Src/ADCsrc.c  **** 
 1674              		.loc 1 1325 23 is_stmt 0 discriminator 1 view .LVU623
 1675 01cc 27EE267A 		vmul.f32	s14, s14, s13
 1676              	.LVL200:
1325:Src/ADCsrc.c  **** 
 1677              		.loc 1 1325 17 discriminator 1 view .LVU624
 1678 01d0 77EE277A 		vadd.f32	s15, s14, s15
 1679              	.LVL201:
1328:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 190


 1680              		.loc 1 1328 12 is_stmt 1 discriminator 1 view .LVU625
1328:Src/ADCsrc.c  **** 
 1681              		.loc 1 1328 15 is_stmt 0 discriminator 1 view .LVU626
 1682 01d4 94ED027A 		vldr.32	s14, [r4, #8]
 1683              	.LVL202:
1331:Src/ADCsrc.c  **** 
 1684              		.loc 1 1331 12 is_stmt 1 discriminator 1 view .LVU627
1331:Src/ADCsrc.c  **** 
 1685              		.loc 1 1331 15 is_stmt 0 discriminator 1 view .LVU628
 1686 01d8 D1ED025A 		vldr.32	s11, [r1, #8]
 1687              	.LVL203:
1335:Src/ADCsrc.c  ****            /* acc1 +=  x[3] * y[2] */
 1688              		.loc 1 1335 12 is_stmt 1 discriminator 1 view .LVU629
1335:Src/ADCsrc.c  ****            /* acc1 +=  x[3] * y[2] */
 1689              		.loc 1 1335 23 is_stmt 0 discriminator 1 view .LVU630
 1690 01dc 25EE076A 		vmul.f32	s12, s10, s14
1335:Src/ADCsrc.c  ****            /* acc1 +=  x[3] * y[2] */
 1691              		.loc 1 1335 17 discriminator 1 view .LVU631
 1692 01e0 36EE026A 		vadd.f32	s12, s12, s4
 1693              	.LVL204:
1337:Src/ADCsrc.c  ****            /* acc2 +=  x[4] * y[2] */
 1694              		.loc 1 1337 12 is_stmt 1 discriminator 1 view .LVU632
1337:Src/ADCsrc.c  ****            /* acc2 +=  x[4] * y[2] */
 1695              		.loc 1 1337 23 is_stmt 0 discriminator 1 view .LVU633
 1696 01e4 64EE873A 		vmul.f32	s7, s9, s14
1337:Src/ADCsrc.c  ****            /* acc2 +=  x[4] * y[2] */
 1697              		.loc 1 1337 17 discriminator 1 view .LVU634
 1698 01e8 73EEA22A 		vadd.f32	s5, s7, s5
 1699              	.LVL205:
1339:Src/ADCsrc.c  ****            /* acc3 +=  x[5] * y[2] */
 1700              		.loc 1 1339 12 is_stmt 1 discriminator 1 view .LVU635
1339:Src/ADCsrc.c  ****            /* acc3 +=  x[5] * y[2] */
 1701              		.loc 1 1339 23 is_stmt 0 discriminator 1 view .LVU636
 1702 01ec 26EE874A 		vmul.f32	s8, s13, s14
1339:Src/ADCsrc.c  ****            /* acc3 +=  x[5] * y[2] */
 1703              		.loc 1 1339 17 discriminator 1 view .LVU637
 1704 01f0 34EE033A 		vadd.f32	s6, s8, s6
 1705              	.LVL206:
1341:Src/ADCsrc.c  **** 
 1706              		.loc 1 1341 12 is_stmt 1 discriminator 1 view .LVU638
1341:Src/ADCsrc.c  **** 
 1707              		.loc 1 1341 23 is_stmt 0 discriminator 1 view .LVU639
 1708 01f4 27EE257A 		vmul.f32	s14, s14, s11
 1709              	.LVL207:
1341:Src/ADCsrc.c  **** 
 1710              		.loc 1 1341 17 discriminator 1 view .LVU640
 1711 01f8 37EE277A 		vadd.f32	s14, s14, s15
 1712              	.LVL208:
1344:Src/ADCsrc.c  **** 
 1713              		.loc 1 1344 12 is_stmt 1 discriminator 1 view .LVU641
1344:Src/ADCsrc.c  **** 
 1714              		.loc 1 1344 15 is_stmt 0 discriminator 1 view .LVU642
 1715 01fc D4ED037A 		vldr.32	s15, [r4, #12]
 1716 0200 1034     		adds	r4, r4, #16
 1717              	.LVL209:
1347:Src/ADCsrc.c  **** 
 1718              		.loc 1 1347 12 is_stmt 1 discriminator 1 view .LVU643
ARM GAS  /tmp/ccgoDI2u.s 			page 191


1347:Src/ADCsrc.c  **** 
 1719              		.loc 1 1347 15 is_stmt 0 discriminator 1 view .LVU644
 1720 0202 91ED035A 		vldr.32	s10, [r1, #12]
 1721              	.LVL210:
1347:Src/ADCsrc.c  **** 
 1722              		.loc 1 1347 15 discriminator 1 view .LVU645
 1723 0206 1031     		adds	r1, r1, #16
 1724              	.LVL211:
1351:Src/ADCsrc.c  ****            /* acc1 +=  x[4] * y[3] */
 1725              		.loc 1 1351 12 is_stmt 1 discriminator 1 view .LVU646
1351:Src/ADCsrc.c  ****            /* acc1 +=  x[4] * y[3] */
 1726              		.loc 1 1351 23 is_stmt 0 discriminator 1 view .LVU647
 1727 0208 64EEA74A 		vmul.f32	s9, s9, s15
 1728              	.LVL212:
1351:Src/ADCsrc.c  ****            /* acc1 +=  x[4] * y[3] */
 1729              		.loc 1 1351 17 discriminator 1 view .LVU648
 1730 020c 34EE866A 		vadd.f32	s12, s9, s12
 1731              	.LVL213:
1353:Src/ADCsrc.c  ****            /* acc2 +=  x[5] * y[3] */
 1732              		.loc 1 1353 12 is_stmt 1 discriminator 1 view .LVU649
1353:Src/ADCsrc.c  ****            /* acc2 +=  x[5] * y[3] */
 1733              		.loc 1 1353 23 is_stmt 0 discriminator 1 view .LVU650
 1734 0210 66EEA73A 		vmul.f32	s7, s13, s15
1353:Src/ADCsrc.c  ****            /* acc2 +=  x[5] * y[3] */
 1735              		.loc 1 1353 17 discriminator 1 view .LVU651
 1736 0214 73EEA23A 		vadd.f32	s7, s7, s5
 1737              	.LVL214:
1355:Src/ADCsrc.c  ****            /* acc3 +=  x[6] * y[3] */
 1738              		.loc 1 1355 12 is_stmt 1 discriminator 1 view .LVU652
1355:Src/ADCsrc.c  ****            /* acc3 +=  x[6] * y[3] */
 1739              		.loc 1 1355 23 is_stmt 0 discriminator 1 view .LVU653
 1740 0218 25EEA74A 		vmul.f32	s8, s11, s15
1355:Src/ADCsrc.c  ****            /* acc3 +=  x[6] * y[3] */
 1741              		.loc 1 1355 17 discriminator 1 view .LVU654
 1742 021c 34EE034A 		vadd.f32	s8, s8, s6
 1743              	.LVL215:
1357:Src/ADCsrc.c  **** 
 1744              		.loc 1 1357 12 is_stmt 1 discriminator 1 view .LVU655
1357:Src/ADCsrc.c  **** 
 1745              		.loc 1 1357 23 is_stmt 0 discriminator 1 view .LVU656
 1746 0220 67EE857A 		vmul.f32	s15, s15, s10
 1747              	.LVL216:
1357:Src/ADCsrc.c  **** 
 1748              		.loc 1 1357 17 discriminator 1 view .LVU657
 1749 0224 77EE877A 		vadd.f32	s15, s15, s14
 1750              	.LVL217:
1360:Src/ADCsrc.c  **** 
 1751              		.loc 1 1360 17 is_stmt 1 discriminator 1 view .LVU658
1360:Src/ADCsrc.c  **** 
 1752              		.loc 1 1360 10 is_stmt 0 discriminator 1 view .LVU659
 1753 0228 BAF1010A 		subs	r10, r10, #1
 1754              	.LVL218:
1360:Src/ADCsrc.c  **** 
 1755              		.loc 1 1360 10 discriminator 1 view .LVU660
 1756 022c AAD1     		bne	.L93
1364:Src/ADCsrc.c  **** 
 1757              		.loc 1 1364 10 is_stmt 1 view .LVU661
ARM GAS  /tmp/ccgoDI2u.s 			page 192


1364:Src/ADCsrc.c  **** 
 1758              		.loc 1 1364 12 is_stmt 0 view .LVU662
 1759 022e 0CF00302 		and	r2, ip, #3
 1760              	.LVL219:
1366:Src/ADCsrc.c  ****          {
 1761              		.loc 1 1366 10 is_stmt 1 view .LVU663
1366:Src/ADCsrc.c  ****          {
 1762              		.loc 1 1366 15 is_stmt 0 view .LVU664
 1763 0232 7AE7     		b	.L94
 1764              	.LVL220:
 1765              	.L117:
1416:Src/ADCsrc.c  ****        }
1417:Src/ADCsrc.c  **** 
1418:Src/ADCsrc.c  ****        /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
1419:Src/ADCsrc.c  ****         ** No loop unrolling is used. */
1420:Src/ADCsrc.c  ****        blkCnt = blockSize2 % 0x4u;
 1766              		.loc 1 1420 8 is_stmt 1 view .LVU665
 1767              		.loc 1 1420 15 is_stmt 0 view .LVU666
 1768 0234 0EF00309 		and	r9, lr, #3
 1769              	.LVL221:
1421:Src/ADCsrc.c  **** 
1422:Src/ADCsrc.c  ****        while(blkCnt > 0u)
 1770              		.loc 1 1422 8 is_stmt 1 view .LVU667
 1771              		.loc 1 1422 13 is_stmt 0 view .LVU668
 1772 0238 16E0     		b	.L97
 1773              	.LVL222:
 1774              	.L118:
1423:Src/ADCsrc.c  ****        {
1424:Src/ADCsrc.c  ****          /* Accumulator is made zero for every iteration */
1425:Src/ADCsrc.c  ****          sum = 0.0f;
1426:Src/ADCsrc.c  **** 
1427:Src/ADCsrc.c  ****          /* Apply loop unrolling and compute 4 MACs simultaneously. */
1428:Src/ADCsrc.c  ****          k = srcBLen >> 2u;
1429:Src/ADCsrc.c  **** 
1430:Src/ADCsrc.c  ****          /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1431:Src/ADCsrc.c  ****           ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1432:Src/ADCsrc.c  ****          while(k > 0u)
1433:Src/ADCsrc.c  ****          {
1434:Src/ADCsrc.c  ****            /* Perform the multiply-accumulates */
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
1438:Src/ADCsrc.c  ****            sum += *px++ * *py++;
1439:Src/ADCsrc.c  **** 
1440:Src/ADCsrc.c  ****            /* Decrement the loop counter */
1441:Src/ADCsrc.c  ****            k--;
1442:Src/ADCsrc.c  ****          }
1443:Src/ADCsrc.c  **** 
1444:Src/ADCsrc.c  ****          /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
1445:Src/ADCsrc.c  ****           ** No loop unrolling is used. */
1446:Src/ADCsrc.c  ****          k = srcBLen % 0x4u;
 1775              		.loc 1 1446 10 is_stmt 1 view .LVU669
 1776              		.loc 1 1446 12 is_stmt 0 view .LVU670
 1777 023a 0CF00302 		and	r2, ip, #3
 1778              	.LVL223:
1447:Src/ADCsrc.c  **** 
1448:Src/ADCsrc.c  ****          while(k > 0u)
ARM GAS  /tmp/ccgoDI2u.s 			page 193


 1779              		.loc 1 1448 10 is_stmt 1 view .LVU671
 1780              		.loc 1 1448 15 is_stmt 0 view .LVU672
 1781 023e 08E0     		b	.L100
 1782              	.L101:
1449:Src/ADCsrc.c  ****          {
1450:Src/ADCsrc.c  ****            /* Perform the multiply-accumulate */
1451:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1783              		.loc 1 1451 12 is_stmt 1 view .LVU673
 1784              	.LVL224:
 1785              		.loc 1 1451 19 is_stmt 0 view .LVU674
 1786 0240 B4EC017A 		vldmia.32	r4!, {s14}
 1787              	.LVL225:
 1788              		.loc 1 1451 27 view .LVU675
 1789 0244 F1EC016A 		vldmia.32	r1!, {s13}
 1790              	.LVL226:
 1791              		.loc 1 1451 25 view .LVU676
 1792 0248 27EE267A 		vmul.f32	s14, s14, s13
 1793              		.loc 1 1451 16 view .LVU677
 1794 024c 77EE877A 		vadd.f32	s15, s15, s14
 1795              	.LVL227:
1452:Src/ADCsrc.c  **** 
1453:Src/ADCsrc.c  ****            /* Decrement the loop counter */
1454:Src/ADCsrc.c  ****            k--;
 1796              		.loc 1 1454 12 is_stmt 1 view .LVU678
 1797              		.loc 1 1454 13 is_stmt 0 view .LVU679
 1798 0250 013A     		subs	r2, r2, #1
 1799              	.LVL228:
 1800              	.L100:
1448:Src/ADCsrc.c  ****          {
 1801              		.loc 1 1448 15 is_stmt 1 view .LVU680
 1802 0252 002A     		cmp	r2, #0
 1803 0254 F4D1     		bne	.L101
1455:Src/ADCsrc.c  ****          }
1456:Src/ADCsrc.c  **** 
1457:Src/ADCsrc.c  ****          /* Store the result in the accumulator in the destination buffer. */
1458:Src/ADCsrc.c  ****          *pOut = sum;
 1804              		.loc 1 1458 10 view .LVU681
 1805              		.loc 1 1458 16 is_stmt 0 view .LVU682
 1806 0256 C5ED007A 		vstr.32	s15, [r5]
1459:Src/ADCsrc.c  ****          /* Destination pointer is updated according to the address modifier, inc */
1460:Src/ADCsrc.c  ****          pOut += inc;
 1807              		.loc 1 1460 10 is_stmt 1 view .LVU683
 1808              		.loc 1 1460 15 is_stmt 0 view .LVU684
 1809 025a 05EB8605 		add	r5, r5, r6, lsl #2
 1810              	.LVL229:
1461:Src/ADCsrc.c  **** 
1462:Src/ADCsrc.c  ****          /* Increment the pointer pIn1 index, count by 1 */
1463:Src/ADCsrc.c  ****          count++;
 1811              		.loc 1 1463 10 is_stmt 1 view .LVU685
 1812              		.loc 1 1463 15 is_stmt 0 view .LVU686
 1813 025e 0133     		adds	r3, r3, #1
 1814              	.LVL230:
1464:Src/ADCsrc.c  **** 
1465:Src/ADCsrc.c  ****          /* Update the inputA and inputB pointers for next MAC calculation */
1466:Src/ADCsrc.c  ****          px = pIn1 + count;
 1815              		.loc 1 1466 10 is_stmt 1 view .LVU687
 1816              		.loc 1 1466 13 is_stmt 0 view .LVU688
ARM GAS  /tmp/ccgoDI2u.s 			page 194


 1817 0260 00EB8304 		add	r4, r0, r3, lsl #2
 1818              	.LVL231:
1467:Src/ADCsrc.c  ****          py = pIn2;
 1819              		.loc 1 1467 10 is_stmt 1 view .LVU689
1468:Src/ADCsrc.c  **** 
1469:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1470:Src/ADCsrc.c  ****          blkCnt--;
 1820              		.loc 1 1470 10 view .LVU690
 1821              		.loc 1 1470 16 is_stmt 0 view .LVU691
 1822 0264 09F1FF39 		add	r9, r9, #-1
 1823              	.LVL232:
 1824              	.L97:
1422:Src/ADCsrc.c  ****        {
 1825              		.loc 1 1422 13 is_stmt 1 view .LVU692
 1826 0268 B9F1000F 		cmp	r9, #0
 1827 026c 4BD0     		beq	.L103
1425:Src/ADCsrc.c  **** 
 1828              		.loc 1 1425 10 view .LVU693
 1829              	.LVL233:
1428:Src/ADCsrc.c  **** 
 1830              		.loc 1 1428 10 view .LVU694
1428:Src/ADCsrc.c  **** 
 1831              		.loc 1 1428 12 is_stmt 0 view .LVU695
 1832 026e 4FEA9C02 		lsr	r2, ip, #2
 1833              	.LVL234:
1432:Src/ADCsrc.c  ****          {
 1834              		.loc 1 1432 10 is_stmt 1 view .LVU696
1432:Src/ADCsrc.c  ****          {
 1835              		.loc 1 1432 15 is_stmt 0 view .LVU697
 1836 0272 5946     		mov	r1, fp
1425:Src/ADCsrc.c  **** 
 1837              		.loc 1 1425 14 view .LVU698
 1838 0274 DFED497A 		vldr.32	s15, .L120
 1839              	.LVL235:
 1840              	.L98:
1432:Src/ADCsrc.c  ****          {
 1841              		.loc 1 1432 15 is_stmt 1 view .LVU699
 1842 0278 002A     		cmp	r2, #0
 1843 027a DED0     		beq	.L118
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1844              		.loc 1 1435 12 view .LVU700
 1845              	.LVL236:
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1846              		.loc 1 1435 19 is_stmt 0 view .LVU701
 1847 027c 94ED007A 		vldr.32	s14, [r4]
 1848              	.LVL237:
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1849              		.loc 1 1435 27 view .LVU702
 1850 0280 D1ED006A 		vldr.32	s13, [r1]
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1851              		.loc 1 1435 25 view .LVU703
 1852 0284 27EE267A 		vmul.f32	s14, s14, s13
1435:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1853              		.loc 1 1435 16 view .LVU704
 1854 0288 77EE877A 		vadd.f32	s15, s15, s14
 1855              	.LVL238:
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
ARM GAS  /tmp/ccgoDI2u.s 			page 195


 1856              		.loc 1 1436 12 is_stmt 1 view .LVU705
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1857              		.loc 1 1436 19 is_stmt 0 view .LVU706
 1858 028c 94ED017A 		vldr.32	s14, [r4, #4]
 1859              	.LVL239:
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1860              		.loc 1 1436 27 view .LVU707
 1861 0290 D1ED016A 		vldr.32	s13, [r1, #4]
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1862              		.loc 1 1436 25 view .LVU708
 1863 0294 27EE267A 		vmul.f32	s14, s14, s13
1436:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1864              		.loc 1 1436 16 view .LVU709
 1865 0298 77EE877A 		vadd.f32	s15, s15, s14
 1866              	.LVL240:
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1867              		.loc 1 1437 12 is_stmt 1 view .LVU710
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1868              		.loc 1 1437 19 is_stmt 0 view .LVU711
 1869 029c 94ED027A 		vldr.32	s14, [r4, #8]
 1870              	.LVL241:
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1871              		.loc 1 1437 27 view .LVU712
 1872 02a0 D1ED026A 		vldr.32	s13, [r1, #8]
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1873              		.loc 1 1437 25 view .LVU713
 1874 02a4 27EE267A 		vmul.f32	s14, s14, s13
1437:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1875              		.loc 1 1437 16 view .LVU714
 1876 02a8 77EE877A 		vadd.f32	s15, s15, s14
 1877              	.LVL242:
1438:Src/ADCsrc.c  **** 
 1878              		.loc 1 1438 12 is_stmt 1 view .LVU715
1438:Src/ADCsrc.c  **** 
 1879              		.loc 1 1438 19 is_stmt 0 view .LVU716
 1880 02ac 94ED037A 		vldr.32	s14, [r4, #12]
 1881              	.LVL243:
1438:Src/ADCsrc.c  **** 
 1882              		.loc 1 1438 27 view .LVU717
 1883 02b0 D1ED036A 		vldr.32	s13, [r1, #12]
1438:Src/ADCsrc.c  **** 
 1884              		.loc 1 1438 25 view .LVU718
 1885 02b4 27EE267A 		vmul.f32	s14, s14, s13
1438:Src/ADCsrc.c  **** 
 1886              		.loc 1 1438 16 view .LVU719
 1887 02b8 77EE877A 		vadd.f32	s15, s15, s14
 1888              	.LVL244:
1441:Src/ADCsrc.c  ****          }
 1889              		.loc 1 1441 12 is_stmt 1 view .LVU720
1441:Src/ADCsrc.c  ****          }
 1890              		.loc 1 1441 13 is_stmt 0 view .LVU721
 1891 02bc 013A     		subs	r2, r2, #1
 1892              	.LVL245:
1438:Src/ADCsrc.c  **** 
 1893              		.loc 1 1438 30 view .LVU722
 1894 02be 1031     		adds	r1, r1, #16
 1895              	.LVL246:
ARM GAS  /tmp/ccgoDI2u.s 			page 196


1438:Src/ADCsrc.c  **** 
 1896              		.loc 1 1438 22 view .LVU723
 1897 02c0 1034     		adds	r4, r4, #16
 1898              	.LVL247:
1438:Src/ADCsrc.c  **** 
 1899              		.loc 1 1438 22 view .LVU724
 1900 02c2 D9E7     		b	.L98
 1901              	.LVL248:
 1902              	.L104:
1471:Src/ADCsrc.c  ****        }
1472:Src/ADCsrc.c  ****      }
1473:Src/ADCsrc.c  ****      else
1474:Src/ADCsrc.c  ****      {
1475:Src/ADCsrc.c  ****        /* If the srcBLen is not a multiple of 4,
1476:Src/ADCsrc.c  ****         * the blockSize2 loop cannot be unrolled by 4 */
1477:Src/ADCsrc.c  ****        blkCnt = blockSize2;
1478:Src/ADCsrc.c  **** 
1479:Src/ADCsrc.c  ****        while(blkCnt > 0u)
1480:Src/ADCsrc.c  ****        {
1481:Src/ADCsrc.c  ****          /* Accumulator is made zero for every iteration */
1482:Src/ADCsrc.c  ****          sum = 0.0f;
1483:Src/ADCsrc.c  **** 
1484:Src/ADCsrc.c  ****          /* Loop over srcBLen */
1485:Src/ADCsrc.c  ****          k = srcBLen;
1486:Src/ADCsrc.c  **** 
1487:Src/ADCsrc.c  ****          while(k > 0u)
1488:Src/ADCsrc.c  ****          {
1489:Src/ADCsrc.c  ****            /* Perform the multiply-accumulate */
1490:Src/ADCsrc.c  ****            sum += *px++ * *py++;
 1903              		.loc 1 1490 12 is_stmt 1 view .LVU725
 1904              		.loc 1 1490 19 is_stmt 0 view .LVU726
 1905 02c4 F1EC017A 		vldmia.32	r1!, {s15}
 1906              	.LVL249:
 1907              		.loc 1 1490 27 view .LVU727
 1908 02c8 F4EC016A 		vldmia.32	r4!, {s13}
 1909              	.LVL250:
 1910              		.loc 1 1490 25 view .LVU728
 1911 02cc 67EEA67A 		vmul.f32	s15, s15, s13
 1912              		.loc 1 1490 16 view .LVU729
 1913 02d0 37EE277A 		vadd.f32	s14, s14, s15
 1914              	.LVL251:
1491:Src/ADCsrc.c  **** 
1492:Src/ADCsrc.c  ****            /* Decrement the loop counter */
1493:Src/ADCsrc.c  ****            k--;
 1915              		.loc 1 1493 12 is_stmt 1 view .LVU730
 1916              		.loc 1 1493 13 is_stmt 0 view .LVU731
 1917 02d4 08F1FF38 		add	r8, r8, #-1
 1918              	.LVL252:
 1919              	.L105:
1487:Src/ADCsrc.c  ****          {
 1920              		.loc 1 1487 15 is_stmt 1 view .LVU732
 1921 02d8 B8F1000F 		cmp	r8, #0
 1922 02dc F2D1     		bne	.L104
1494:Src/ADCsrc.c  ****          }
1495:Src/ADCsrc.c  **** 
1496:Src/ADCsrc.c  ****          /* Store the result in the accumulator in the destination buffer. */
1497:Src/ADCsrc.c  ****          *pOut = sum;
ARM GAS  /tmp/ccgoDI2u.s 			page 197


 1923              		.loc 1 1497 10 view .LVU733
 1924              		.loc 1 1497 16 is_stmt 0 view .LVU734
 1925 02de 85ED007A 		vstr.32	s14, [r5]
1498:Src/ADCsrc.c  ****          /* Destination pointer is updated according to the address modifier, inc */
1499:Src/ADCsrc.c  ****          pOut += inc;
 1926              		.loc 1 1499 10 is_stmt 1 view .LVU735
 1927              		.loc 1 1499 15 is_stmt 0 view .LVU736
 1928 02e2 05EB8605 		add	r5, r5, r6, lsl #2
 1929              	.LVL253:
1500:Src/ADCsrc.c  **** 
1501:Src/ADCsrc.c  ****          /* Increment the pointer pIn1 index, count by 1 */
1502:Src/ADCsrc.c  ****          count++;
 1930              		.loc 1 1502 10 is_stmt 1 view .LVU737
 1931              		.loc 1 1502 15 is_stmt 0 view .LVU738
 1932 02e6 0133     		adds	r3, r3, #1
 1933              	.LVL254:
1503:Src/ADCsrc.c  **** 
1504:Src/ADCsrc.c  ****          /* Update the inputA and inputB pointers for next MAC calculation */
1505:Src/ADCsrc.c  ****          px = pIn1 + count;
 1934              		.loc 1 1505 10 is_stmt 1 view .LVU739
 1935              		.loc 1 1505 13 is_stmt 0 view .LVU740
 1936 02e8 00EB8301 		add	r1, r0, r3, lsl #2
 1937              	.LVL255:
1506:Src/ADCsrc.c  ****          py = pIn2;
 1938              		.loc 1 1506 10 is_stmt 1 view .LVU741
1507:Src/ADCsrc.c  **** 
1508:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1509:Src/ADCsrc.c  ****          blkCnt--;
 1939              		.loc 1 1509 10 view .LVU742
 1940              		.loc 1 1509 16 is_stmt 0 view .LVU743
 1941 02ec 09F1FF39 		add	r9, r9, #-1
 1942              	.LVL256:
 1943              	.L91:
1479:Src/ADCsrc.c  ****        {
 1944              		.loc 1 1479 13 is_stmt 1 view .LVU744
 1945 02f0 B9F1000F 		cmp	r9, #0
 1946 02f4 07D0     		beq	.L103
1485:Src/ADCsrc.c  **** 
 1947              		.loc 1 1485 12 is_stmt 0 view .LVU745
 1948 02f6 E046     		mov	r8, ip
 1949 02f8 5C46     		mov	r4, fp
1482:Src/ADCsrc.c  **** 
 1950              		.loc 1 1482 14 view .LVU746
 1951 02fa 9FED287A 		vldr.32	s14, .L120
 1952 02fe EBE7     		b	.L105
 1953              	.LVL257:
 1954              	.L112:
1477:Src/ADCsrc.c  **** 
 1955              		.loc 1 1477 15 view .LVU747
 1956 0300 F146     		mov	r9, lr
1255:Src/ADCsrc.c  **** 
 1957              		.loc 1 1255 9 view .LVU748
 1958 0302 0146     		mov	r1, r0
 1959 0304 F4E7     		b	.L91
 1960              	.LVL258:
 1961              	.L103:
1510:Src/ADCsrc.c  ****        }
ARM GAS  /tmp/ccgoDI2u.s 			page 198


1511:Src/ADCsrc.c  ****      }
1512:Src/ADCsrc.c  **** 
1513:Src/ADCsrc.c  ****      /* --------------------------
1514:Src/ADCsrc.c  ****       * Initializations of stage3
1515:Src/ADCsrc.c  ****       * -------------------------*/
1516:Src/ADCsrc.c  **** 
1517:Src/ADCsrc.c  ****      /* sum += x[srcALen-srcBLen+1] * y[0] + x[srcALen-srcBLen+2] * y[1] +...+ x[srcALen-1] * y[src
1518:Src/ADCsrc.c  ****       * sum += x[srcALen-srcBLen+2] * y[0] + x[srcALen-srcBLen+3] * y[1] +...+ x[srcALen-1] * y[src
1519:Src/ADCsrc.c  ****       * ....
1520:Src/ADCsrc.c  ****       * sum +=  x[srcALen-2] * y[0] + x[srcALen-1] * y[1]
1521:Src/ADCsrc.c  ****       * sum +=  x[srcALen-1] * y[0]
1522:Src/ADCsrc.c  ****       */
1523:Src/ADCsrc.c  **** 
1524:Src/ADCsrc.c  ****      /* In this stage the MAC operations are decreased by 1 for every iteration.
1525:Src/ADCsrc.c  ****         The count variable holds the number of MAC operations performed */
1526:Src/ADCsrc.c  ****      count = srcBLen - 1u;
 1962              		.loc 1 1526 6 is_stmt 1 view .LVU749
1527:Src/ADCsrc.c  **** 
1528:Src/ADCsrc.c  ****      /* Working pointer of inputA */
1529:Src/ADCsrc.c  ****      pSrc1 = pIn1 + (srcALen - (srcBLen - 1u));
 1963              		.loc 1 1529 6 view .LVU750
 1964              		.loc 1 1529 12 is_stmt 0 view .LVU751
 1965 0306 00EB8E00 		add	r0, r0, lr, lsl #2
 1966              	.LVL259:
1530:Src/ADCsrc.c  ****      px = pSrc1;
 1967              		.loc 1 1530 6 is_stmt 1 view .LVU752
1531:Src/ADCsrc.c  **** 
1532:Src/ADCsrc.c  ****      /* Working pointer of inputB */
1533:Src/ADCsrc.c  ****      py = pIn2;
 1968              		.loc 1 1533 6 view .LVU753
1534:Src/ADCsrc.c  **** 
1535:Src/ADCsrc.c  ****      /* -------------------
1536:Src/ADCsrc.c  ****       * Stage3 process
1537:Src/ADCsrc.c  ****       * ------------------*/
1538:Src/ADCsrc.c  **** 
1539:Src/ADCsrc.c  ****      while(blockSize3 > 0u)
 1969              		.loc 1 1539 6 view .LVU754
1161:Src/ADCsrc.c  **** 
 1970              		.loc 1 1161 17 is_stmt 0 view .LVU755
 1971 030a BC46     		mov	ip, r7
 1972              	.LVL260:
 1973              		.loc 1 1539 11 view .LVU756
 1974 030c 3AE0     		b	.L106
 1975              	.LVL261:
 1976              	.L108:
1540:Src/ADCsrc.c  ****      {
1541:Src/ADCsrc.c  ****        /* Accumulator is made zero for every iteration */
1542:Src/ADCsrc.c  ****        sum = 0.0f;
1543:Src/ADCsrc.c  **** 
1544:Src/ADCsrc.c  ****        /* Apply loop unrolling and compute 4 MACs simultaneously. */
1545:Src/ADCsrc.c  ****        k = count >> 2u;
1546:Src/ADCsrc.c  **** 
1547:Src/ADCsrc.c  ****        /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
1548:Src/ADCsrc.c  ****         ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1549:Src/ADCsrc.c  ****        while(k > 0u)
1550:Src/ADCsrc.c  ****        {
1551:Src/ADCsrc.c  ****          /* Perform the multiply-accumulates */
ARM GAS  /tmp/ccgoDI2u.s 			page 199


1552:Src/ADCsrc.c  ****          /* sum += x[srcALen - srcBLen + 4] * y[3] */
1553:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1977              		.loc 1 1553 10 is_stmt 1 view .LVU757
 1978              		.loc 1 1553 17 is_stmt 0 view .LVU758
 1979 030e 93ED007A 		vldr.32	s14, [r3]
 1980              	.LVL262:
 1981              		.loc 1 1553 25 view .LVU759
 1982 0312 D1ED006A 		vldr.32	s13, [r1]
 1983              		.loc 1 1553 23 view .LVU760
 1984 0316 27EE267A 		vmul.f32	s14, s14, s13
 1985              		.loc 1 1553 14 view .LVU761
 1986 031a 77EE877A 		vadd.f32	s15, s15, s14
 1987              	.LVL263:
1554:Src/ADCsrc.c  ****          /* sum += x[srcALen - srcBLen + 3] * y[2] */
1555:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1988              		.loc 1 1555 10 is_stmt 1 view .LVU762
 1989              		.loc 1 1555 17 is_stmt 0 view .LVU763
 1990 031e 93ED017A 		vldr.32	s14, [r3, #4]
 1991              	.LVL264:
 1992              		.loc 1 1555 25 view .LVU764
 1993 0322 D1ED016A 		vldr.32	s13, [r1, #4]
 1994              		.loc 1 1555 23 view .LVU765
 1995 0326 27EE267A 		vmul.f32	s14, s14, s13
 1996              		.loc 1 1555 14 view .LVU766
 1997 032a 77EE877A 		vadd.f32	s15, s15, s14
 1998              	.LVL265:
1556:Src/ADCsrc.c  ****          /* sum += x[srcALen - srcBLen + 2] * y[1] */
1557:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 1999              		.loc 1 1557 10 is_stmt 1 view .LVU767
 2000              		.loc 1 1557 17 is_stmt 0 view .LVU768
 2001 032e 93ED027A 		vldr.32	s14, [r3, #8]
 2002              	.LVL266:
 2003              		.loc 1 1557 25 view .LVU769
 2004 0332 D1ED026A 		vldr.32	s13, [r1, #8]
 2005              		.loc 1 1557 23 view .LVU770
 2006 0336 27EE267A 		vmul.f32	s14, s14, s13
 2007              		.loc 1 1557 14 view .LVU771
 2008 033a 77EE877A 		vadd.f32	s15, s15, s14
 2009              	.LVL267:
1558:Src/ADCsrc.c  ****          /* sum += x[srcALen - srcBLen + 1] * y[0] */
1559:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 2010              		.loc 1 1559 10 is_stmt 1 view .LVU772
 2011              		.loc 1 1559 17 is_stmt 0 view .LVU773
 2012 033e 93ED037A 		vldr.32	s14, [r3, #12]
 2013              	.LVL268:
 2014              		.loc 1 1559 25 view .LVU774
 2015 0342 D1ED036A 		vldr.32	s13, [r1, #12]
 2016              		.loc 1 1559 23 view .LVU775
 2017 0346 27EE267A 		vmul.f32	s14, s14, s13
 2018              		.loc 1 1559 14 view .LVU776
 2019 034a 77EE877A 		vadd.f32	s15, s15, s14
 2020              	.LVL269:
1560:Src/ADCsrc.c  **** 
1561:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1562:Src/ADCsrc.c  ****          k--;
 2021              		.loc 1 1562 10 is_stmt 1 view .LVU777
 2022              		.loc 1 1562 11 is_stmt 0 view .LVU778
ARM GAS  /tmp/ccgoDI2u.s 			page 200


 2023 034e 013C     		subs	r4, r4, #1
 2024              	.LVL270:
1559:Src/ADCsrc.c  **** 
 2025              		.loc 1 1559 28 view .LVU779
 2026 0350 1031     		adds	r1, r1, #16
 2027              	.LVL271:
1559:Src/ADCsrc.c  **** 
 2028              		.loc 1 1559 20 view .LVU780
 2029 0352 1033     		adds	r3, r3, #16
 2030              	.LVL272:
 2031              	.L107:
1549:Src/ADCsrc.c  ****        {
 2032              		.loc 1 1549 13 is_stmt 1 view .LVU781
 2033 0354 002C     		cmp	r4, #0
 2034 0356 DAD1     		bne	.L108
1563:Src/ADCsrc.c  ****        }
1564:Src/ADCsrc.c  **** 
1565:Src/ADCsrc.c  ****        /* If the count is not a multiple of 4, compute any remaining MACs here.
1566:Src/ADCsrc.c  ****         ** No loop unrolling is used. */
1567:Src/ADCsrc.c  ****        k = count % 0x4u;
 2035              		.loc 1 1567 8 view .LVU782
 2036              		.loc 1 1567 10 is_stmt 0 view .LVU783
 2037 0358 07F00304 		and	r4, r7, #3
 2038              	.LVL273:
1568:Src/ADCsrc.c  **** 
1569:Src/ADCsrc.c  ****        while(k > 0u)
 2039              		.loc 1 1569 8 is_stmt 1 view .LVU784
 2040              		.loc 1 1569 13 is_stmt 0 view .LVU785
 2041 035c 08E0     		b	.L109
 2042              	.L110:
1570:Src/ADCsrc.c  ****        {
1571:Src/ADCsrc.c  ****          /* Perform the multiply-accumulates */
1572:Src/ADCsrc.c  ****          sum += *px++ * *py++;
 2043              		.loc 1 1572 10 is_stmt 1 view .LVU786
 2044              	.LVL274:
 2045              		.loc 1 1572 17 is_stmt 0 view .LVU787
 2046 035e B3EC017A 		vldmia.32	r3!, {s14}
 2047              	.LVL275:
 2048              		.loc 1 1572 25 view .LVU788
 2049 0362 F1EC016A 		vldmia.32	r1!, {s13}
 2050              	.LVL276:
 2051              		.loc 1 1572 23 view .LVU789
 2052 0366 27EE267A 		vmul.f32	s14, s14, s13
 2053              		.loc 1 1572 14 view .LVU790
 2054 036a 77EE877A 		vadd.f32	s15, s15, s14
 2055              	.LVL277:
1573:Src/ADCsrc.c  **** 
1574:Src/ADCsrc.c  ****          /* Decrement the loop counter */
1575:Src/ADCsrc.c  ****          k--;
 2056              		.loc 1 1575 10 is_stmt 1 view .LVU791
 2057              		.loc 1 1575 11 is_stmt 0 view .LVU792
 2058 036e 013C     		subs	r4, r4, #1
 2059              	.LVL278:
 2060              	.L109:
1569:Src/ADCsrc.c  ****        {
 2061              		.loc 1 1569 13 is_stmt 1 view .LVU793
 2062 0370 002C     		cmp	r4, #0
ARM GAS  /tmp/ccgoDI2u.s 			page 201


 2063 0372 F4D1     		bne	.L110
1576:Src/ADCsrc.c  ****        }
1577:Src/ADCsrc.c  **** 
1578:Src/ADCsrc.c  ****        /* Store the result in the accumulator in the destination buffer. */
1579:Src/ADCsrc.c  ****        *pOut = sum;
 2064              		.loc 1 1579 8 view .LVU794
 2065              		.loc 1 1579 14 is_stmt 0 view .LVU795
 2066 0374 C5ED007A 		vstr.32	s15, [r5]
1580:Src/ADCsrc.c  ****        /* Destination pointer is updated according to the address modifier, inc */
1581:Src/ADCsrc.c  ****        pOut += inc;
 2067              		.loc 1 1581 8 is_stmt 1 view .LVU796
 2068              		.loc 1 1581 13 is_stmt 0 view .LVU797
 2069 0378 05EB8605 		add	r5, r5, r6, lsl #2
 2070              	.LVL279:
1582:Src/ADCsrc.c  **** 
1583:Src/ADCsrc.c  ****        /* Update the inputA and inputB pointers for next MAC calculation */
1584:Src/ADCsrc.c  ****        px = ++pSrc1;
 2071              		.loc 1 1584 8 is_stmt 1 view .LVU798
 2072              		.loc 1 1584 11 is_stmt 0 view .LVU799
 2073 037c 0430     		adds	r0, r0, #4
 2074              	.LVL280:
1585:Src/ADCsrc.c  ****        py = pIn2;
 2075              		.loc 1 1585 8 is_stmt 1 view .LVU800
1586:Src/ADCsrc.c  **** 
1587:Src/ADCsrc.c  ****        /* Decrement the MAC count */
1588:Src/ADCsrc.c  ****        count--;
 2076              		.loc 1 1588 8 view .LVU801
 2077              		.loc 1 1588 13 is_stmt 0 view .LVU802
 2078 037e 013F     		subs	r7, r7, #1
 2079              	.LVL281:
1589:Src/ADCsrc.c  **** 
1590:Src/ADCsrc.c  ****        /* Decrement the loop counter */
1591:Src/ADCsrc.c  ****        blockSize3--;
 2080              		.loc 1 1591 8 is_stmt 1 view .LVU803
 2081              		.loc 1 1591 18 is_stmt 0 view .LVU804
 2082 0380 0CF1FF3C 		add	ip, ip, #-1
 2083              	.LVL282:
 2084              	.L106:
1539:Src/ADCsrc.c  ****      {
 2085              		.loc 1 1539 11 is_stmt 1 view .LVU805
 2086 0384 BCF1000F 		cmp	ip, #0
 2087 0388 05D0     		beq	.L119
1542:Src/ADCsrc.c  **** 
 2088              		.loc 1 1542 8 view .LVU806
 2089              	.LVL283:
1545:Src/ADCsrc.c  **** 
 2090              		.loc 1 1545 8 view .LVU807
1545:Src/ADCsrc.c  **** 
 2091              		.loc 1 1545 10 is_stmt 0 view .LVU808
 2092 038a BC08     		lsrs	r4, r7, #2
 2093              	.LVL284:
1549:Src/ADCsrc.c  ****        {
 2094              		.loc 1 1549 8 is_stmt 1 view .LVU809
1549:Src/ADCsrc.c  ****        {
 2095              		.loc 1 1549 13 is_stmt 0 view .LVU810
 2096 038c 5946     		mov	r1, fp
 2097 038e 0346     		mov	r3, r0
ARM GAS  /tmp/ccgoDI2u.s 			page 202


1542:Src/ADCsrc.c  **** 
 2098              		.loc 1 1542 12 view .LVU811
 2099 0390 DFED027A 		vldr.32	s15, .L120
1549:Src/ADCsrc.c  ****        {
 2100              		.loc 1 1549 13 view .LVU812
 2101 0394 DEE7     		b	.L107
 2102              	.LVL285:
 2103              	.L119:
1592:Src/ADCsrc.c  ****      }
1593:Src/ADCsrc.c  **** 
1594:Src/ADCsrc.c  ****    #else
1595:Src/ADCsrc.c  **** 
1596:Src/ADCsrc.c  ****      /* Run the below code for Cortex-M0 */
1597:Src/ADCsrc.c  **** 
1598:Src/ADCsrc.c  ****      float32_t *pIn1 = pSrcA;                       /* inputA pointer */
1599:Src/ADCsrc.c  ****      float32_t *pIn2 = pSrcB + (srcBLen - 1u);      /* inputB pointer */
1600:Src/ADCsrc.c  ****      float32_t sum;                                 /* Accumulator */
1601:Src/ADCsrc.c  ****      uint32_t i = 0u, j;                            /* loop counters */
1602:Src/ADCsrc.c  ****      uint32_t inv = 0u;                             /* Reverse order flag */
1603:Src/ADCsrc.c  ****      uint32_t tot = 0u;                             /* Length */
1604:Src/ADCsrc.c  **** 
1605:Src/ADCsrc.c  ****      /* The algorithm implementation is based on the lengths of the inputs. */
1606:Src/ADCsrc.c  ****      /* srcB is always made to slide across srcA. */
1607:Src/ADCsrc.c  ****      /* So srcBLen is always considered as shorter or equal to srcALen */
1608:Src/ADCsrc.c  ****      /* But CORR(x, y) is reverse of CORR(y, x) */
1609:Src/ADCsrc.c  ****      /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer
1610:Src/ADCsrc.c  ****      /* and a varaible, inv is set to 1 */
1611:Src/ADCsrc.c  ****      /* If lengths are not equal then zero pad has to be done to  make the two
1612:Src/ADCsrc.c  ****       * inputs of same length. But to improve the performance, we assume zeroes
1613:Src/ADCsrc.c  ****       * in the output instead of zero padding either of the the inputs*/
1614:Src/ADCsrc.c  ****      /* If srcALen > srcBLen, (srcALen - srcBLen) zeroes has to included in the
1615:Src/ADCsrc.c  ****       * starting of the output buffer */
1616:Src/ADCsrc.c  ****      /* If srcALen < srcBLen, (srcALen - srcBLen) zeroes has to included in the
1617:Src/ADCsrc.c  ****       * ending of the output buffer */
1618:Src/ADCsrc.c  ****      /* Once the zero padding is done the remaining of the output is calcualted
1619:Src/ADCsrc.c  ****       * using convolution but with the shorter signal time shifted. */
1620:Src/ADCsrc.c  **** 
1621:Src/ADCsrc.c  ****      /* Calculate the length of the remaining sequence */
1622:Src/ADCsrc.c  ****      tot = ((srcALen + srcBLen) - 2u);
1623:Src/ADCsrc.c  **** 
1624:Src/ADCsrc.c  ****      if(srcALen > srcBLen)
1625:Src/ADCsrc.c  ****      {
1626:Src/ADCsrc.c  ****        /* Calculating the number of zeros to be padded to the output */
1627:Src/ADCsrc.c  ****        j = srcALen - srcBLen;
1628:Src/ADCsrc.c  **** 
1629:Src/ADCsrc.c  ****        /* Initialise the pointer after zero padding */
1630:Src/ADCsrc.c  ****        pDst += j;
1631:Src/ADCsrc.c  ****      }
1632:Src/ADCsrc.c  **** 
1633:Src/ADCsrc.c  ****      else if(srcALen < srcBLen)
1634:Src/ADCsrc.c  ****      {
1635:Src/ADCsrc.c  ****        /* Initialization to inputB pointer */
1636:Src/ADCsrc.c  ****        pIn1 = pSrcB;
1637:Src/ADCsrc.c  **** 
1638:Src/ADCsrc.c  ****        /* Initialization to the end of inputA pointer */
1639:Src/ADCsrc.c  ****        pIn2 = pSrcA + (srcALen - 1u);
1640:Src/ADCsrc.c  **** 
ARM GAS  /tmp/ccgoDI2u.s 			page 203


1641:Src/ADCsrc.c  ****        /* Initialisation of the pointer after zero padding */
1642:Src/ADCsrc.c  ****        pDst = pDst + tot;
1643:Src/ADCsrc.c  **** 
1644:Src/ADCsrc.c  ****        /* Swapping the lengths */
1645:Src/ADCsrc.c  ****        j = srcALen;
1646:Src/ADCsrc.c  ****        srcALen = srcBLen;
1647:Src/ADCsrc.c  ****        srcBLen = j;
1648:Src/ADCsrc.c  **** 
1649:Src/ADCsrc.c  ****        /* Setting the reverse flag */
1650:Src/ADCsrc.c  ****        inv = 1;
1651:Src/ADCsrc.c  **** 
1652:Src/ADCsrc.c  ****      }
1653:Src/ADCsrc.c  **** 
1654:Src/ADCsrc.c  ****      /* Loop to calculate convolution for output length number of times */
1655:Src/ADCsrc.c  ****      for (i = 0u; i <= tot; i++)
1656:Src/ADCsrc.c  ****      {
1657:Src/ADCsrc.c  ****        /* Initialize sum with zero to carry on MAC operations */
1658:Src/ADCsrc.c  ****        sum = 0.0f;
1659:Src/ADCsrc.c  **** 
1660:Src/ADCsrc.c  ****        /* Loop to perform MAC operations according to convolution equation */
1661:Src/ADCsrc.c  ****        for (j = 0u; j <= i; j++)
1662:Src/ADCsrc.c  ****        {
1663:Src/ADCsrc.c  ****          /* Check the array limitations */
1664:Src/ADCsrc.c  ****          if((((i - j) < srcBLen) && (j < srcALen)))
1665:Src/ADCsrc.c  ****          {
1666:Src/ADCsrc.c  ****            /* z[i] += x[i-j] * y[j] */
1667:Src/ADCsrc.c  ****            sum += pIn1[j] * pIn2[-((int32_t) i - j)];
1668:Src/ADCsrc.c  ****          }
1669:Src/ADCsrc.c  ****        }
1670:Src/ADCsrc.c  ****        /* Store the output in the destination buffer */
1671:Src/ADCsrc.c  ****        if(inv == 1)
1672:Src/ADCsrc.c  ****          *pDst-- = sum;
1673:Src/ADCsrc.c  ****        else
1674:Src/ADCsrc.c  ****          *pDst++ = sum;
1675:Src/ADCsrc.c  ****      }
1676:Src/ADCsrc.c  **** 
1677:Src/ADCsrc.c  ****    #endif /*   #ifndef ARM_MATH_CM0_FAMILY */
1678:Src/ADCsrc.c  **** 
1679:Src/ADCsrc.c  ****    }
 2104              		.loc 1 1679 4 view .LVU813
 2105 0396 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2106              	.LVL286:
 2107              	.L121:
 2108              		.loc 1 1679 4 view .LVU814
 2109 039a 00BF     		.align	2
 2110              	.L120:
 2111 039c 00000000 		.word	0
 2112              		.cfi_endproc
 2113              	.LFE353:
 2115              		.section	.text.findFrequency,"ax",%progbits
 2116              		.align	1
 2117              		.global	findFrequency
 2118              		.syntax unified
 2119              		.thumb
 2120              		.thumb_func
 2121              		.fpu fpv4-sp-d16
 2123              	findFrequency:
ARM GAS  /tmp/ccgoDI2u.s 			page 204


 2124              	.LVL287:
 2125              	.LFB349:
 314:Src/ADCsrc.c  ****    uint32_t i, n, j, maxIndex;
 2126              		.loc 1 314 1 is_stmt 1 view -0
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 16
 2129              		@ frame_needed = 1, uses_anonymous_args = 0
 314:Src/ADCsrc.c  ****    uint32_t i, n, j, maxIndex;
 2130              		.loc 1 314 1 is_stmt 0 view .LVU816
 2131 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2132              	.LCFI10:
 2133              		.cfi_def_cfa_offset 36
 2134              		.cfi_offset 4, -36
 2135              		.cfi_offset 5, -32
 2136              		.cfi_offset 6, -28
 2137              		.cfi_offset 7, -24
 2138              		.cfi_offset 8, -20
 2139              		.cfi_offset 9, -16
 2140              		.cfi_offset 10, -12
 2141              		.cfi_offset 11, -8
 2142              		.cfi_offset 14, -4
 2143 0004 87B0     		sub	sp, sp, #28
 2144              	.LCFI11:
 2145              		.cfi_def_cfa_offset 64
 2146 0006 02AF     		add	r7, sp, #8
 2147              	.LCFI12:
 2148              		.cfi_def_cfa 7, 56
 2149 0008 8A46     		mov	r10, r1
 2150 000a 9146     		mov	r9, r2
 315:Src/ADCsrc.c  ****    float avg, dev, maxVal;
 2151              		.loc 1 315 4 is_stmt 1 view .LVU817
 316:Src/ADCsrc.c  ****    float output1[nsamp*2], output2[nsamp];
 2152              		.loc 1 316 4 view .LVU818
 317:Src/ADCsrc.c  ****    n=1;
 2153              		.loc 1 317 4 view .LVU819
 317:Src/ADCsrc.c  ****    n=1;
 2154              		.loc 1 317 23 is_stmt 0 view .LVU820
 2155 000c 4FEA410B 		lsl	fp, r1, #1
 2156              	.LVL288:
 317:Src/ADCsrc.c  ****    n=1;
 2157              		.loc 1 317 10 view .LVU821
 2158 0010 6B46     		mov	r3, sp
 2159 0012 A3EBC103 		sub	r3, r3, r1, lsl #3
 2160 0016 9D46     		mov	sp, r3
 2161 0018 02AD     		add	r5, sp, #8
 2162              	.LVL289:
 317:Src/ADCsrc.c  ****    n=1;
 2163              		.loc 1 317 28 view .LVU822
 2164 001a 01F1FF38 		add	r8, r1, #-1
 2165              	.LVL290:
 317:Src/ADCsrc.c  ****    n=1;
 2166              		.loc 1 317 28 view .LVU823
 2167 001e 0E46     		mov	r6, r1
 2168 0020 8B00     		lsls	r3, r1, #2
 2169 0022 0733     		adds	r3, r3, #7
 2170 0024 23F00703 		bic	r3, r3, #7
 2171 0028 ADEB030D 		sub	sp, sp, r3
ARM GAS  /tmp/ccgoDI2u.s 			page 205


 2172 002c 02AC     		add	r4, sp, #8
 2173              	.LVL291:
 318:Src/ADCsrc.c  **** 
 2174              		.loc 1 318 4 is_stmt 1 view .LVU824
 324:Src/ADCsrc.c  **** 
 2175              		.loc 1 324 2 view .LVU825
 2176 002e 0095     		str	r5, [sp]
 2177 0030 0B46     		mov	r3, r1
 2178 0032 0246     		mov	r2, r0
 2179              	.LVL292:
 324:Src/ADCsrc.c  **** 
 2180              		.loc 1 324 2 is_stmt 0 view .LVU826
 2181 0034 FFF7FEFF 		bl	arm_correlate_f32
 2182              	.LVL293:
 328:Src/ADCsrc.c  **** 
 2183              		.loc 1 328 2 is_stmt 1 view .LVU827
 2184 0038 07F10802 		add	r2, r7, #8
 2185 003c 5946     		mov	r1, fp
 2186 003e 2846     		mov	r0, r5
 2187 0040 FFF7FEFF 		bl	arm_mean_f32
 2188              	.LVL294:
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2189              		.loc 1 334 1 view .LVU828
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2190              		.loc 1 334 6 is_stmt 0 view .LVU829
 2191 0044 0023     		movs	r3, #0
 2192              	.LVL295:
 2193              	.L123:
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2194              		.loc 1 334 10 is_stmt 1 discriminator 1 view .LVU830
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2195              		.loc 1 334 1 is_stmt 0 discriminator 1 view .LVU831
 2196 0046 9B45     		cmp	fp, r3
 2197 0048 0BD9     		bls	.L141
 335:Src/ADCsrc.c  **** 
 2198              		.loc 1 335 3 is_stmt 1 discriminator 3 view .LVU832
 335:Src/ADCsrc.c  **** 
 2199              		.loc 1 335 14 is_stmt 0 discriminator 3 view .LVU833
 2200 004a 05EB8302 		add	r2, r5, r3, lsl #2
 2201 004e D2ED007A 		vldr.32	s15, [r2]
 2202 0052 97ED027A 		vldr.32	s14, [r7, #8]
 2203 0056 77EEC77A 		vsub.f32	s15, s15, s14
 2204 005a C2ED007A 		vstr.32	s15, [r2]
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2205              		.loc 1 334 21 is_stmt 1 discriminator 3 view .LVU834
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2206              		.loc 1 334 22 is_stmt 0 discriminator 3 view .LVU835
 2207 005e 0133     		adds	r3, r3, #1
 2208              	.LVL296:
 334:Src/ADCsrc.c  ****   output1[i] -= avg;
 2209              		.loc 1 334 22 discriminator 3 view .LVU836
 2210 0060 F1E7     		b	.L123
 2211              	.L141:
 340:Src/ADCsrc.c  **** 
 2212              		.loc 1 340 4 is_stmt 1 view .LVU837
 2213 0062 07F10C03 		add	r3, r7, #12
 2214              	.LVL297:
ARM GAS  /tmp/ccgoDI2u.s 			page 206


 340:Src/ADCsrc.c  **** 
 2215              		.loc 1 340 4 is_stmt 0 view .LVU838
 2216 0066 3A46     		mov	r2, r7
 2217 0068 5946     		mov	r1, fp
 2218 006a 2846     		mov	r0, r5
 2219 006c FFF7FEFF 		bl	arm_max_f32
 2220              	.LVL298:
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2221              		.loc 1 347 4 is_stmt 1 view .LVU839
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2222              		.loc 1 347 9 is_stmt 0 view .LVU840
 2223 0070 0023     		movs	r3, #0
 2224              	.LVL299:
 2225              	.L125:
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2226              		.loc 1 347 13 is_stmt 1 discriminator 1 view .LVU841
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2227              		.loc 1 347 4 is_stmt 0 discriminator 1 view .LVU842
 2228 0072 9B45     		cmp	fp, r3
 2229 0074 0BD9     		bls	.L142
 348:Src/ADCsrc.c  ****    }
 2230              		.loc 1 348 6 is_stmt 1 discriminator 3 view .LVU843
 348:Src/ADCsrc.c  ****    }
 2231              		.loc 1 348 17 is_stmt 0 discriminator 3 view .LVU844
 2232 0076 05EB8302 		add	r2, r5, r3, lsl #2
 2233 007a D2ED006A 		vldr.32	s13, [r2]
 2234 007e 97ED007A 		vldr.32	s14, [r7]
 2235 0082 C6EE877A 		vdiv.f32	s15, s13, s14
 2236 0086 C2ED007A 		vstr.32	s15, [r2]
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2237              		.loc 1 347 24 is_stmt 1 discriminator 3 view .LVU845
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2238              		.loc 1 347 25 is_stmt 0 discriminator 3 view .LVU846
 2239 008a 0133     		adds	r3, r3, #1
 2240              	.LVL300:
 347:Src/ADCsrc.c  ****      output1[i] /= maxVal;
 2241              		.loc 1 347 25 discriminator 3 view .LVU847
 2242 008c F1E7     		b	.L125
 2243              	.L142:
 354:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 2244              		.loc 1 354 9 view .LVU848
 2245 008e 0022     		movs	r2, #0
 2246 0090 08E0     		b	.L127
 2247              	.LVL301:
 2248              	.L128:
 355:Src/ADCsrc.c  **** }
 2249              		.loc 1 355 6 is_stmt 1 discriminator 3 view .LVU849
 355:Src/ADCsrc.c  **** }
 2250              		.loc 1 355 35 is_stmt 0 discriminator 3 view .LVU850
 2251 0092 FB68     		ldr	r3, [r7, #12]
 2252 0094 1344     		add	r3, r3, r2
 355:Src/ADCsrc.c  **** }
 2253              		.loc 1 355 26 discriminator 3 view .LVU851
 2254 0096 05EB8303 		add	r3, r5, r3, lsl #2
 2255 009a 1968     		ldr	r1, [r3]	@ float
 355:Src/ADCsrc.c  **** }
 2256              		.loc 1 355 17 discriminator 3 view .LVU852
ARM GAS  /tmp/ccgoDI2u.s 			page 207


 2257 009c 04EB8203 		add	r3, r4, r2, lsl #2
 2258 00a0 1960     		str	r1, [r3]	@ float
 354:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 2259              		.loc 1 354 22 is_stmt 1 discriminator 3 view .LVU853
 354:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 2260              		.loc 1 354 23 is_stmt 0 discriminator 3 view .LVU854
 2261 00a2 0132     		adds	r2, r2, #1
 2262              	.LVL302:
 2263              	.L127:
 354:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 2264              		.loc 1 354 13 is_stmt 1 discriminator 1 view .LVU855
 354:Src/ADCsrc.c  ****      output2[i] = output1[maxIndex+i];
 2265              		.loc 1 354 4 is_stmt 0 discriminator 1 view .LVU856
 2266 00a4 9642     		cmp	r6, r2
 2267 00a6 F4D8     		bhi	.L128
 359:Src/ADCsrc.c  ****  arm_std_f32(output2, nsamp, &dev);
 2268              		.loc 1 359 2 is_stmt 1 view .LVU857
 2269 00a8 07F10802 		add	r2, r7, #8
 2270              	.LVL303:
 359:Src/ADCsrc.c  ****  arm_std_f32(output2, nsamp, &dev);
 2271              		.loc 1 359 2 is_stmt 0 view .LVU858
 2272 00ac 5146     		mov	r1, r10
 2273 00ae 2046     		mov	r0, r4
 2274 00b0 FFF7FEFF 		bl	arm_mean_f32
 2275              	.LVL304:
 360:Src/ADCsrc.c  **** 
 2276              		.loc 1 360 2 is_stmt 1 view .LVU859
 2277 00b4 3A1D     		adds	r2, r7, #4
 2278 00b6 5146     		mov	r1, r10
 2279 00b8 2046     		mov	r0, r4
 2280 00ba FFF7FEFF 		bl	arm_std_f32
 2281              	.LVL305:
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2282              		.loc 1 366 2 view .LVU860
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2283              		.loc 1 366 8 is_stmt 0 view .LVU861
 2284 00be 0023     		movs	r3, #0
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2285              		.loc 1 366 2 view .LVU862
 2286 00c0 00E0     		b	.L129
 2287              	.LVL306:
 2288              	.L130:
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2289              		.loc 1 366 21 is_stmt 1 discriminator 2 view .LVU863
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2290              		.loc 1 366 22 is_stmt 0 discriminator 2 view .LVU864
 2291 00c2 0133     		adds	r3, r3, #1
 2292              	.LVL307:
 2293              	.L129:
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2294              		.loc 1 366 12 is_stmt 1 discriminator 1 view .LVU865
 366:Src/ADCsrc.c  ****         if ((output2[i] < avg + (2*dev))) output2[i] = 0.0;
 2295              		.loc 1 366 2 is_stmt 0 discriminator 1 view .LVU866
 2296 00c4 9E42     		cmp	r6, r3
 2297 00c6 13D9     		bls	.L143
 367:Src/ADCsrc.c  ****  }
 2298              		.loc 1 367 9 is_stmt 1 view .LVU867
ARM GAS  /tmp/ccgoDI2u.s 			page 208


 367:Src/ADCsrc.c  ****  }
 2299              		.loc 1 367 21 is_stmt 0 view .LVU868
 2300 00c8 04EB8302 		add	r2, r4, r3, lsl #2
 2301 00cc 92ED007A 		vldr.32	s14, [r2]
 367:Src/ADCsrc.c  ****  }
 2302              		.loc 1 367 35 view .LVU869
 2303 00d0 D7ED017A 		vldr.32	s15, [r7, #4]
 2304 00d4 77EEA77A 		vadd.f32	s15, s15, s15
 367:Src/ADCsrc.c  ****  }
 2305              		.loc 1 367 31 view .LVU870
 2306 00d8 D7ED026A 		vldr.32	s13, [r7, #8]
 2307 00dc 77EEA67A 		vadd.f32	s15, s15, s13
 367:Src/ADCsrc.c  ****  }
 2308              		.loc 1 367 12 view .LVU871
 2309 00e0 B4EEE77A 		vcmpe.f32	s14, s15
 2310 00e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2311 00e8 EBD5     		bpl	.L130
 367:Src/ADCsrc.c  ****  }
 2312              		.loc 1 367 43 is_stmt 1 discriminator 1 view .LVU872
 367:Src/ADCsrc.c  ****  }
 2313              		.loc 1 367 54 is_stmt 0 discriminator 1 view .LVU873
 2314 00ea 0021     		movs	r1, #0
 2315 00ec 1160     		str	r1, [r2]	@ float
 2316 00ee E8E7     		b	.L130
 2317              	.L143:
 375:Src/ADCsrc.c  **** 
 2318              		.loc 1 375 11 view .LVU874
 2319 00f0 0123     		movs	r3, #1
 2320              	.LVL308:
 375:Src/ADCsrc.c  **** 
 2321              		.loc 1 375 11 view .LVU875
 2322 00f2 00E0     		b	.L133
 2323              	.LVL309:
 2324              	.L134:
 384:Src/ADCsrc.c  **** 
 2325              		.loc 1 384 12 is_stmt 1 discriminator 2 view .LVU876
 375:Src/ADCsrc.c  **** 
 2326              		.loc 1 375 27 discriminator 2 view .LVU877
 375:Src/ADCsrc.c  **** 
 2327              		.loc 1 375 28 is_stmt 0 discriminator 2 view .LVU878
 2328 00f4 0133     		adds	r3, r3, #1
 2329              	.LVL310:
 2330              	.L133:
 375:Src/ADCsrc.c  **** 
 2331              		.loc 1 375 16 is_stmt 1 discriminator 1 view .LVU879
 375:Src/ADCsrc.c  **** 
 2332              		.loc 1 375 4 is_stmt 0 discriminator 1 view .LVU880
 2333 00f6 4345     		cmp	r3, r8
 2334 00f8 1CD2     		bcs	.L144
 379:Src/ADCsrc.c  ****         n = i;
 2335              		.loc 1 379 7 is_stmt 1 view .LVU881
 379:Src/ADCsrc.c  ****         n = i;
 2336              		.loc 1 379 19 is_stmt 0 view .LVU882
 2337 00fa 04EB8302 		add	r2, r4, r3, lsl #2
 2338 00fe 92ED007A 		vldr.32	s14, [r2]
 379:Src/ADCsrc.c  ****         n = i;
 2339              		.loc 1 379 34 view .LVU883
ARM GAS  /tmp/ccgoDI2u.s 			page 209


 2340 0102 5A1E     		subs	r2, r3, #1
 379:Src/ADCsrc.c  ****         n = i;
 2341              		.loc 1 379 32 view .LVU884
 2342 0104 04EB8202 		add	r2, r4, r2, lsl #2
 2343 0108 D2ED007A 		vldr.32	s15, [r2]
 379:Src/ADCsrc.c  ****         n = i;
 2344              		.loc 1 379 23 view .LVU885
 2345 010c 77EE677A 		vsub.f32	s15, s14, s15
 379:Src/ADCsrc.c  ****         n = i;
 2346              		.loc 1 379 9 view .LVU886
 2347 0110 F5EEC07A 		vcmpe.f32	s15, #0
 2348 0114 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2349 0118 ECDD     		ble	.L134
 379:Src/ADCsrc.c  ****         n = i;
 2350              		.loc 1 379 56 discriminator 1 view .LVU887
 2351 011a 5A1C     		adds	r2, r3, #1
 379:Src/ADCsrc.c  ****         n = i;
 2352              		.loc 1 379 54 discriminator 1 view .LVU888
 2353 011c 04EB8202 		add	r2, r4, r2, lsl #2
 2354 0120 D2ED007A 		vldr.32	s15, [r2]
 379:Src/ADCsrc.c  ****         n = i;
 2355              		.loc 1 379 59 discriminator 1 view .LVU889
 2356 0124 37EEC77A 		vsub.f32	s14, s15, s14
 379:Src/ADCsrc.c  ****         n = i;
 2357              		.loc 1 379 42 discriminator 1 view .LVU890
 2358 0128 B5EEC07A 		vcmpe.f32	s14, #0
 2359 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2360 0130 E0D5     		bpl	.L134
 2361 0132 00E0     		b	.L136
 2362              	.L144:
 318:Src/ADCsrc.c  **** 
 2363              		.loc 1 318 5 view .LVU891
 2364 0134 0123     		movs	r3, #1
 2365              	.LVL311:
 2366              	.L136:
 391:Src/ADCsrc.c  **** 
 2367              		.loc 1 391 4 is_stmt 1 view .LVU892
 391:Src/ADCsrc.c  **** 
 2368              		.loc 1 391 21 is_stmt 0 view .LVU893
 2369 0136 07EE903A 		vmov	s15, r3	@ int
 2370 013a F8EE677A 		vcvt.f32.u32	s15, s15
 391:Src/ADCsrc.c  **** 
 2371              		.loc 1 391 10 view .LVU894
 2372 013e DFED056A 		vldr.32	s13, .L145
 2373 0142 86EEA77A 		vdiv.f32	s14, s13, s15
 2374 0146 89ED007A 		vstr.32	s14, [r9]
 394:Src/ADCsrc.c  **** 
 2375              		.loc 1 394 1 view .LVU895
 2376 014a 1437     		adds	r7, r7, #20
 2377              	.LCFI13:
 2378              		.cfi_def_cfa_offset 36
 2379 014c BD46     		mov	sp, r7
 2380              	.LCFI14:
 2381              		.cfi_def_cfa_register 13
 2382              		@ sp needed
 2383 014e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2384              	.LVL312:
ARM GAS  /tmp/ccgoDI2u.s 			page 210


 2385              	.L146:
 394:Src/ADCsrc.c  **** 
 2386              		.loc 1 394 1 view .LVU896
 2387 0152 00BF     		.align	2
 2388              	.L145:
 2389 0154 00401C46 		.word	1176256512
 2390              		.cfi_endproc
 2391              	.LFE349:
 2393              		.section	.bss.htim.13402,"aw",%nobits
 2394              		.align	2
 2395              		.set	.LANCHOR0,. + 0
 2398              	htim.13402:
 2399 0000 00000000 		.space	64
 2399      00000000 
 2399      00000000 
 2399      00000000 
 2399      00000000 
 2400              		.text
 2401              	.Letext0:
 2402              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2403              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2404              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2405              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2406              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 2407              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 2408              		.file 10 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 2409              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 2410              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2411              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2412              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2413              		.file 15 "Inc/tim.h"
 2414              		.file 16 "/usr/arm-none-eabi/include/math.h"
 2415              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2416              		.file 18 "<built-in>"
ARM GAS  /tmp/ccgoDI2u.s 			page 211


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ADCsrc.c
     /tmp/ccgoDI2u.s:18     .text.TIM4_Config:0000000000000000 $t
     /tmp/ccgoDI2u.s:26     .text.TIM4_Config:0000000000000000 TIM4_Config
     /tmp/ccgoDI2u.s:95     .text.TIM4_Config:0000000000000034 $d
     /tmp/ccgoDI2u.s:101    .text.ADC1_Wakeup:0000000000000000 $t
     /tmp/ccgoDI2u.s:108    .text.ADC1_Wakeup:0000000000000000 ADC1_Wakeup
     /tmp/ccgoDI2u.s:158    .text.ADC1_Wakeup:000000000000002c $d
     /tmp/ccgoDI2u.s:163    .text.ADC1_Init:0000000000000000 $t
     /tmp/ccgoDI2u.s:170    .text.ADC1_Init:0000000000000000 ADC1_Init
     /tmp/ccgoDI2u.s:378    .text.ADC1_Init:0000000000000118 $d
     /tmp/ccgoDI2u.s:386    .text.GPIO_Init:0000000000000000 $t
     /tmp/ccgoDI2u.s:393    .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccgoDI2u.s:426    .text.GPIO_Init:0000000000000024 $d
     /tmp/ccgoDI2u.s:431    .text.TIM4_Init:0000000000000000 $t
     /tmp/ccgoDI2u.s:438    .text.TIM4_Init:0000000000000000 TIM4_Init
     /tmp/ccgoDI2u.s:510    .text.TIM4_Init:0000000000000064 $d
     /tmp/ccgoDI2u.s:516    .text.ADC_Calibration:0000000000000000 $t
     /tmp/ccgoDI2u.s:523    .text.ADC_Calibration:0000000000000000 ADC_Calibration
     /tmp/ccgoDI2u.s:572    .text.ADC_Calibration:0000000000000030 $d
     /tmp/ccgoDI2u.s:577    .text.getFloat:0000000000000000 $t
     /tmp/ccgoDI2u.s:584    .text.getFloat:0000000000000000 getFloat
     /tmp/ccgoDI2u.s:642    .text.getFloat:0000000000000034 $d
     /tmp/ccgoDI2u.s:647    .text.arm_mean_f32:0000000000000000 $t
     /tmp/ccgoDI2u.s:654    .text.arm_mean_f32:0000000000000000 arm_mean_f32
     /tmp/ccgoDI2u.s:757    .text.arm_mean_f32:0000000000000054 $d
     /tmp/ccgoDI2u.s:762    .text.arm_std_f32:0000000000000000 $t
     /tmp/ccgoDI2u.s:769    .text.arm_std_f32:0000000000000000 arm_std_f32
     /tmp/ccgoDI2u.s:986    .text.arm_std_f32:00000000000000c0 $d
     /tmp/ccgoDI2u.s:993    .text.arm_max_f32:0000000000000000 $t
     /tmp/ccgoDI2u.s:1000   .text.arm_max_f32:0000000000000000 arm_max_f32
     /tmp/ccgoDI2u.s:1193   .text.arm_correlate_f32:0000000000000000 $t
     /tmp/ccgoDI2u.s:1200   .text.arm_correlate_f32:0000000000000000 arm_correlate_f32
     /tmp/ccgoDI2u.s:2111   .text.arm_correlate_f32:000000000000039c $d
     /tmp/ccgoDI2u.s:2116   .text.findFrequency:0000000000000000 $t
     /tmp/ccgoDI2u.s:2123   .text.findFrequency:0000000000000000 findFrequency
     /tmp/ccgoDI2u.s:2389   .text.findFrequency:0000000000000154 $d
     /tmp/ccgoDI2u.s:2394   .bss.htim.13402:0000000000000000 $d
     /tmp/ccgoDI2u.s:2398   .bss.htim.13402:0000000000000000 htim.13402

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start
sqrtf
