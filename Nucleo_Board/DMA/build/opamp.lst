ARM GAS  /tmp/ccFPs250.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"opamp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.MX_OPAMP2_Init.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 5372632F 		.ascii	"Src/opamp.c\000"
  20      6F70616D 
  20      702E6300 
  21              		.section	.text.MX_OPAMP2_Init,"ax",%progbits
  22              		.align	1
  23              		.global	MX_OPAMP2_Init
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	MX_OPAMP2_Init:
  31              	.LFB309:
  32              		.file 1 "Src/opamp.c"
   1:Src/opamp.c   **** /**
   2:Src/opamp.c   ****   ******************************************************************************
   3:Src/opamp.c   ****   * File Name          : OPAMP.c
   4:Src/opamp.c   ****   * Description        : This file provides code for the configuration
   5:Src/opamp.c   ****   *                      of the OPAMP instances.
   6:Src/opamp.c   ****   ******************************************************************************
   7:Src/opamp.c   ****   ** This notice applies to any and all portions of this file
   8:Src/opamp.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/opamp.c   ****   * USER CODE END. Other portions of this file, whether
  10:Src/opamp.c   ****   * inserted by the user or by software development tools
  11:Src/opamp.c   ****   * are owned by their respective copyright owners.
  12:Src/opamp.c   ****   *
  13:Src/opamp.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/opamp.c   ****   *
  15:Src/opamp.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/opamp.c   ****   * are permitted provided that the following conditions are met:
  17:Src/opamp.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/opamp.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/opamp.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/opamp.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/opamp.c   ****   *      and/or other materials provided with the distribution.
  22:Src/opamp.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/opamp.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/opamp.c   ****   *      without specific prior written permission.
ARM GAS  /tmp/ccFPs250.s 			page 2


  25:Src/opamp.c   ****   *
  26:Src/opamp.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/opamp.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/opamp.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/opamp.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/opamp.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/opamp.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/opamp.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/opamp.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/opamp.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/opamp.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/opamp.c   ****   *
  37:Src/opamp.c   ****   ******************************************************************************
  38:Src/opamp.c   ****   */
  39:Src/opamp.c   **** 
  40:Src/opamp.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/opamp.c   **** #include "opamp.h"
  42:Src/opamp.c   **** 
  43:Src/opamp.c   **** #include "gpio.h"
  44:Src/opamp.c   **** 
  45:Src/opamp.c   **** /* USER CODE BEGIN 0 */
  46:Src/opamp.c   **** 
  47:Src/opamp.c   **** /* USER CODE END 0 */
  48:Src/opamp.c   **** 
  49:Src/opamp.c   **** OPAMP_HandleTypeDef hopamp2;
  50:Src/opamp.c   **** 
  51:Src/opamp.c   **** /* OPAMP2 init function */
  52:Src/opamp.c   **** void MX_OPAMP2_Init(void)
  53:Src/opamp.c   **** {
  33              		.loc 1 53 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  54:Src/opamp.c   **** 
  55:Src/opamp.c   ****   hopamp2.Instance = OPAMP2;
  42              		.loc 1 55 3 view .LVU1
  43              		.loc 1 55 20 is_stmt 0 view .LVU2
  44 0002 0B48     		ldr	r0, .L5
  45 0004 0B4B     		ldr	r3, .L5+4
  46 0006 0360     		str	r3, [r0]
  56:Src/opamp.c   ****   hopamp2.Init.PowerSupplyRange = OPAMP_POWERSUPPLY_LOW;
  47              		.loc 1 56 3 is_stmt 1 view .LVU3
  48              		.loc 1 56 33 is_stmt 0 view .LVU4
  49 0008 0023     		movs	r3, #0
  50 000a 4360     		str	r3, [r0, #4]
  57:Src/opamp.c   ****   hopamp2.Init.Mode = OPAMP_PGA_MODE;
  51              		.loc 1 57 3 is_stmt 1 view .LVU5
  52              		.loc 1 57 21 is_stmt 0 view .LVU6
  53 000c 0822     		movs	r2, #8
  54 000e C260     		str	r2, [r0, #12]
  58:Src/opamp.c   ****   hopamp2.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
  55              		.loc 1 58 3 is_stmt 1 view .LVU7
ARM GAS  /tmp/ccFPs250.s 			page 3


  56              		.loc 1 58 34 is_stmt 0 view .LVU8
  57 0010 4361     		str	r3, [r0, #20]
  59:Src/opamp.c   ****   hopamp2.Init.InvertingInput = OPAMP_INVERTINGINPUT_IO0;
  58              		.loc 1 59 3 is_stmt 1 view .LVU9
  59              		.loc 1 59 31 is_stmt 0 view .LVU10
  60 0012 0361     		str	r3, [r0, #16]
  60:Src/opamp.c   ****   hopamp2.Init.PgaGain = OPAMP_PGA_GAIN_8;
  61              		.loc 1 60 3 is_stmt 1 view .LVU11
  62              		.loc 1 60 24 is_stmt 0 view .LVU12
  63 0014 2022     		movs	r2, #32
  64 0016 8261     		str	r2, [r0, #24]
  61:Src/opamp.c   ****   hopamp2.Init.PowerMode = OPAMP_POWERMODE_NORMAL;
  65              		.loc 1 61 3 is_stmt 1 view .LVU13
  66              		.loc 1 61 26 is_stmt 0 view .LVU14
  67 0018 8360     		str	r3, [r0, #8]
  62:Src/opamp.c   ****   hopamp2.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
  68              		.loc 1 62 3 is_stmt 1 view .LVU15
  69              		.loc 1 62 29 is_stmt 0 view .LVU16
  70 001a C361     		str	r3, [r0, #28]
  63:Src/opamp.c   ****   if (HAL_OPAMP_Init(&hopamp2) != HAL_OK)
  71              		.loc 1 63 3 is_stmt 1 view .LVU17
  72              		.loc 1 63 7 is_stmt 0 view .LVU18
  73 001c FFF7FEFF 		bl	HAL_OPAMP_Init
  74              	.LVL0:
  75              		.loc 1 63 6 view .LVU19
  76 0020 00B9     		cbnz	r0, .L4
  77              	.L1:
  64:Src/opamp.c   ****   {
  65:Src/opamp.c   ****     _Error_Handler(__FILE__, __LINE__);
  66:Src/opamp.c   ****   }
  67:Src/opamp.c   **** 
  68:Src/opamp.c   **** }
  78              		.loc 1 68 1 view .LVU20
  79 0022 08BD     		pop	{r3, pc}
  80              	.L4:
  65:Src/opamp.c   ****   }
  81              		.loc 1 65 5 is_stmt 1 view .LVU21
  82 0024 4121     		movs	r1, #65
  83 0026 0448     		ldr	r0, .L5+8
  84 0028 FFF7FEFF 		bl	_Error_Handler
  85              	.LVL1:
  86              		.loc 1 68 1 is_stmt 0 view .LVU22
  87 002c F9E7     		b	.L1
  88              	.L6:
  89 002e 00BF     		.align	2
  90              	.L5:
  91 0030 00000000 		.word	hopamp2
  92 0034 10780040 		.word	1073772560
  93 0038 00000000 		.word	.LC0
  94              		.cfi_endproc
  95              	.LFE309:
  97              		.section	.text.HAL_OPAMP_MspInit,"ax",%progbits
  98              		.align	1
  99              		.global	HAL_OPAMP_MspInit
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
ARM GAS  /tmp/ccFPs250.s 			page 4


 103              		.fpu fpv4-sp-d16
 105              	HAL_OPAMP_MspInit:
 106              	.LVL2:
 107              	.LFB310:
  69:Src/opamp.c   **** 
  70:Src/opamp.c   **** void HAL_OPAMP_MspInit(OPAMP_HandleTypeDef* opampHandle)
  71:Src/opamp.c   **** {
 108              		.loc 1 71 1 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 24
 111              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Src/opamp.c   **** 
  73:Src/opamp.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 112              		.loc 1 73 3 view .LVU24
  74:Src/opamp.c   ****   if(opampHandle->Instance==OPAMP2)
 113              		.loc 1 74 3 view .LVU25
 114              		.loc 1 74 17 is_stmt 0 view .LVU26
 115 0000 0268     		ldr	r2, [r0]
 116              		.loc 1 74 5 view .LVU27
 117 0002 144B     		ldr	r3, .L14
 118 0004 9A42     		cmp	r2, r3
 119 0006 00D0     		beq	.L13
 120 0008 7047     		bx	lr
 121              	.L13:
  71:Src/opamp.c   **** 
 122              		.loc 1 71 1 view .LVU28
 123 000a 30B5     		push	{r4, r5, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 14, -4
 129 000c 87B0     		sub	sp, sp, #28
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 40
  75:Src/opamp.c   ****   {
  76:Src/opamp.c   ****   /* USER CODE BEGIN OPAMP2_MspInit 0 */
  77:Src/opamp.c   **** 
  78:Src/opamp.c   ****   /* USER CODE END OPAMP2_MspInit 0 */
  79:Src/opamp.c   ****     /* OPAMP2 clock enable */
  80:Src/opamp.c   ****     __HAL_RCC_OPAMP_CLK_ENABLE();
 132              		.loc 1 80 5 is_stmt 1 view .LVU29
 133              	.LBB2:
 134              		.loc 1 80 5 view .LVU30
 135              		.loc 1 80 5 view .LVU31
 136 000e 03F5CB33 		add	r3, r3, #103936
 137 0012 03F5F873 		add	r3, r3, #496
 138 0016 9A6D     		ldr	r2, [r3, #88]
 139 0018 42F08042 		orr	r2, r2, #1073741824
 140 001c 9A65     		str	r2, [r3, #88]
 141              		.loc 1 80 5 view .LVU32
 142 001e 9B6D     		ldr	r3, [r3, #88]
 143 0020 03F08043 		and	r3, r3, #1073741824
 144 0024 0093     		str	r3, [sp]
 145              		.loc 1 80 5 view .LVU33
 146 0026 009B     		ldr	r3, [sp]
 147              	.LBE2:
ARM GAS  /tmp/ccFPs250.s 			page 5


 148              		.loc 1 80 5 view .LVU34
  81:Src/opamp.c   **** 
  82:Src/opamp.c   ****     /**OPAMP2 GPIO Configuration
  83:Src/opamp.c   ****     PA6     ------> OPAMP2_VINP
  84:Src/opamp.c   ****     PA7     ------> OPAMP2_VINM
  85:Src/opamp.c   ****     PB0     ------> OPAMP2_VOUT
  86:Src/opamp.c   ****     */
  87:Src/opamp.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 149              		.loc 1 87 5 view .LVU35
 150              		.loc 1 87 25 is_stmt 0 view .LVU36
 151 0028 C023     		movs	r3, #192
 152 002a 0193     		str	r3, [sp, #4]
  88:Src/opamp.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 153              		.loc 1 88 5 is_stmt 1 view .LVU37
 154              		.loc 1 88 26 is_stmt 0 view .LVU38
 155 002c 0325     		movs	r5, #3
 156 002e 0295     		str	r5, [sp, #8]
  89:Src/opamp.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 89 5 is_stmt 1 view .LVU39
 158              		.loc 1 89 26 is_stmt 0 view .LVU40
 159 0030 0024     		movs	r4, #0
 160 0032 0394     		str	r4, [sp, #12]
  90:Src/opamp.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 90 5 is_stmt 1 view .LVU41
 162 0034 01A9     		add	r1, sp, #4
 163 0036 4FF09040 		mov	r0, #1207959552
 164              	.LVL3:
 165              		.loc 1 90 5 is_stmt 0 view .LVU42
 166 003a FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL4:
  91:Src/opamp.c   **** 
  92:Src/opamp.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 168              		.loc 1 92 5 is_stmt 1 view .LVU43
 169              		.loc 1 92 25 is_stmt 0 view .LVU44
 170 003e 0123     		movs	r3, #1
 171 0040 0193     		str	r3, [sp, #4]
  93:Src/opamp.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 172              		.loc 1 93 5 is_stmt 1 view .LVU45
 173              		.loc 1 93 26 is_stmt 0 view .LVU46
 174 0042 0295     		str	r5, [sp, #8]
  94:Src/opamp.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 94 5 is_stmt 1 view .LVU47
 176              		.loc 1 94 26 is_stmt 0 view .LVU48
 177 0044 0394     		str	r4, [sp, #12]
  95:Src/opamp.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 178              		.loc 1 95 5 is_stmt 1 view .LVU49
 179 0046 01A9     		add	r1, sp, #4
 180 0048 0348     		ldr	r0, .L14+4
 181 004a FFF7FEFF 		bl	HAL_GPIO_Init
 182              	.LVL5:
  96:Src/opamp.c   **** 
  97:Src/opamp.c   ****   /* USER CODE BEGIN OPAMP2_MspInit 1 */
  98:Src/opamp.c   **** 
  99:Src/opamp.c   ****   /* USER CODE END OPAMP2_MspInit 1 */
 100:Src/opamp.c   ****   }
 101:Src/opamp.c   **** }
 183              		.loc 1 101 1 is_stmt 0 view .LVU50
ARM GAS  /tmp/ccFPs250.s 			page 6


 184 004e 07B0     		add	sp, sp, #28
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 12
 187              		@ sp needed
 188 0050 30BD     		pop	{r4, r5, pc}
 189              	.L15:
 190 0052 00BF     		.align	2
 191              	.L14:
 192 0054 10780040 		.word	1073772560
 193 0058 00040048 		.word	1207960576
 194              		.cfi_endproc
 195              	.LFE310:
 197              		.section	.text.HAL_OPAMP_MspDeInit,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_OPAMP_MspDeInit
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	HAL_OPAMP_MspDeInit:
 206              	.LVL6:
 207              	.LFB311:
 102:Src/opamp.c   **** 
 103:Src/opamp.c   **** void HAL_OPAMP_MspDeInit(OPAMP_HandleTypeDef* opampHandle)
 104:Src/opamp.c   **** {
 208              		.loc 1 104 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		.loc 1 104 1 is_stmt 0 view .LVU52
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 105:Src/opamp.c   **** 
 106:Src/opamp.c   ****   if(opampHandle->Instance==OPAMP2)
 218              		.loc 1 106 3 is_stmt 1 view .LVU53
 219              		.loc 1 106 17 is_stmt 0 view .LVU54
 220 0002 0268     		ldr	r2, [r0]
 221              		.loc 1 106 5 view .LVU55
 222 0004 094B     		ldr	r3, .L20
 223 0006 9A42     		cmp	r2, r3
 224 0008 00D0     		beq	.L19
 225              	.LVL7:
 226              	.L16:
 107:Src/opamp.c   ****   {
 108:Src/opamp.c   ****   /* USER CODE BEGIN OPAMP2_MspDeInit 0 */
 109:Src/opamp.c   **** 
 110:Src/opamp.c   ****   /* USER CODE END OPAMP2_MspDeInit 0 */
 111:Src/opamp.c   ****     /* Peripheral clock disable */
 112:Src/opamp.c   ****     __HAL_RCC_OPAMP_CLK_DISABLE();
 113:Src/opamp.c   **** 
 114:Src/opamp.c   ****     /**OPAMP2 GPIO Configuration
 115:Src/opamp.c   ****     PA6     ------> OPAMP2_VINP
 116:Src/opamp.c   ****     PA7     ------> OPAMP2_VINM
 117:Src/opamp.c   ****     PB0     ------> OPAMP2_VOUT
ARM GAS  /tmp/ccFPs250.s 			page 7


 118:Src/opamp.c   ****     */
 119:Src/opamp.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_6|GPIO_PIN_7);
 120:Src/opamp.c   **** 
 121:Src/opamp.c   ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0);
 122:Src/opamp.c   **** 
 123:Src/opamp.c   ****   /* USER CODE BEGIN OPAMP2_MspDeInit 1 */
 124:Src/opamp.c   **** 
 125:Src/opamp.c   ****   /* USER CODE END OPAMP2_MspDeInit 1 */
 126:Src/opamp.c   ****   }
 127:Src/opamp.c   **** }
 227              		.loc 1 127 1 view .LVU56
 228 000a 08BD     		pop	{r3, pc}
 229              	.LVL8:
 230              	.L19:
 112:Src/opamp.c   **** 
 231              		.loc 1 112 5 is_stmt 1 view .LVU57
 232 000c 084A     		ldr	r2, .L20+4
 233 000e 936D     		ldr	r3, [r2, #88]
 234 0010 23F08043 		bic	r3, r3, #1073741824
 235 0014 9365     		str	r3, [r2, #88]
 119:Src/opamp.c   **** 
 236              		.loc 1 119 5 view .LVU58
 237 0016 C021     		movs	r1, #192
 238 0018 4FF09040 		mov	r0, #1207959552
 239              	.LVL9:
 119:Src/opamp.c   **** 
 240              		.loc 1 119 5 is_stmt 0 view .LVU59
 241 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 242              	.LVL10:
 121:Src/opamp.c   **** 
 243              		.loc 1 121 5 is_stmt 1 view .LVU60
 244 0020 0121     		movs	r1, #1
 245 0022 0448     		ldr	r0, .L20+8
 246 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 247              	.LVL11:
 248              		.loc 1 127 1 is_stmt 0 view .LVU61
 249 0028 EFE7     		b	.L16
 250              	.L21:
 251 002a 00BF     		.align	2
 252              	.L20:
 253 002c 10780040 		.word	1073772560
 254 0030 00100240 		.word	1073876992
 255 0034 00040048 		.word	1207960576
 256              		.cfi_endproc
 257              	.LFE311:
 259              		.comm	hopamp2,52,4
 260              		.text
 261              	.Letext0:
 262              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 263              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 264              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 265              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 266              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 267              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 268              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 269              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 270              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccFPs250.s 			page 8


 271              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 272              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 273              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_opamp.h"
 274              		.file 14 "Inc/opamp.h"
ARM GAS  /tmp/ccFPs250.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 opamp.c
     /tmp/ccFPs250.s:18     .rodata.MX_OPAMP2_Init.str1.4:0000000000000000 $d
     /tmp/ccFPs250.s:22     .text.MX_OPAMP2_Init:0000000000000000 $t
     /tmp/ccFPs250.s:30     .text.MX_OPAMP2_Init:0000000000000000 MX_OPAMP2_Init
     /tmp/ccFPs250.s:91     .text.MX_OPAMP2_Init:0000000000000030 $d
                            *COM*:0000000000000034 hopamp2
     /tmp/ccFPs250.s:98     .text.HAL_OPAMP_MspInit:0000000000000000 $t
     /tmp/ccFPs250.s:105    .text.HAL_OPAMP_MspInit:0000000000000000 HAL_OPAMP_MspInit
     /tmp/ccFPs250.s:192    .text.HAL_OPAMP_MspInit:0000000000000054 $d
     /tmp/ccFPs250.s:198    .text.HAL_OPAMP_MspDeInit:0000000000000000 $t
     /tmp/ccFPs250.s:205    .text.HAL_OPAMP_MspDeInit:0000000000000000 HAL_OPAMP_MspDeInit
     /tmp/ccFPs250.s:253    .text.HAL_OPAMP_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
HAL_OPAMP_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
