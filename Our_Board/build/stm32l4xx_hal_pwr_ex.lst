ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32l4xx_hal_pwr_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_PWREx_GetVoltageRange
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWREx_GetVoltageRange:
  27              	.LFB306:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @file    stm32l4xx_hal_pwr_ex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * are permitted provided that the following conditions are met:
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      and/or other materials provided with the distribution.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      may be used to endorse or promote products derived from this software
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      without specific prior written permission.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #include "stm32l4xx_hal.h"
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L431xx) || defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L451xx) || defined (STM32L452xx) || defined (STM32L462xx)
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x00000003) /* PH0/PH1 */
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4R5xx) || defined (STM32L4R7
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000FFFF) /* PH0..PH15 */
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4R5xx) || defined (STM32L4R7xx
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTI_AVAILABLE_PINS   ((uint32_t)0x00000FFF) /* PI0..PI11 */
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVM
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVM thresh
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVM trig
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVM tri
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50   /*!< Time out value for REGLPF and VOSF
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @verbatim
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     [..]
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @endverbatim
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_RANGE1 or PWR_REGULATOR_VOLTAGE_RANGE2 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */  
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  29              		.loc 1 132 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE2;
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 4


 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1;
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
  34              		.loc 1 148 0
  35 0000 024B     		ldr	r3, .L2
  36 0002 1868     		ldr	r0, [r3]
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif  
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
  37              		.loc 1 150 0
  38 0004 00F4C060 		and	r0, r0, #1536
  39 0008 7047     		bx	lr
  40              	.L3:
  41 000a 00BF     		.align	2
  42              	.L2:
  43 000c 00700040 		.word	1073770496
  44              		.cfi_endproc
  45              	.LFE306:
  47              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  48              		.align	2
  49              		.global	HAL_PWREx_ControlVoltageScaling
  50              		.thumb
  51              		.thumb_func
  53              	HAL_PWREx_ControlVoltageScaling:
  54              	.LFB307:
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   @if STM32L4S9xx
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,                
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 120 MHz.  
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   @endif
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,  
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 80 MHz.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,                
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value up to 80 MHz after calling HAL_PWREx_ControlVoltageScaling() API. For
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        some devices, the system frequency can be increased up to 120 MHz.  
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.                    
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 5


 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  55              		.loc 1 181 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL0:
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;  
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */      
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }    
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     } 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */      
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 6


 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }    
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     } 
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     } 
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */    
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* If Set Range 1 */
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  61              		.loc 1 256 0
  62 0000 B0F5007F 		cmp	r0, #512
  63 0004 2AD1     		bne	.L5
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
  64              		.loc 1 258 0
  65 0006 204B     		ldr	r3, .L13
  66 0008 1B68     		ldr	r3, [r3]
  67 000a 03F4C063 		and	r3, r3, #1536
  68 000e B3F5007F 		cmp	r3, #512
  69 0012 33D0     		beq	.L10
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
  70              		.loc 1 261 0
  71 0014 1C4A     		ldr	r2, .L13
  72 0016 1368     		ldr	r3, [r2]
  73 0018 23F4C063 		bic	r3, r3, #1536
  74 001c 43F40073 		orr	r3, r3, #512
  75 0020 1360     		str	r3, [r2]
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */      
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
  76              		.loc 1 264 0
  77 0022 1A4B     		ldr	r3, .L13+4
  78 0024 1B68     		ldr	r3, [r3]
  79 0026 02F14672 		add	r2, r2, #51904512
  80 002a 02F55B32 		add	r2, r2, #224256
  81 002e 02F28322 		addw	r2, r2, #643
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 7


  82 0032 A2FB0323 		umull	r2, r3, r2, r3
  83 0036 9A0C     		lsrs	r2, r3, #18
  84 0038 3223     		movs	r3, #50
  85 003a 03FB02F3 		mul	r3, r3, r2
  86              	.LVL1:
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
  87              		.loc 1 265 0
  88 003e 00E0     		b	.L7
  89              	.L9:
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
  90              		.loc 1 267 0
  91 0040 013B     		subs	r3, r3, #1
  92              	.LVL2:
  93              	.L7:
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
  94              		.loc 1 265 0
  95 0042 23B1     		cbz	r3, .L8
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
  96              		.loc 1 265 0 is_stmt 0 discriminator 1
  97 0044 104A     		ldr	r2, .L13
  98 0046 5269     		ldr	r2, [r2, #20]
  99 0048 12F4806F 		tst	r2, #1024
 100 004c F8D1     		bne	.L9
 101              	.L8:
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 102              		.loc 1 269 0 is_stmt 1
 103 004e 0E4B     		ldr	r3, .L13
 104              	.LVL3:
 105 0050 5B69     		ldr	r3, [r3, #20]
 106 0052 13F4806F 		tst	r3, #1024
 107 0056 13D0     		beq	.L11
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 108              		.loc 1 271 0
 109 0058 0320     		movs	r0, #3
 110              	.LVL4:
 111 005a 7047     		bx	lr
 112              	.LVL5:
 113              	.L5:
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 114              		.loc 1 277 0
 115 005c 0A4B     		ldr	r3, .L13
 116 005e 1B68     		ldr	r3, [r3]
 117 0060 03F4C063 		and	r3, r3, #1536
 118 0064 B3F5806F 		cmp	r3, #1024
 119 0068 0CD0     		beq	.L12
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 2 */
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 120              		.loc 1 280 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 8


 121 006a 074A     		ldr	r2, .L13
 122 006c 1368     		ldr	r3, [r2]
 123 006e 23F4C063 		bic	r3, r3, #1536
 124 0072 43F48063 		orr	r3, r3, #1024
 125 0076 1360     		str	r3, [r2]
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif  
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 126              		.loc 1 286 0
 127 0078 0020     		movs	r0, #0
 128              	.LVL6:
 129 007a 7047     		bx	lr
 130              	.LVL7:
 131              	.L10:
 132 007c 0020     		movs	r0, #0
 133              	.LVL8:
 134 007e 7047     		bx	lr
 135              	.LVL9:
 136              	.L11:
 137 0080 0020     		movs	r0, #0
 138              	.LVL10:
 139 0082 7047     		bx	lr
 140              	.LVL11:
 141              	.L12:
 142 0084 0020     		movs	r0, #0
 143              	.LVL12:
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 144              		.loc 1 287 0
 145 0086 7047     		bx	lr
 146              	.L14:
 147              		.align	2
 148              	.L13:
 149 0088 00700040 		.word	1073770496
 150 008c 00000000 		.word	SystemCoreClock
 151              		.cfi_endproc
 152              	.LFE307:
 154              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 155              		.align	2
 156              		.global	HAL_PWREx_EnableBatteryCharging
 157              		.thumb
 158              		.thumb_func
 160              	HAL_PWREx_EnableBatteryCharging:
 161              	.LFB308:
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.  
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 9


 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 162              		.loc 1 300 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL13:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 168              		.loc 1 304 0
 169 0000 054A     		ldr	r2, .L16
 170 0002 D368     		ldr	r3, [r2, #12]
 171 0004 23F40073 		bic	r3, r3, #512
 172 0008 1843     		orrs	r0, r0, r3
 173              	.LVL14:
 174 000a D060     		str	r0, [r2, #12]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 175              		.loc 1 307 0
 176 000c D368     		ldr	r3, [r2, #12]
 177 000e 43F48073 		orr	r3, r3, #256
 178 0012 D360     		str	r3, [r2, #12]
 179 0014 7047     		bx	lr
 180              	.L17:
 181 0016 00BF     		.align	2
 182              	.L16:
 183 0018 00700040 		.word	1073770496
 184              		.cfi_endproc
 185              	.LFE308:
 187              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 188              		.align	2
 189              		.global	HAL_PWREx_DisableBatteryCharging
 190              		.thumb
 191              		.thumb_func
 193              	HAL_PWREx_DisableBatteryCharging:
 194              	.LFB309:
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.  
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 195              		.loc 1 316 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE); 
 200              		.loc 1 317 0
 201 0000 024A     		ldr	r2, .L19
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 10


 202 0002 D368     		ldr	r3, [r2, #12]
 203 0004 23F48073 		bic	r3, r3, #256
 204 0008 D360     		str	r3, [r2, #12]
 205 000a 7047     		bx	lr
 206              	.L20:
 207              		.align	2
 208              	.L19:
 209 000c 00700040 		.word	1073770496
 210              		.cfi_endproc
 211              	.LFE309:
 213              		.section	.text.HAL_PWREx_EnableVddUSB,"ax",%progbits
 214              		.align	2
 215              		.global	HAL_PWREx_EnableVddUSB
 216              		.thumb
 217              		.thumb_func
 219              	HAL_PWREx_EnableVddUSB:
 220              	.LFB310:
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_USV)
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDUSB supply. 
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.  
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 221              		.loc 1 328 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 226              		.loc 1 329 0
 227 0000 024A     		ldr	r2, .L22
 228 0002 5368     		ldr	r3, [r2, #4]
 229 0004 43F48063 		orr	r3, r3, #1024
 230 0008 5360     		str	r3, [r2, #4]
 231 000a 7047     		bx	lr
 232              	.L23:
 233              		.align	2
 234              	.L22:
 235 000c 00700040 		.word	1073770496
 236              		.cfi_endproc
 237              	.LFE310:
 239              		.section	.text.HAL_PWREx_DisableVddUSB,"ax",%progbits
 240              		.align	2
 241              		.global	HAL_PWREx_DisableVddUSB
 242              		.thumb
 243              		.thumb_func
 245              	HAL_PWREx_DisableVddUSB:
 246              	.LFB311:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 11


 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDUSB supply. 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 247              		.loc 1 338 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 252              		.loc 1 339 0
 253 0000 024A     		ldr	r2, .L25
 254 0002 5368     		ldr	r3, [r2, #4]
 255 0004 23F48063 		bic	r3, r3, #1024
 256 0008 5360     		str	r3, [r2, #4]
 257 000a 7047     		bx	lr
 258              	.L26:
 259              		.align	2
 260              	.L25:
 261 000c 00700040 		.word	1073770496
 262              		.cfi_endproc
 263              	.LFE311:
 265              		.section	.text.HAL_PWREx_EnableVddIO2,"ax",%progbits
 266              		.align	2
 267              		.global	HAL_PWREx_EnableVddIO2
 268              		.thumb
 269              		.thumb_func
 271              	HAL_PWREx_EnableVddIO2:
 272              	.LFB312:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_USV */
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_IOSV)
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDIO2 supply. 
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present. 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddIO2(void)
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 273              		.loc 1 350 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 278              		.loc 1 351 0
 279 0000 024A     		ldr	r2, .L28
 280 0002 5368     		ldr	r3, [r2, #4]
 281 0004 43F40073 		orr	r3, r3, #512
 282 0008 5360     		str	r3, [r2, #4]
 283 000a 7047     		bx	lr
 284              	.L29:
 285              		.align	2
 286              	.L28:
 287 000c 00700040 		.word	1073770496
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 12


 288              		.cfi_endproc
 289              	.LFE312:
 291              		.section	.text.HAL_PWREx_DisableVddIO2,"ax",%progbits
 292              		.align	2
 293              		.global	HAL_PWREx_DisableVddIO2
 294              		.thumb
 295              		.thumb_func
 297              	HAL_PWREx_DisableVddIO2:
 298              	.LFB313:
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDIO2 supply. 
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddIO2(void)
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 299              		.loc 1 360 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 304              		.loc 1 361 0
 305 0000 024A     		ldr	r2, .L31
 306 0002 5368     		ldr	r3, [r2, #4]
 307 0004 23F40073 		bic	r3, r3, #512
 308 0008 5360     		str	r3, [r2, #4]
 309 000a 7047     		bx	lr
 310              	.L32:
 311              		.align	2
 312              	.L31:
 313 000c 00700040 		.word	1073770496
 314              		.cfi_endproc
 315              	.LFE313:
 317              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 318              		.align	2
 319              		.global	HAL_PWREx_EnableInternalWakeUpLine
 320              		.thumb
 321              		.thumb_func
 323              	HAL_PWREx_EnableInternalWakeUpLine:
 324              	.LFB314:
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_IOSV */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line. 
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 325              		.loc 1 371 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 13


 329              		@ link register save eliminated.
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 330              		.loc 1 372 0
 331 0000 024A     		ldr	r2, .L34
 332 0002 9368     		ldr	r3, [r2, #8]
 333 0004 43F40043 		orr	r3, r3, #32768
 334 0008 9360     		str	r3, [r2, #8]
 335 000a 7047     		bx	lr
 336              	.L35:
 337              		.align	2
 338              	.L34:
 339 000c 00700040 		.word	1073770496
 340              		.cfi_endproc
 341              	.LFE314:
 343              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 344              		.align	2
 345              		.global	HAL_PWREx_DisableInternalWakeUpLine
 346              		.thumb
 347              		.thumb_func
 349              	HAL_PWREx_DisableInternalWakeUpLine:
 350              	.LFB315:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line. 
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 351              		.loc 1 381 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 356              		.loc 1 382 0
 357 0000 024A     		ldr	r2, .L37
 358 0002 9368     		ldr	r3, [r2, #8]
 359 0004 23F40043 		bic	r3, r3, #32768
 360 0008 9360     		str	r3, [r2, #8]
 361 000a 7047     		bx	lr
 362              	.L38:
 363              		.align	2
 364              	.L37:
 365 000c 00700040 		.word	1073770496
 366              		.cfi_endproc
 367              	.LFE315:
 369              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 370              		.align	2
 371              		.global	HAL_PWREx_EnableGPIOPullUp
 372              		.thumb
 373              		.thumb_func
 375              	HAL_PWREx_EnableGPIOPullUp:
 376              	.LFB316:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 14


 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in 
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes. 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit 
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved. 
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input 
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.     
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less  
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.    
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 377              		.loc 1 409 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL15:
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 383              		.loc 1 413 0
 384 0000 0728     		cmp	r0, #7
 385 0002 5DD8     		bhi	.L50
 386 0004 DFE800F0 		tbb	[pc, r0]
 387              	.L42:
 388 0008 04       		.byte	(.L41-.L42)/2
 389 0009 12       		.byte	(.L43-.L42)/2
 390 000a 1E       		.byte	(.L44-.L42)/2
 391 000b 28       		.byte	(.L45-.L42)/2
 392 000c 32       		.byte	(.L46-.L42)/2
 393 000d 3C       		.byte	(.L47-.L42)/2
 394 000e 46       		.byte	(.L48-.L42)/2
 395 000f 50       		.byte	(.L49-.L42)/2
 396              		.p2align 1
 397              	.L41:
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 398              		.loc 1 416 0
 399 0010 2C4B     		ldr	r3, .L51
 400 0012 186A     		ldr	r0, [r3, #32]
 401              	.LVL16:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 15


 402 0014 21F48042 		bic	r2, r1, #16384
 403 0018 0243     		orrs	r2, r2, r0
 404 001a 1A62     		str	r2, [r3, #32]
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 405              		.loc 1 417 0
 406 001c 5A6A     		ldr	r2, [r3, #36]
 407 001e 21F42041 		bic	r1, r1, #40960
 408              	.LVL17:
 409 0022 22EA0101 		bic	r1, r2, r1
 410 0026 5962     		str	r1, [r3, #36]
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, GPIONumber);
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, GPIONumber);
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else       
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif       
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 16


 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        return HAL_ERROR;
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 411              		.loc 1 469 0
 412 0028 0020     		movs	r0, #0
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 413              		.loc 1 418 0
 414 002a 7047     		bx	lr
 415              	.LVL18:
 416              	.L43:
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 417              		.loc 1 420 0
 418 002c 254B     		ldr	r3, .L51
 419 002e 9A6A     		ldr	r2, [r3, #40]
 420 0030 0A43     		orrs	r2, r2, r1
 421 0032 9A62     		str	r2, [r3, #40]
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 422              		.loc 1 421 0
 423 0034 DA6A     		ldr	r2, [r3, #44]
 424 0036 21F01001 		bic	r1, r1, #16
 425              	.LVL19:
 426 003a 22EA0101 		bic	r1, r2, r1
 427 003e D962     		str	r1, [r3, #44]
 428              		.loc 1 469 0
 429 0040 0020     		movs	r0, #0
 430              	.LVL20:
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 431              		.loc 1 422 0
 432 0042 7047     		bx	lr
 433              	.LVL21:
 434              	.L44:
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 435              		.loc 1 424 0
 436 0044 1F4B     		ldr	r3, .L51
 437 0046 1A6B     		ldr	r2, [r3, #48]
 438 0048 0A43     		orrs	r2, r2, r1
 439 004a 1A63     		str	r2, [r3, #48]
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 440              		.loc 1 425 0
 441 004c 5A6B     		ldr	r2, [r3, #52]
 442 004e 22EA0101 		bic	r1, r2, r1
 443              	.LVL22:
 444 0052 5963     		str	r1, [r3, #52]
 445              		.loc 1 469 0
 446 0054 0020     		movs	r0, #0
 447              	.LVL23:
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 448              		.loc 1 426 0
 449 0056 7047     		bx	lr
 450              	.LVL24:
 451              	.L45:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 452              		.loc 1 429 0
 453 0058 1A4B     		ldr	r3, .L51
 454 005a 9A6B     		ldr	r2, [r3, #56]
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 17


 455 005c 0A43     		orrs	r2, r2, r1
 456 005e 9A63     		str	r2, [r3, #56]
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 457              		.loc 1 430 0
 458 0060 DA6B     		ldr	r2, [r3, #60]
 459 0062 22EA0101 		bic	r1, r2, r1
 460              	.LVL25:
 461 0066 D963     		str	r1, [r3, #60]
 462              		.loc 1 469 0
 463 0068 0020     		movs	r0, #0
 464              	.LVL26:
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 465              		.loc 1 431 0
 466 006a 7047     		bx	lr
 467              	.LVL27:
 468              	.L46:
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 469              		.loc 1 435 0
 470 006c 154B     		ldr	r3, .L51
 471 006e 1A6C     		ldr	r2, [r3, #64]
 472 0070 0A43     		orrs	r2, r2, r1
 473 0072 1A64     		str	r2, [r3, #64]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 474              		.loc 1 436 0
 475 0074 5A6C     		ldr	r2, [r3, #68]
 476 0076 22EA0101 		bic	r1, r2, r1
 477              	.LVL28:
 478 007a 5964     		str	r1, [r3, #68]
 479              		.loc 1 469 0
 480 007c 0020     		movs	r0, #0
 481              	.LVL29:
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 482              		.loc 1 437 0
 483 007e 7047     		bx	lr
 484              	.LVL30:
 485              	.L47:
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 486              		.loc 1 441 0
 487 0080 104B     		ldr	r3, .L51
 488 0082 9A6C     		ldr	r2, [r3, #72]
 489 0084 0A43     		orrs	r2, r2, r1
 490 0086 9A64     		str	r2, [r3, #72]
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 491              		.loc 1 442 0
 492 0088 DA6C     		ldr	r2, [r3, #76]
 493 008a 22EA0101 		bic	r1, r2, r1
 494              	.LVL31:
 495 008e D964     		str	r1, [r3, #76]
 496              		.loc 1 469 0
 497 0090 0020     		movs	r0, #0
 498              	.LVL32:
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 499              		.loc 1 443 0
 500 0092 7047     		bx	lr
 501              	.LVL33:
 502              	.L48:
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 18


 503              		.loc 1 447 0
 504 0094 0B4B     		ldr	r3, .L51
 505 0096 1A6D     		ldr	r2, [r3, #80]
 506 0098 0A43     		orrs	r2, r2, r1
 507 009a 1A65     		str	r2, [r3, #80]
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 508              		.loc 1 448 0
 509 009c 5A6D     		ldr	r2, [r3, #84]
 510 009e 22EA0101 		bic	r1, r2, r1
 511              	.LVL34:
 512 00a2 5965     		str	r1, [r3, #84]
 513              		.loc 1 469 0
 514 00a4 0020     		movs	r0, #0
 515              	.LVL35:
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 516              		.loc 1 449 0
 517 00a6 7047     		bx	lr
 518              	.LVL36:
 519              	.L49:
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 520              		.loc 1 452 0
 521 00a8 064B     		ldr	r3, .L51
 522 00aa 9A6D     		ldr	r2, [r3, #88]
 523 00ac 01F00301 		and	r1, r1, #3
 524              	.LVL37:
 525 00b0 0A43     		orrs	r2, r2, r1
 526 00b2 9A65     		str	r2, [r3, #88]
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif       
 527              		.loc 1 456 0
 528 00b4 DA6D     		ldr	r2, [r3, #92]
 529 00b6 22EA0101 		bic	r1, r2, r1
 530 00ba D965     		str	r1, [r3, #92]
 531              		.loc 1 469 0
 532 00bc 0020     		movs	r0, #0
 533              	.LVL38:
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 534              		.loc 1 458 0
 535 00be 7047     		bx	lr
 536              	.LVL39:
 537              	.L50:
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 538              		.loc 1 466 0
 539 00c0 0120     		movs	r0, #1
 540              	.LVL40:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 541              		.loc 1 470 0
 542 00c2 7047     		bx	lr
 543              	.L52:
 544              		.align	2
 545              	.L51:
 546 00c4 00700040 		.word	1073770496
 547              		.cfi_endproc
 548              	.LFE316:
 550              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 551              		.align	2
 552              		.global	HAL_PWREx_DisableGPIOPullUp
 553              		.thumb
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 19


 554              		.thumb_func
 556              	HAL_PWREx_DisableGPIOPullUp:
 557              	.LFB317:
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.      
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less  
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 558              		.loc 1 489 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563              	.LVL41:
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 564              		.loc 1 493 0
 565 0000 0728     		cmp	r0, #7
 566 0002 41D8     		bhi	.L64
 567 0004 DFE800F0 		tbb	[pc, r0]
 568              	.L56:
 569 0008 04       		.byte	(.L55-.L56)/2
 570 0009 0D       		.byte	(.L57-.L56)/2
 571 000a 14       		.byte	(.L58-.L56)/2
 572 000b 1B       		.byte	(.L59-.L56)/2
 573 000c 22       		.byte	(.L60-.L56)/2
 574 000d 29       		.byte	(.L61-.L56)/2
 575 000e 30       		.byte	(.L62-.L56)/2
 576 000f 37       		.byte	(.L63-.L56)/2
 577              		.p2align 1
 578              	.L55:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 579              		.loc 1 496 0
 580 0010 1E4A     		ldr	r2, .L65
 581 0012 136A     		ldr	r3, [r2, #32]
 582 0014 21F48041 		bic	r1, r1, #16384
 583              	.LVL42:
 584 0018 23EA0101 		bic	r1, r3, r1
 585 001c 1162     		str	r1, [r2, #32]
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 20


 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:    
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        return HAL_ERROR;
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 586              		.loc 1 536 0
 587 001e 0020     		movs	r0, #0
 588              	.LVL43:
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 589              		.loc 1 497 0
 590 0020 7047     		bx	lr
 591              	.LVL44:
 592              	.L57:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 593              		.loc 1 499 0
 594 0022 1A4A     		ldr	r2, .L65
 595 0024 936A     		ldr	r3, [r2, #40]
 596 0026 23EA0101 		bic	r1, r3, r1
 597              	.LVL45:
 598 002a 9162     		str	r1, [r2, #40]
 599              		.loc 1 536 0
 600 002c 0020     		movs	r0, #0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 21


 601              	.LVL46:
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 602              		.loc 1 500 0
 603 002e 7047     		bx	lr
 604              	.LVL47:
 605              	.L58:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 606              		.loc 1 502 0
 607 0030 164A     		ldr	r2, .L65
 608 0032 136B     		ldr	r3, [r2, #48]
 609 0034 23EA0101 		bic	r1, r3, r1
 610              	.LVL48:
 611 0038 1163     		str	r1, [r2, #48]
 612              		.loc 1 536 0
 613 003a 0020     		movs	r0, #0
 614              	.LVL49:
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 615              		.loc 1 503 0
 616 003c 7047     		bx	lr
 617              	.LVL50:
 618              	.L59:
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 619              		.loc 1 506 0
 620 003e 134A     		ldr	r2, .L65
 621 0040 936B     		ldr	r3, [r2, #56]
 622 0042 23EA0101 		bic	r1, r3, r1
 623              	.LVL51:
 624 0046 9163     		str	r1, [r2, #56]
 625              		.loc 1 536 0
 626 0048 0020     		movs	r0, #0
 627              	.LVL52:
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 628              		.loc 1 507 0
 629 004a 7047     		bx	lr
 630              	.LVL53:
 631              	.L60:
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 632              		.loc 1 511 0
 633 004c 0F4A     		ldr	r2, .L65
 634 004e 136C     		ldr	r3, [r2, #64]
 635 0050 23EA0101 		bic	r1, r3, r1
 636              	.LVL54:
 637 0054 1164     		str	r1, [r2, #64]
 638              		.loc 1 536 0
 639 0056 0020     		movs	r0, #0
 640              	.LVL55:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 641              		.loc 1 512 0
 642 0058 7047     		bx	lr
 643              	.LVL56:
 644              	.L61:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 645              		.loc 1 516 0
 646 005a 0C4A     		ldr	r2, .L65
 647 005c 936C     		ldr	r3, [r2, #72]
 648 005e 23EA0101 		bic	r1, r3, r1
 649              	.LVL57:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 22


 650 0062 9164     		str	r1, [r2, #72]
 651              		.loc 1 536 0
 652 0064 0020     		movs	r0, #0
 653              	.LVL58:
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 654              		.loc 1 517 0
 655 0066 7047     		bx	lr
 656              	.LVL59:
 657              	.L62:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 658              		.loc 1 521 0
 659 0068 084A     		ldr	r2, .L65
 660 006a 136D     		ldr	r3, [r2, #80]
 661 006c 23EA0101 		bic	r1, r3, r1
 662              	.LVL60:
 663 0070 1165     		str	r1, [r2, #80]
 664              		.loc 1 536 0
 665 0072 0020     		movs	r0, #0
 666              	.LVL61:
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 667              		.loc 1 522 0
 668 0074 7047     		bx	lr
 669              	.LVL62:
 670              	.L63:
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 671              		.loc 1 525 0
 672 0076 054A     		ldr	r2, .L65
 673 0078 936D     		ldr	r3, [r2, #88]
 674 007a 01F00301 		and	r1, r1, #3
 675              	.LVL63:
 676 007e 23EA0101 		bic	r1, r3, r1
 677 0082 9165     		str	r1, [r2, #88]
 678              		.loc 1 536 0
 679 0084 0020     		movs	r0, #0
 680              	.LVL64:
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 681              		.loc 1 526 0
 682 0086 7047     		bx	lr
 683              	.LVL65:
 684              	.L64:
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 685              		.loc 1 533 0
 686 0088 0120     		movs	r0, #1
 687              	.LVL66:
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 688              		.loc 1 537 0
 689 008a 7047     		bx	lr
 690              	.L66:
 691              		.align	2
 692              	.L65:
 693 008c 00700040 		.word	1073770496
 694              		.cfi_endproc
 695              	.LFE317:
 697              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 698              		.align	2
 699              		.global	HAL_PWREx_EnableGPIOPullDown
 700              		.thumb
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 23


 701              		.thumb_func
 703              	HAL_PWREx_EnableGPIOPullDown:
 704              	.LFB318:
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in 
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes. 
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API. 
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved. 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.         
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less  
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 705              		.loc 1 563 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL67:
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 711              		.loc 1 567 0
 712 0000 0728     		cmp	r0, #7
 713 0002 5DD8     		bhi	.L78
 714 0004 DFE800F0 		tbb	[pc, r0]
 715              	.L70:
 716 0008 04       		.byte	(.L69-.L70)/2
 717 0009 12       		.byte	(.L71-.L70)/2
 718 000a 1E       		.byte	(.L72-.L70)/2
 719 000b 28       		.byte	(.L73-.L70)/2
 720 000c 32       		.byte	(.L74-.L70)/2
 721 000d 3C       		.byte	(.L75-.L70)/2
 722 000e 46       		.byte	(.L76-.L70)/2
 723 000f 50       		.byte	(.L77-.L70)/2
 724              		.p2align 1
 725              	.L69:
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 24


 726              		.loc 1 570 0
 727 0010 2C4B     		ldr	r3, .L79
 728 0012 586A     		ldr	r0, [r3, #36]
 729              	.LVL68:
 730 0014 21F42042 		bic	r2, r1, #40960
 731 0018 0243     		orrs	r2, r2, r0
 732 001a 5A62     		str	r2, [r3, #36]
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 733              		.loc 1 571 0
 734 001c 1A6A     		ldr	r2, [r3, #32]
 735 001e 21F48041 		bic	r1, r1, #16384
 736              	.LVL69:
 737 0022 22EA0101 		bic	r1, r2, r1
 738 0026 1962     		str	r1, [r3, #32]
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, GPIONumber);
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, GPIONumber);
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else       
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif  
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 25


 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        return HAL_ERROR;
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 739              		.loc 1 623 0
 740 0028 0020     		movs	r0, #0
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 741              		.loc 1 572 0
 742 002a 7047     		bx	lr
 743              	.LVL70:
 744              	.L71:
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 745              		.loc 1 574 0
 746 002c 254B     		ldr	r3, .L79
 747 002e D86A     		ldr	r0, [r3, #44]
 748              	.LVL71:
 749 0030 21F01002 		bic	r2, r1, #16
 750 0034 0243     		orrs	r2, r2, r0
 751 0036 DA62     		str	r2, [r3, #44]
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 752              		.loc 1 575 0
 753 0038 9A6A     		ldr	r2, [r3, #40]
 754 003a 22EA0101 		bic	r1, r2, r1
 755              	.LVL72:
 756 003e 9962     		str	r1, [r3, #40]
 757              		.loc 1 623 0
 758 0040 0020     		movs	r0, #0
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 759              		.loc 1 576 0
 760 0042 7047     		bx	lr
 761              	.LVL73:
 762              	.L72:
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 763              		.loc 1 578 0
 764 0044 1F4B     		ldr	r3, .L79
 765 0046 5A6B     		ldr	r2, [r3, #52]
 766 0048 0A43     		orrs	r2, r2, r1
 767 004a 5A63     		str	r2, [r3, #52]
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 768              		.loc 1 579 0
 769 004c 1A6B     		ldr	r2, [r3, #48]
 770 004e 22EA0101 		bic	r1, r2, r1
 771              	.LVL74:
 772 0052 1963     		str	r1, [r3, #48]
 773              		.loc 1 623 0
 774 0054 0020     		movs	r0, #0
 775              	.LVL75:
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 776              		.loc 1 580 0
 777 0056 7047     		bx	lr
 778              	.LVL76:
 779              	.L73:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 26


 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 780              		.loc 1 583 0
 781 0058 1A4B     		ldr	r3, .L79
 782 005a DA6B     		ldr	r2, [r3, #60]
 783 005c 0A43     		orrs	r2, r2, r1
 784 005e DA63     		str	r2, [r3, #60]
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 785              		.loc 1 584 0
 786 0060 9A6B     		ldr	r2, [r3, #56]
 787 0062 22EA0101 		bic	r1, r2, r1
 788              	.LVL77:
 789 0066 9963     		str	r1, [r3, #56]
 790              		.loc 1 623 0
 791 0068 0020     		movs	r0, #0
 792              	.LVL78:
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 793              		.loc 1 585 0
 794 006a 7047     		bx	lr
 795              	.LVL79:
 796              	.L74:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 797              		.loc 1 589 0
 798 006c 154B     		ldr	r3, .L79
 799 006e 5A6C     		ldr	r2, [r3, #68]
 800 0070 0A43     		orrs	r2, r2, r1
 801 0072 5A64     		str	r2, [r3, #68]
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 802              		.loc 1 590 0
 803 0074 1A6C     		ldr	r2, [r3, #64]
 804 0076 22EA0101 		bic	r1, r2, r1
 805              	.LVL80:
 806 007a 1964     		str	r1, [r3, #64]
 807              		.loc 1 623 0
 808 007c 0020     		movs	r0, #0
 809              	.LVL81:
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 810              		.loc 1 591 0
 811 007e 7047     		bx	lr
 812              	.LVL82:
 813              	.L75:
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 814              		.loc 1 595 0
 815 0080 104B     		ldr	r3, .L79
 816 0082 DA6C     		ldr	r2, [r3, #76]
 817 0084 0A43     		orrs	r2, r2, r1
 818 0086 DA64     		str	r2, [r3, #76]
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 819              		.loc 1 596 0
 820 0088 9A6C     		ldr	r2, [r3, #72]
 821 008a 22EA0101 		bic	r1, r2, r1
 822              	.LVL83:
 823 008e 9964     		str	r1, [r3, #72]
 824              		.loc 1 623 0
 825 0090 0020     		movs	r0, #0
 826              	.LVL84:
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 827              		.loc 1 597 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 27


 828 0092 7047     		bx	lr
 829              	.LVL85:
 830              	.L76:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 831              		.loc 1 601 0
 832 0094 0B4B     		ldr	r3, .L79
 833 0096 5A6D     		ldr	r2, [r3, #84]
 834 0098 0A43     		orrs	r2, r2, r1
 835 009a 5A65     		str	r2, [r3, #84]
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 836              		.loc 1 602 0
 837 009c 1A6D     		ldr	r2, [r3, #80]
 838 009e 22EA0101 		bic	r1, r2, r1
 839              	.LVL86:
 840 00a2 1965     		str	r1, [r3, #80]
 841              		.loc 1 623 0
 842 00a4 0020     		movs	r0, #0
 843              	.LVL87:
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 844              		.loc 1 603 0
 845 00a6 7047     		bx	lr
 846              	.LVL88:
 847              	.L77:
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif  
 848              		.loc 1 609 0
 849 00a8 064B     		ldr	r3, .L79
 850 00aa DA6D     		ldr	r2, [r3, #92]
 851 00ac 01F00301 		and	r1, r1, #3
 852              	.LVL89:
 853 00b0 0A43     		orrs	r2, r2, r1
 854 00b2 DA65     		str	r2, [r3, #92]
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 855              		.loc 1 611 0
 856 00b4 9A6D     		ldr	r2, [r3, #88]
 857 00b6 22EA0101 		bic	r1, r2, r1
 858 00ba 9965     		str	r1, [r3, #88]
 859              		.loc 1 623 0
 860 00bc 0020     		movs	r0, #0
 861              	.LVL90:
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 862              		.loc 1 612 0
 863 00be 7047     		bx	lr
 864              	.LVL91:
 865              	.L78:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 866              		.loc 1 620 0
 867 00c0 0120     		movs	r0, #1
 868              	.LVL92:
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 869              		.loc 1 624 0
 870 00c2 7047     		bx	lr
 871              	.L80:
 872              		.align	2
 873              	.L79:
 874 00c4 00700040 		.word	1073770496
 875              		.cfi_endproc
 876              	.LFE318:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 28


 878              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 879              		.align	2
 880              		.global	HAL_PWREx_DisableGPIOPullDown
 881              		.thumb
 882              		.thumb_func
 884              	HAL_PWREx_DisableGPIOPullDown:
 885              	.LFB319:
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes. 
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input 
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.   
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less  
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 886              		.loc 1 643 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891              	.LVL93:
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 892              		.loc 1 647 0
 893 0000 0728     		cmp	r0, #7
 894 0002 43D8     		bhi	.L92
 895 0004 DFE800F0 		tbb	[pc, r0]
 896              	.L84:
 897 0008 04       		.byte	(.L83-.L84)/2
 898 0009 0D       		.byte	(.L85-.L84)/2
 899 000a 16       		.byte	(.L86-.L84)/2
 900 000b 1D       		.byte	(.L87-.L84)/2
 901 000c 24       		.byte	(.L88-.L84)/2
 902 000d 2B       		.byte	(.L89-.L84)/2
 903 000e 32       		.byte	(.L90-.L84)/2
 904 000f 39       		.byte	(.L91-.L84)/2
 905              		.p2align 1
 906              	.L83:
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 907              		.loc 1 650 0
 908 0010 1F4A     		ldr	r2, .L93
 909 0012 536A     		ldr	r3, [r2, #36]
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 29


 910 0014 21F42041 		bic	r1, r1, #40960
 911              	.LVL94:
 912 0018 23EA0101 		bic	r1, r3, r1
 913 001c 5162     		str	r1, [r2, #36]
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF) 
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else       
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif     
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        return HAL_ERROR;
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 914              		.loc 1 694 0
 915 001e 0020     		movs	r0, #0
 916              	.LVL95:
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 917              		.loc 1 651 0
 918 0020 7047     		bx	lr
 919              	.LVL96:
 920              	.L85:
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 30


 921              		.loc 1 653 0
 922 0022 1B4A     		ldr	r2, .L93
 923 0024 D36A     		ldr	r3, [r2, #44]
 924 0026 21F01001 		bic	r1, r1, #16
 925              	.LVL97:
 926 002a 23EA0101 		bic	r1, r3, r1
 927 002e D162     		str	r1, [r2, #44]
 928              		.loc 1 694 0
 929 0030 0020     		movs	r0, #0
 930              	.LVL98:
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 931              		.loc 1 654 0
 932 0032 7047     		bx	lr
 933              	.LVL99:
 934              	.L86:
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 935              		.loc 1 656 0
 936 0034 164A     		ldr	r2, .L93
 937 0036 536B     		ldr	r3, [r2, #52]
 938 0038 23EA0101 		bic	r1, r3, r1
 939              	.LVL100:
 940 003c 5163     		str	r1, [r2, #52]
 941              		.loc 1 694 0
 942 003e 0020     		movs	r0, #0
 943              	.LVL101:
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 944              		.loc 1 657 0
 945 0040 7047     		bx	lr
 946              	.LVL102:
 947              	.L87:
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 948              		.loc 1 660 0
 949 0042 134A     		ldr	r2, .L93
 950 0044 D36B     		ldr	r3, [r2, #60]
 951 0046 23EA0101 		bic	r1, r3, r1
 952              	.LVL103:
 953 004a D163     		str	r1, [r2, #60]
 954              		.loc 1 694 0
 955 004c 0020     		movs	r0, #0
 956              	.LVL104:
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 957              		.loc 1 661 0
 958 004e 7047     		bx	lr
 959              	.LVL105:
 960              	.L88:
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 961              		.loc 1 665 0
 962 0050 0F4A     		ldr	r2, .L93
 963 0052 536C     		ldr	r3, [r2, #68]
 964 0054 23EA0101 		bic	r1, r3, r1
 965              	.LVL106:
 966 0058 5164     		str	r1, [r2, #68]
 967              		.loc 1 694 0
 968 005a 0020     		movs	r0, #0
 969              	.LVL107:
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 970              		.loc 1 666 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 31


 971 005c 7047     		bx	lr
 972              	.LVL108:
 973              	.L89:
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 974              		.loc 1 670 0
 975 005e 0C4A     		ldr	r2, .L93
 976 0060 D36C     		ldr	r3, [r2, #76]
 977 0062 23EA0101 		bic	r1, r3, r1
 978              	.LVL109:
 979 0066 D164     		str	r1, [r2, #76]
 980              		.loc 1 694 0
 981 0068 0020     		movs	r0, #0
 982              	.LVL110:
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 983              		.loc 1 671 0
 984 006a 7047     		bx	lr
 985              	.LVL111:
 986              	.L90:
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 987              		.loc 1 675 0
 988 006c 084A     		ldr	r2, .L93
 989 006e 536D     		ldr	r3, [r2, #84]
 990 0070 23EA0101 		bic	r1, r3, r1
 991              	.LVL112:
 992 0074 5165     		str	r1, [r2, #84]
 993              		.loc 1 694 0
 994 0076 0020     		movs	r0, #0
 995              	.LVL113:
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 996              		.loc 1 676 0
 997 0078 7047     		bx	lr
 998              	.LVL114:
 999              	.L91:
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif     
 1000              		.loc 1 682 0
 1001 007a 054A     		ldr	r2, .L93
 1002 007c D36D     		ldr	r3, [r2, #92]
 1003 007e 01F00301 		and	r1, r1, #3
 1004              	.LVL115:
 1005 0082 23EA0101 		bic	r1, r3, r1
 1006 0086 D165     		str	r1, [r2, #92]
 1007              		.loc 1 694 0
 1008 0088 0020     		movs	r0, #0
 1009              	.LVL116:
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 1010              		.loc 1 684 0
 1011 008a 7047     		bx	lr
 1012              	.LVL117:
 1013              	.L92:
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 1014              		.loc 1 691 0
 1015 008c 0120     		movs	r0, #1
 1016              	.LVL118:
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1017              		.loc 1 695 0
 1018 008e 7047     		bx	lr
 1019              	.L94:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 32


 1020              		.align	2
 1021              	.L93:
 1022 0090 00700040 		.word	1073770496
 1023              		.cfi_endproc
 1024              	.LFE319:
 1026              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1027              		.align	2
 1028              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1029              		.thumb
 1030              		.thumb_func
 1032              	HAL_PWREx_EnablePullUpPullDownConfig:
 1033              	.LFB320:
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in 
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.    
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher). 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there 
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.         
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1034              		.loc 1 710 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1039              		.loc 1 711 0
 1040 0000 024A     		ldr	r2, .L96
 1041 0002 9368     		ldr	r3, [r2, #8]
 1042 0004 43F48063 		orr	r3, r3, #1024
 1043 0008 9360     		str	r3, [r2, #8]
 1044 000a 7047     		bx	lr
 1045              	.L97:
 1046              		.align	2
 1047              	.L96:
 1048 000c 00700040 		.word	1073770496
 1049              		.cfi_endproc
 1050              	.LFE320:
 1052              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1053              		.align	2
 1054              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1055              		.thumb
 1056              		.thumb_func
 1058              	HAL_PWREx_DisablePullUpPullDownConfig:
 1059              	.LFB321:
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 33


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in 
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.     
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1060              		.loc 1 722 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1065              		.loc 1 723 0
 1066 0000 024A     		ldr	r2, .L99
 1067 0002 9368     		ldr	r3, [r2, #8]
 1068 0004 23F48063 		bic	r3, r3, #1024
 1069 0008 9360     		str	r3, [r2, #8]
 1070 000a 7047     		bx	lr
 1071              	.L100:
 1072              		.align	2
 1073              	.L99:
 1074 000c 00700040 		.word	1073770496
 1075              		.cfi_endproc
 1076              	.LFE321:
 1078              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1079              		.align	2
 1080              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1081              		.thumb
 1082              		.thumb_func
 1084              	HAL_PWREx_EnableSRAM2ContentRetention:
 1085              	.LFB322:
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in 
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.    
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1086              		.loc 1 735 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1091              		.loc 1 736 0
 1092 0000 024A     		ldr	r2, .L102
 1093 0002 9368     		ldr	r3, [r2, #8]
 1094 0004 43F48073 		orr	r3, r3, #256
 1095 0008 9360     		str	r3, [r2, #8]
 1096 000a 7047     		bx	lr
 1097              	.L103:
 1098              		.align	2
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 34


 1099              	.L102:
 1100 000c 00700040 		.word	1073770496
 1101              		.cfi_endproc
 1102              	.LFE322:
 1104              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1105              		.align	2
 1106              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1107              		.thumb
 1108              		.thumb_func
 1110              	HAL_PWREx_DisableSRAM2ContentRetention:
 1111              	.LFB323:
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode 
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.      
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1112              		.loc 1 747 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1117              		.loc 1 748 0
 1118 0000 024A     		ldr	r2, .L105
 1119 0002 9368     		ldr	r3, [r2, #8]
 1120 0004 23F48073 		bic	r3, r3, #256
 1121 0008 9360     		str	r3, [r2, #8]
 1122 000a 7047     		bx	lr
 1123              	.L106:
 1124              		.align	2
 1125              	.L105:
 1126 000c 00700040 		.word	1073770496
 1127              		.cfi_endproc
 1128              	.LFE323:
 1130              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1131              		.align	2
 1132              		.global	HAL_PWREx_EnablePVM1
 1133              		.thumb
 1134              		.thumb_func
 1136              	HAL_PWREx_EnablePVM1:
 1137              	.LFB324:
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR1_RRSTP)
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM3 content retention in Stop 2 mode.
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is set, SRAM3 is powered by the low-power regulator in 
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Stop 2 mode and its content is kept.    
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 35


 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM3ContentRetention(void)
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_RRSTP);
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM3 content retention in Stop 2 mode.
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is reset, SRAM3 is powered off in Stop 2 mode 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.      
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM3ContentRetention(void)
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_RRSTP);
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR1_RRSTP */
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_DSIPDEN)
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-down activation on DSI pins.   
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableDSIPinsPDActivation(void)
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-down activation on DSI pins.    
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableDSIPinsPDActivation(void)
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_DSIPDEN */
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1138              		.loc 1 804 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);    
 1143              		.loc 1 805 0
 1144 0000 024A     		ldr	r2, .L108
 1145 0002 5368     		ldr	r3, [r2, #4]
 1146 0004 43F01003 		orr	r3, r3, #16
 1147 0008 5360     		str	r3, [r2, #4]
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 36


 1148 000a 7047     		bx	lr
 1149              	.L109:
 1150              		.align	2
 1151              	.L108:
 1152 000c 00700040 		.word	1073770496
 1153              		.cfi_endproc
 1154              	.LFE324:
 1156              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1157              		.align	2
 1158              		.global	HAL_PWREx_DisablePVM1
 1159              		.thumb
 1160              		.thumb_func
 1162              	HAL_PWREx_DisablePVM1:
 1163              	.LFB325:
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1164              		.loc 1 813 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);    
 1169              		.loc 1 814 0
 1170 0000 024A     		ldr	r2, .L111
 1171 0002 5368     		ldr	r3, [r2, #4]
 1172 0004 23F01003 		bic	r3, r3, #16
 1173 0008 5360     		str	r3, [r2, #4]
 1174 000a 7047     		bx	lr
 1175              	.L112:
 1176              		.align	2
 1177              	.L111:
 1178 000c 00700040 		.word	1073770496
 1179              		.cfi_endproc
 1180              	.LFE325:
 1182              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1183              		.align	2
 1184              		.global	HAL_PWREx_EnablePVM2
 1185              		.thumb
 1186              		.thumb_func
 1188              	HAL_PWREx_EnablePVM2:
 1189              	.LFB326:
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 37


 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1190              		.loc 1 825 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);    
 1195              		.loc 1 826 0
 1196 0000 024A     		ldr	r2, .L114
 1197 0002 5368     		ldr	r3, [r2, #4]
 1198 0004 43F02003 		orr	r3, r3, #32
 1199 0008 5360     		str	r3, [r2, #4]
 1200 000a 7047     		bx	lr
 1201              	.L115:
 1202              		.align	2
 1203              	.L114:
 1204 000c 00700040 		.word	1073770496
 1205              		.cfi_endproc
 1206              	.LFE326:
 1208              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1209              		.align	2
 1210              		.global	HAL_PWREx_DisablePVM2
 1211              		.thumb
 1212              		.thumb_func
 1214              	HAL_PWREx_DisablePVM2:
 1215              	.LFB327:
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1216              		.loc 1 834 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);    
 1221              		.loc 1 835 0
 1222 0000 024A     		ldr	r2, .L117
 1223 0002 5368     		ldr	r3, [r2, #4]
 1224 0004 23F02003 		bic	r3, r3, #32
 1225 0008 5360     		str	r3, [r2, #4]
 1226 000a 7047     		bx	lr
 1227              	.L118:
 1228              		.align	2
 1229              	.L117:
 1230 000c 00700040 		.word	1073770496
 1231              		.cfi_endproc
 1232              	.LFE327:
 1234              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1235              		.align	2
 1236              		.global	HAL_PWREx_EnablePVM3
 1237              		.thumb
 1238              		.thumb_func
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 38


 1240              	HAL_PWREx_EnablePVM3:
 1241              	.LFB328:
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1242              		.loc 1 845 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);    
 1247              		.loc 1 846 0
 1248 0000 024A     		ldr	r2, .L120
 1249 0002 5368     		ldr	r3, [r2, #4]
 1250 0004 43F04003 		orr	r3, r3, #64
 1251 0008 5360     		str	r3, [r2, #4]
 1252 000a 7047     		bx	lr
 1253              	.L121:
 1254              		.align	2
 1255              	.L120:
 1256 000c 00700040 		.word	1073770496
 1257              		.cfi_endproc
 1258              	.LFE328:
 1260              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1261              		.align	2
 1262              		.global	HAL_PWREx_DisablePVM3
 1263              		.thumb
 1264              		.thumb_func
 1266              	HAL_PWREx_DisablePVM3:
 1267              	.LFB329:
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1268              		.loc 1 854 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);    
 1273              		.loc 1 855 0
 1274 0000 024A     		ldr	r2, .L123
 1275 0002 5368     		ldr	r3, [r2, #4]
 1276 0004 23F04003 		bic	r3, r3, #64
 1277 0008 5360     		str	r3, [r2, #4]
 1278 000a 7047     		bx	lr
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 39


 1279              	.L124:
 1280              		.align	2
 1281              	.L123:
 1282 000c 00700040 		.word	1073770496
 1283              		.cfi_endproc
 1284              	.LFE329:
 1286              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1287              		.align	2
 1288              		.global	HAL_PWREx_EnablePVM4
 1289              		.thumb
 1290              		.thumb_func
 1292              	HAL_PWREx_EnablePVM4:
 1293              	.LFB330:
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1294              		.loc 1 864 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);    
 1299              		.loc 1 865 0
 1300 0000 024A     		ldr	r2, .L126
 1301 0002 5368     		ldr	r3, [r2, #4]
 1302 0004 43F08003 		orr	r3, r3, #128
 1303 0008 5360     		str	r3, [r2, #4]
 1304 000a 7047     		bx	lr
 1305              	.L127:
 1306              		.align	2
 1307              	.L126:
 1308 000c 00700040 		.word	1073770496
 1309              		.cfi_endproc
 1310              	.LFE330:
 1312              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1313              		.align	2
 1314              		.global	HAL_PWREx_DisablePVM4
 1315              		.thumb
 1316              		.thumb_func
 1318              	HAL_PWREx_DisablePVM4:
 1319              	.LFB331:
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1320              		.loc 1 873 0
 1321              		.cfi_startproc
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 40


 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);    
 1325              		.loc 1 874 0
 1326 0000 024A     		ldr	r2, .L129
 1327 0002 5368     		ldr	r3, [r2, #4]
 1328 0004 23F08003 		bic	r3, r3, #128
 1329 0008 5360     		str	r3, [r2, #4]
 1330 000a 7047     		bx	lr
 1331              	.L130:
 1332              		.align	2
 1333              	.L129:
 1334 000c 00700040 		.word	1073770496
 1335              		.cfi_endproc
 1336              	.LFE331:
 1338              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1339              		.align	2
 1340              		.global	HAL_PWREx_ConfigPVM
 1341              		.thumb
 1342              		.thumb_func
 1344              	HAL_PWREx_ConfigPVM:
 1345              	.LFB332:
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained 
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly 
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL status
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 1346              		.loc 1 893 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL119:
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 41


 1352              		.loc 1 902 0
 1353 0000 0368     		ldr	r3, [r0]
 1354 0002 202B     		cmp	r3, #32
 1355 0004 41D0     		beq	.L133
 1356 0006 02D8     		bhi	.L134
 1357 0008 102B     		cmp	r3, #16
 1358 000a 06D0     		beq	.L135
 1359 000c E2E0     		b	.L150
 1360              	.L134:
 1361 000e 402B     		cmp	r3, #64
 1362 0010 72D0     		beq	.L136
 1363 0012 802B     		cmp	r3, #128
 1364 0014 00F0A780 		beq	.L137
 1365 0018 DCE0     		b	.L150
 1366              	.L135:
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)  
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 1367              		.loc 1 907 0
 1368 001a 734B     		ldr	r3, .L155
 1369 001c 5A6A     		ldr	r2, [r3, #36]
 1370 001e 22F00802 		bic	r2, r2, #8
 1371 0022 5A62     		str	r2, [r3, #36]
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1372              		.loc 1 908 0
 1373 0024 1A6A     		ldr	r2, [r3, #32]
 1374 0026 22F00802 		bic	r2, r2, #8
 1375 002a 1A62     		str	r2, [r3, #32]
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE(); 
 1376              		.loc 1 909 0
 1377 002c DA6A     		ldr	r2, [r3, #44]
 1378 002e 22F00802 		bic	r2, r2, #8
 1379 0032 DA62     		str	r2, [r3, #44]
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1380              		.loc 1 910 0
 1381 0034 9A6A     		ldr	r2, [r3, #40]
 1382 0036 22F00802 		bic	r2, r2, #8
 1383 003a 9A62     		str	r2, [r3, #40]
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1384              		.loc 1 913 0
 1385 003c 4368     		ldr	r3, [r0, #4]
 1386 003e 13F4803F 		tst	r3, #65536
 1387 0042 04D0     		beq	.L138
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 1388              		.loc 1 915 0
 1389 0044 684A     		ldr	r2, .L155
 1390 0046 136A     		ldr	r3, [r2, #32]
 1391 0048 43F00803 		orr	r3, r3, #8
 1392 004c 1362     		str	r3, [r2, #32]
 1393              	.L138:
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 42


 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1394              		.loc 1 919 0
 1395 004e 4368     		ldr	r3, [r0, #4]
 1396 0050 13F4003F 		tst	r3, #131072
 1397 0054 04D0     		beq	.L139
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 1398              		.loc 1 921 0
 1399 0056 644A     		ldr	r2, .L155
 1400 0058 536A     		ldr	r3, [r2, #36]
 1401 005a 43F00803 		orr	r3, r3, #8
 1402 005e 5362     		str	r3, [r2, #36]
 1403              	.L139:
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1404              		.loc 1 925 0
 1405 0060 4368     		ldr	r3, [r0, #4]
 1406 0062 13F0010F 		tst	r3, #1
 1407 0066 04D0     		beq	.L140
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 1408              		.loc 1 927 0
 1409 0068 5F4A     		ldr	r2, .L155
 1410 006a 936A     		ldr	r3, [r2, #40]
 1411 006c 43F00803 		orr	r3, r3, #8
 1412 0070 9362     		str	r3, [r2, #40]
 1413              	.L140:
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1414              		.loc 1 930 0
 1415 0072 4368     		ldr	r3, [r0, #4]
 1416 0074 13F0020F 		tst	r3, #2
 1417 0078 00F0AE80 		beq	.L151
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 1418              		.loc 1 932 0
 1419 007c 5A4A     		ldr	r2, .L155
 1420 007e D36A     		ldr	r3, [r2, #44]
 1421 0080 43F00803 		orr	r3, r3, #8
 1422 0084 D362     		str	r3, [r2, #44]
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break; 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */        
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)    
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE(); 
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 43


 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */      
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE(); 
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 44


1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE(); 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;  
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return HAL_ERROR;                      
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }   
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1423              		.loc 1 1038 0
 1424 0086 0020     		movs	r0, #0
 1425              	.LVL120:
 1426 0088 7047     		bx	lr
 1427              	.LVL121:
 1428              	.L133:
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1429              		.loc 1 940 0
 1430 008a 574B     		ldr	r3, .L155
 1431 008c 5A6A     		ldr	r2, [r3, #36]
 1432 008e 22F01002 		bic	r2, r2, #16
 1433 0092 5A62     		str	r2, [r3, #36]
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE(); 
 1434              		.loc 1 941 0
 1435 0094 1A6A     		ldr	r2, [r3, #32]
 1436 0096 22F01002 		bic	r2, r2, #16
 1437 009a 1A62     		str	r2, [r3, #32]
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1438              		.loc 1 942 0
 1439 009c DA6A     		ldr	r2, [r3, #44]
 1440 009e 22F01002 		bic	r2, r2, #16
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 45


 1441 00a2 DA62     		str	r2, [r3, #44]
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1442              		.loc 1 943 0
 1443 00a4 9A6A     		ldr	r2, [r3, #40]
 1444 00a6 22F01002 		bic	r2, r2, #16
 1445 00aa 9A62     		str	r2, [r3, #40]
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1446              		.loc 1 946 0
 1447 00ac 4368     		ldr	r3, [r0, #4]
 1448 00ae 13F4803F 		tst	r3, #65536
 1449 00b2 04D0     		beq	.L141
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1450              		.loc 1 948 0
 1451 00b4 4C4A     		ldr	r2, .L155
 1452 00b6 136A     		ldr	r3, [r2, #32]
 1453 00b8 43F01003 		orr	r3, r3, #16
 1454 00bc 1362     		str	r3, [r2, #32]
 1455              	.L141:
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1456              		.loc 1 952 0
 1457 00be 4368     		ldr	r3, [r0, #4]
 1458 00c0 13F4003F 		tst	r3, #131072
 1459 00c4 04D0     		beq	.L142
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1460              		.loc 1 954 0
 1461 00c6 484A     		ldr	r2, .L155
 1462 00c8 536A     		ldr	r3, [r2, #36]
 1463 00ca 43F01003 		orr	r3, r3, #16
 1464 00ce 5362     		str	r3, [r2, #36]
 1465              	.L142:
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1466              		.loc 1 958 0
 1467 00d0 4368     		ldr	r3, [r0, #4]
 1468 00d2 13F0010F 		tst	r3, #1
 1469 00d6 04D0     		beq	.L143
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1470              		.loc 1 960 0
 1471 00d8 434A     		ldr	r2, .L155
 1472 00da 936A     		ldr	r3, [r2, #40]
 1473 00dc 43F01003 		orr	r3, r3, #16
 1474 00e0 9362     		str	r3, [r2, #40]
 1475              	.L143:
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1476              		.loc 1 963 0
 1477 00e2 4368     		ldr	r3, [r0, #4]
 1478 00e4 13F0020F 		tst	r3, #2
 1479 00e8 78D0     		beq	.L152
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1480              		.loc 1 965 0
 1481 00ea 3F4A     		ldr	r2, .L155
 1482 00ec D36A     		ldr	r3, [r2, #44]
 1483 00ee 43F01003 		orr	r3, r3, #16
 1484 00f2 D362     		str	r3, [r2, #44]
 1485              		.loc 1 1038 0
 1486 00f4 0020     		movs	r0, #0
 1487              	.LVL122:
 1488 00f6 7047     		bx	lr
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 46


 1489              	.LVL123:
 1490              	.L136:
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 1491              		.loc 1 972 0
 1492 00f8 3B4B     		ldr	r3, .L155
 1493 00fa 5A6A     		ldr	r2, [r3, #36]
 1494 00fc 22F02002 		bic	r2, r2, #32
 1495 0100 5A62     		str	r2, [r3, #36]
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE(); 
 1496              		.loc 1 973 0
 1497 0102 1A6A     		ldr	r2, [r3, #32]
 1498 0104 22F02002 		bic	r2, r2, #32
 1499 0108 1A62     		str	r2, [r3, #32]
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 1500              		.loc 1 974 0
 1501 010a DA6A     		ldr	r2, [r3, #44]
 1502 010c 22F02002 		bic	r2, r2, #32
 1503 0110 DA62     		str	r2, [r3, #44]
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1504              		.loc 1 975 0
 1505 0112 9A6A     		ldr	r2, [r3, #40]
 1506 0114 22F02002 		bic	r2, r2, #32
 1507 0118 9A62     		str	r2, [r3, #40]
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1508              		.loc 1 978 0
 1509 011a 4368     		ldr	r3, [r0, #4]
 1510 011c 13F4803F 		tst	r3, #65536
 1511 0120 04D0     		beq	.L144
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1512              		.loc 1 980 0
 1513 0122 314A     		ldr	r2, .L155
 1514 0124 136A     		ldr	r3, [r2, #32]
 1515 0126 43F02003 		orr	r3, r3, #32
 1516 012a 1362     		str	r3, [r2, #32]
 1517              	.L144:
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1518              		.loc 1 984 0
 1519 012c 4368     		ldr	r3, [r0, #4]
 1520 012e 13F4003F 		tst	r3, #131072
 1521 0132 04D0     		beq	.L145
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1522              		.loc 1 986 0
 1523 0134 2C4A     		ldr	r2, .L155
 1524 0136 536A     		ldr	r3, [r2, #36]
 1525 0138 43F02003 		orr	r3, r3, #32
 1526 013c 5362     		str	r3, [r2, #36]
 1527              	.L145:
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1528              		.loc 1 990 0
 1529 013e 4368     		ldr	r3, [r0, #4]
 1530 0140 13F0010F 		tst	r3, #1
 1531 0144 04D0     		beq	.L146
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1532              		.loc 1 992 0
 1533 0146 284A     		ldr	r2, .L155
 1534 0148 936A     		ldr	r3, [r2, #40]
 1535 014a 43F02003 		orr	r3, r3, #32
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 47


 1536 014e 9362     		str	r3, [r2, #40]
 1537              	.L146:
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1538              		.loc 1 995 0
 1539 0150 4368     		ldr	r3, [r0, #4]
 1540 0152 13F0020F 		tst	r3, #2
 1541 0156 43D0     		beq	.L153
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1542              		.loc 1 997 0
 1543 0158 234A     		ldr	r2, .L155
 1544 015a D36A     		ldr	r3, [r2, #44]
 1545 015c 43F02003 		orr	r3, r3, #32
 1546 0160 D362     		str	r3, [r2, #44]
 1547              		.loc 1 1038 0
 1548 0162 0020     		movs	r0, #0
 1549              	.LVL124:
 1550 0164 7047     		bx	lr
 1551              	.LVL125:
 1552              	.L137:
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 1553              		.loc 1 1003 0
 1554 0166 204B     		ldr	r3, .L155
 1555 0168 5A6A     		ldr	r2, [r3, #36]
 1556 016a 22F04002 		bic	r2, r2, #64
 1557 016e 5A62     		str	r2, [r3, #36]
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE(); 
 1558              		.loc 1 1004 0
 1559 0170 1A6A     		ldr	r2, [r3, #32]
 1560 0172 22F04002 		bic	r2, r2, #64
 1561 0176 1A62     		str	r2, [r3, #32]
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 1562              		.loc 1 1005 0
 1563 0178 DA6A     		ldr	r2, [r3, #44]
 1564 017a 22F04002 		bic	r2, r2, #64
 1565 017e DA62     		str	r2, [r3, #44]
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1566              		.loc 1 1006 0
 1567 0180 9A6A     		ldr	r2, [r3, #40]
 1568 0182 22F04002 		bic	r2, r2, #64
 1569 0186 9A62     		str	r2, [r3, #40]
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1570              		.loc 1 1009 0
 1571 0188 4368     		ldr	r3, [r0, #4]
 1572 018a 13F4803F 		tst	r3, #65536
 1573 018e 04D0     		beq	.L147
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1574              		.loc 1 1011 0
 1575 0190 154A     		ldr	r2, .L155
 1576 0192 136A     		ldr	r3, [r2, #32]
 1577 0194 43F04003 		orr	r3, r3, #64
 1578 0198 1362     		str	r3, [r2, #32]
 1579              	.L147:
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1580              		.loc 1 1015 0
 1581 019a 4368     		ldr	r3, [r0, #4]
 1582 019c 13F4003F 		tst	r3, #131072
 1583 01a0 04D0     		beq	.L148
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 48


1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1584              		.loc 1 1017 0
 1585 01a2 114A     		ldr	r2, .L155
 1586 01a4 536A     		ldr	r3, [r2, #36]
 1587 01a6 43F04003 		orr	r3, r3, #64
 1588 01aa 5362     		str	r3, [r2, #36]
 1589              	.L148:
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1590              		.loc 1 1021 0
 1591 01ac 4368     		ldr	r3, [r0, #4]
 1592 01ae 13F0010F 		tst	r3, #1
 1593 01b2 04D0     		beq	.L149
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1594              		.loc 1 1023 0
 1595 01b4 0C4A     		ldr	r2, .L155
 1596 01b6 936A     		ldr	r3, [r2, #40]
 1597 01b8 43F04003 		orr	r3, r3, #64
 1598 01bc 9362     		str	r3, [r2, #40]
 1599              	.L149:
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1600              		.loc 1 1026 0
 1601 01be 4368     		ldr	r3, [r0, #4]
 1602 01c0 13F0020F 		tst	r3, #2
 1603 01c4 0ED0     		beq	.L154
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1604              		.loc 1 1028 0
 1605 01c6 084A     		ldr	r2, .L155
 1606 01c8 D36A     		ldr	r3, [r2, #44]
 1607 01ca 43F04003 		orr	r3, r3, #64
 1608 01ce D362     		str	r3, [r2, #44]
 1609              		.loc 1 1038 0
 1610 01d0 0020     		movs	r0, #0
 1611              	.LVL126:
 1612 01d2 7047     		bx	lr
 1613              	.LVL127:
 1614              	.L150:
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 1615              		.loc 1 1033 0
 1616 01d4 0120     		movs	r0, #1
 1617              	.LVL128:
 1618 01d6 7047     		bx	lr
 1619              	.LVL129:
 1620              	.L151:
 1621              		.loc 1 1038 0
 1622 01d8 0020     		movs	r0, #0
 1623              	.LVL130:
 1624 01da 7047     		bx	lr
 1625              	.LVL131:
 1626              	.L152:
 1627 01dc 0020     		movs	r0, #0
 1628              	.LVL132:
 1629 01de 7047     		bx	lr
 1630              	.LVL133:
 1631              	.L153:
 1632 01e0 0020     		movs	r0, #0
 1633              	.LVL134:
 1634 01e2 7047     		bx	lr
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 49


 1635              	.LVL135:
 1636              	.L154:
 1637 01e4 0020     		movs	r0, #0
 1638              	.LVL136:
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1639              		.loc 1 1039 0
 1640 01e6 7047     		bx	lr
 1641              	.L156:
 1642              		.align	2
 1643              	.L155:
 1644 01e8 00040140 		.word	1073808384
 1645              		.cfi_endproc
 1646              	.LFE332:
 1648              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 1649              		.align	2
 1650              		.global	HAL_PWREx_EnableLowPowerRunMode
 1651              		.thumb
 1652              		.thumb_func
 1654              	HAL_PWREx_EnableLowPowerRunMode:
 1655              	.LFB333:
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.  
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.     
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1656              		.loc 1 1054 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR); 
 1661              		.loc 1 1056 0
 1662 0000 024A     		ldr	r2, .L158
 1663 0002 1368     		ldr	r3, [r2]
 1664 0004 43F48043 		orr	r3, r3, #16384
 1665 0008 1360     		str	r3, [r2]
 1666 000a 7047     		bx	lr
 1667              	.L159:
 1668              		.align	2
 1669              	.L158:
 1670 000c 00700040 		.word	1073770496
 1671              		.cfi_endproc
 1672              	.LFE333:
 1674              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 1675              		.align	2
 1676              		.global	HAL_PWREx_DisableLowPowerRunMode
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 50


 1677              		.thumb
 1678              		.thumb_func
 1680              	HAL_PWREx_DisableLowPowerRunMode:
 1681              	.LFB334:
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that 
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode 
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.   
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1682              		.loc 1 1069 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 0
 1685              		@ frame_needed = 0, uses_anonymous_args = 0
 1686              		@ link register save eliminated.
 1687              	.LVL137:
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR); 
 1688              		.loc 1 1073 0
 1689 0000 114A     		ldr	r2, .L166
 1690 0002 1368     		ldr	r3, [r2]
 1691 0004 23F48043 		bic	r3, r3, #16384
 1692 0008 1360     		str	r3, [r2]
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 1693              		.loc 1 1076 0
 1694 000a 104B     		ldr	r3, .L166+4
 1695 000c 1B68     		ldr	r3, [r3]
 1696 000e 02F14672 		add	r2, r2, #51904512
 1697 0012 02F55B32 		add	r2, r2, #224256
 1698 0016 02F28322 		addw	r2, r2, #643
 1699 001a A2FB0323 		umull	r2, r3, r2, r3
 1700 001e 9A0C     		lsrs	r2, r3, #18
 1701 0020 3223     		movs	r3, #50
 1702 0022 03FB02F3 		mul	r3, r3, r2
 1703              	.LVL138:
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 1704              		.loc 1 1077 0
 1705 0026 00E0     		b	.L161
 1706              	.L163:
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     wait_loop_index--;
 1707              		.loc 1 1079 0
 1708 0028 013B     		subs	r3, r3, #1
 1709              	.LVL139:
 1710              	.L161:
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 51


 1711              		.loc 1 1077 0
 1712 002a 23B1     		cbz	r3, .L162
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 1713              		.loc 1 1077 0 is_stmt 0 discriminator 1
 1714 002c 064A     		ldr	r2, .L166
 1715 002e 5269     		ldr	r2, [r2, #20]
 1716 0030 12F4007F 		tst	r2, #512
 1717 0034 F8D1     		bne	.L163
 1718              	.L162:
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 1719              		.loc 1 1081 0 is_stmt 1
 1720 0036 044B     		ldr	r3, .L166
 1721              	.LVL140:
 1722 0038 5B69     		ldr	r3, [r3, #20]
 1723 003a 13F4007F 		tst	r3, #512
 1724 003e 01D0     		beq	.L165
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 1725              		.loc 1 1083 0
 1726 0040 0320     		movs	r0, #3
 1727 0042 7047     		bx	lr
 1728              	.L165:
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1729              		.loc 1 1086 0
 1730 0044 0020     		movs	r0, #0
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1731              		.loc 1 1087 0
 1732 0046 7047     		bx	lr
 1733              	.L167:
 1734              		.align	2
 1735              	.L166:
 1736 0048 00700040 		.word	1073770496
 1737 004c 00000000 		.word	SystemCoreClock
 1738              		.cfi_endproc
 1739              	.LFE334:
 1741              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 1742              		.align	2
 1743              		.global	HAL_PWREx_EnterSTOP0Mode
 1744              		.thumb
 1745              		.thumb_func
 1747              	HAL_PWREx_EnterSTOP0Mode:
 1748              	.LFB335:
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI, 
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 52


1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.  
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1749              		.loc 1 1113 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              		@ link register save eliminated.
 1754              	.LVL141:
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 1755              		.loc 1 1118 0
 1756 0000 0B4A     		ldr	r2, .L171
 1757 0002 1368     		ldr	r3, [r2]
 1758 0004 23F00703 		bic	r3, r3, #7
 1759 0008 1360     		str	r3, [r2]
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1760              		.loc 1 1121 0
 1761 000a 0A4A     		ldr	r2, .L171+4
 1762 000c 1369     		ldr	r3, [r2, #16]
 1763 000e 43F00403 		orr	r3, r3, #4
 1764 0012 1361     		str	r3, [r2, #16]
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1765              		.loc 1 1124 0
 1766 0014 0128     		cmp	r0, #1
 1767 0016 01D1     		bne	.L169
 1768              	.LBB28:
 1769              	.LBB29:
 1770              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 53


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 54


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 55


 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 56


 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 57


 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 58


 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 59


 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 1771              		.loc 2 385 0
 1772              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1773 0018 30BF     		wfi
 1774              	@ 0 "" 2
 1775              		.thumb
 1776 001a 02E0     		b	.L170
 1777              	.L169:
 1778              	.LBE29:
 1779              	.LBE28:
 1780              	.LBB30:
 1781              	.LBB31:
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 60


 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 1782              		.loc 2 406 0
 1783              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1784 001c 40BF     		sev
 1785              	@ 0 "" 2
 1786              		.thumb
 1787              	.LBE31:
 1788              	.LBE30:
 1789              	.LBB32:
 1790              	.LBB33:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1791              		.loc 2 396 0
 1792              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1793 001e 20BF     		wfe
 1794              	@ 0 "" 2
 1795              		.thumb
 1796              	.LBE33:
 1797              	.LBE32:
 1798              	.LBB34:
 1799              	.LBB35:
 1800              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1801 0020 20BF     		wfe
 1802              	@ 0 "" 2
 1803              		.thumb
 1804              	.L170:
 1805              	.LBE35:
 1806              	.LBE34:
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1807              		.loc 1 1138 0
 1808 0022 044A     		ldr	r2, .L171+4
 1809 0024 1369     		ldr	r3, [r2, #16]
 1810 0026 23F00403 		bic	r3, r3, #4
 1811 002a 1361     		str	r3, [r2, #16]
 1812 002c 7047     		bx	lr
 1813              	.L172:
 1814 002e 00BF     		.align	2
 1815              	.L171:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 61


 1816 0030 00700040 		.word	1073770496
 1817 0034 00ED00E0 		.word	-536810240
 1818              		.cfi_endproc
 1819              	.LFE335:
 1821              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 1822              		.align	2
 1823              		.global	HAL_PWREx_EnterSTOP1Mode
 1824              		.thumb
 1825              		.thumb_func
 1827              	HAL_PWREx_EnterSTOP1Mode:
 1828              	.LFB336:
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI, 
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.  
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1829              		.loc 1 1164 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834              	.LVL142:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 1835              		.loc 1 1169 0
 1836 0000 0C4A     		ldr	r2, .L176
 1837 0002 1368     		ldr	r3, [r2]
 1838 0004 23F00703 		bic	r3, r3, #7
 1839 0008 43F00103 		orr	r3, r3, #1
 1840 000c 1360     		str	r3, [r2]
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 62


 1841              		.loc 1 1172 0
 1842 000e 0A4A     		ldr	r2, .L176+4
 1843 0010 1369     		ldr	r3, [r2, #16]
 1844 0012 43F00403 		orr	r3, r3, #4
 1845 0016 1361     		str	r3, [r2, #16]
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1846              		.loc 1 1175 0
 1847 0018 0128     		cmp	r0, #1
 1848 001a 01D1     		bne	.L174
 1849              	.LBB36:
 1850              	.LBB37:
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1851              		.loc 2 385 0
 1852              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1853 001c 30BF     		wfi
 1854              	@ 0 "" 2
 1855              		.thumb
 1856 001e 02E0     		b	.L175
 1857              	.L174:
 1858              	.LBE37:
 1859              	.LBE36:
 1860              	.LBB38:
 1861              	.LBB39:
 1862              		.loc 2 406 0
 1863              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1864 0020 40BF     		sev
 1865              	@ 0 "" 2
 1866              		.thumb
 1867              	.LBE39:
 1868              	.LBE38:
 1869              	.LBB40:
 1870              	.LBB41:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1871              		.loc 2 396 0
 1872              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1873 0022 20BF     		wfe
 1874              	@ 0 "" 2
 1875              		.thumb
 1876              	.LBE41:
 1877              	.LBE40:
 1878              	.LBB42:
 1879              	.LBB43:
 1880              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1881 0024 20BF     		wfe
 1882              	@ 0 "" 2
 1883              		.thumb
 1884              	.L175:
 1885              	.LBE43:
 1886              	.LBE42:
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 63


1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1887              		.loc 1 1189 0
 1888 0026 044A     		ldr	r2, .L176+4
 1889 0028 1369     		ldr	r3, [r2, #16]
 1890 002a 23F00403 		bic	r3, r3, #4
 1891 002e 1361     		str	r3, [r2, #16]
 1892 0030 7047     		bx	lr
 1893              	.L177:
 1894 0032 00BF     		.align	2
 1895              	.L176:
 1896 0034 00700040 		.word	1073770496
 1897 0038 00ED00E0 		.word	-536810240
 1898              		.cfi_endproc
 1899              	.LFE336:
 1901              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 1902              		.align	2
 1903              		.global	HAL_PWREx_EnterSTOP2Mode
 1904              		.thumb
 1905              		.thumb_func
 1907              	HAL_PWREx_EnterSTOP2Mode:
 1908              	.LFB337:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, only low power voltage regulator is ON.
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI, 
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability 
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.   
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.  
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.     
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1909              		.loc 1 1216 0
 1910              		.cfi_startproc
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 64


 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              		@ link register save eliminated.
 1914              	.LVL143:
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameter */
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP2);
 1915              		.loc 1 1221 0
 1916 0000 0C4A     		ldr	r2, .L181
 1917 0002 1368     		ldr	r3, [r2]
 1918 0004 23F00703 		bic	r3, r3, #7
 1919 0008 43F00203 		orr	r3, r3, #2
 1920 000c 1360     		str	r3, [r2]
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1921              		.loc 1 1224 0
 1922 000e 0A4A     		ldr	r2, .L181+4
 1923 0010 1369     		ldr	r3, [r2, #16]
 1924 0012 43F00403 		orr	r3, r3, #4
 1925 0016 1361     		str	r3, [r2, #16]
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1926              		.loc 1 1227 0
 1927 0018 0128     		cmp	r0, #1
 1928 001a 01D1     		bne	.L179
 1929              	.LBB44:
 1930              	.LBB45:
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1931              		.loc 2 385 0
 1932              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1933 001c 30BF     		wfi
 1934              	@ 0 "" 2
 1935              		.thumb
 1936 001e 02E0     		b	.L180
 1937              	.L179:
 1938              	.LBE45:
 1939              	.LBE44:
 1940              	.LBB46:
 1941              	.LBB47:
 1942              		.loc 2 406 0
 1943              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1944 0020 40BF     		sev
 1945              	@ 0 "" 2
 1946              		.thumb
 1947              	.LBE47:
 1948              	.LBE46:
 1949              	.LBB48:
 1950              	.LBB49:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1951              		.loc 2 396 0
 1952              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1953 0022 20BF     		wfe
 1954              	@ 0 "" 2
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 65


 1955              		.thumb
 1956              	.LBE49:
 1957              	.LBE48:
 1958              	.LBB50:
 1959              	.LBB51:
 1960              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1961 0024 20BF     		wfe
 1962              	@ 0 "" 2
 1963              		.thumb
 1964              	.L180:
 1965              	.LBE51:
 1966              	.LBE50:
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1967              		.loc 1 1241 0
 1968 0026 044A     		ldr	r2, .L181+4
 1969 0028 1369     		ldr	r3, [r2, #16]
 1970 002a 23F00403 		bic	r3, r3, #4
 1971 002e 1361     		str	r3, [r2, #16]
 1972 0030 7047     		bx	lr
 1973              	.L182:
 1974 0032 00BF     		.align	2
 1975              	.L181:
 1976 0034 00700040 		.word	1073770496
 1977 0038 00ED00E0 		.word	-536810240
 1978              		.cfi_endproc
 1979              	.LFE337:
 1981              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 1982              		.align	2
 1983              		.global	HAL_PWREx_EnterSHUTDOWNMode
 1984              		.thumb
 1985              		.thumb_func
 1987              	HAL_PWREx_EnterSHUTDOWNMode:
 1988              	.LFB338:
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode. 
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off. 
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 66


1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is not available.  
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1989              		.loc 1 1258 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              		@ link register save eliminated.
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 1994              		.loc 1 1261 0
 1995 0000 064A     		ldr	r2, .L184
 1996 0002 1368     		ldr	r3, [r2]
 1997 0004 23F00703 		bic	r3, r3, #7
 1998 0008 43F00403 		orr	r3, r3, #4
 1999 000c 1360     		str	r3, [r2]
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2000              		.loc 1 1264 0
 2001 000e 044A     		ldr	r2, .L184+4
 2002 0010 1369     		ldr	r3, [r2, #16]
 2003 0012 43F00403 		orr	r3, r3, #4
 2004 0016 1361     		str	r3, [r2, #16]
 2005              	.LBB52:
 2006              	.LBB53:
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2007              		.loc 2 385 0
 2008              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2009 0018 30BF     		wfi
 2010              	@ 0 "" 2
 2011              		.thumb
 2012 001a 7047     		bx	lr
 2013              	.L185:
 2014              		.align	2
 2015              	.L184:
 2016 001c 00700040 		.word	1073770496
 2017 0020 00ED00E0 		.word	-536810240
 2018              	.LBE53:
 2019              	.LBE52:
 2020              		.cfi_endproc
 2021              	.LFE338:
 2023              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2024              		.align	2
 2025              		.weak	HAL_PWREx_PVM1Callback
 2026              		.thumb
 2027              		.thumb_func
 2029              	HAL_PWREx_PVM1Callback:
 2030              	.LFB340:
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __force_stores();
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 67


1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __WFI();
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().  
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)  
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != RESET) 
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)  
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != RESET) 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */  
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != RESET) 
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != RESET) 
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 68


1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }      
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2031              		.loc 1 1339 0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 0
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
 2036 0000 7047     		bx	lr
 2037              		.cfi_endproc
 2038              	.LFE340:
 2040 0002 00BF     		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2041              		.align	2
 2042              		.weak	HAL_PWREx_PVM2Callback
 2043              		.thumb
 2044              		.thumb_func
 2046              	HAL_PWREx_PVM2Callback:
 2047              	.LFB341:
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2048              		.loc 1 1352 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 0
 2051              		@ frame_needed = 0, uses_anonymous_args = 0
 2052              		@ link register save eliminated.
 2053 0000 7047     		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE341:
 2057 0002 00BF     		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 2058              		.align	2
 2059              		.weak	HAL_PWREx_PVM3Callback
 2060              		.thumb
 2061              		.thumb_func
 2063              	HAL_PWREx_PVM3Callback:
 2064              	.LFB342:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 69


1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2065              		.loc 1 1364 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
 2069              		@ link register save eliminated.
 2070 0000 7047     		bx	lr
 2071              		.cfi_endproc
 2072              	.LFE342:
 2074 0002 00BF     		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 2075              		.align	2
 2076              		.weak	HAL_PWREx_PVM4Callback
 2077              		.thumb
 2078              		.thumb_func
 2080              	HAL_PWREx_PVM4Callback:
 2081              	.LFB343:
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2082              		.loc 1 1375 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 2086              		@ link register save eliminated.
 2087 0000 7047     		bx	lr
 2088              		.cfi_endproc
 2089              	.LFE343:
 2091 0002 00BF     		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2092              		.align	2
 2093              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2094              		.thumb
 2095              		.thumb_func
 2097              	HAL_PWREx_PVD_PVM_IRQHandler:
 2098              	.LFB339:
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 2099              		.loc 1 1283 0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 70


 2102              		@ frame_needed = 0, uses_anonymous_args = 0
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 2103              		.loc 1 1283 0
 2104 0000 08B5     		push	{r3, lr}
 2105              	.LCFI0:
 2106              		.cfi_def_cfa_offset 8
 2107              		.cfi_offset 3, -8
 2108              		.cfi_offset 14, -4
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2109              		.loc 1 1285 0
 2110 0002 1A4B     		ldr	r3, .L197
 2111 0004 5B69     		ldr	r3, [r3, #20]
 2112 0006 13F4803F 		tst	r3, #65536
 2113 000a 05D0     		beq	.L191
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2114              		.loc 1 1288 0
 2115 000c FFF7FEFF 		bl	HAL_PWR_PVDCallback
 2116              	.LVL144:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2117              		.loc 1 1291 0
 2118 0010 4FF48032 		mov	r2, #65536
 2119 0014 154B     		ldr	r3, .L197
 2120 0016 5A61     		str	r2, [r3, #20]
 2121              	.L191:
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2122              		.loc 1 1295 0
 2123 0018 144B     		ldr	r3, .L197
 2124 001a 5B6B     		ldr	r3, [r3, #52]
 2125 001c 13F0080F 		tst	r3, #8
 2126 0020 04D0     		beq	.L192
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 2127              		.loc 1 1298 0
 2128 0022 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
 2129              	.LVL145:
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2130              		.loc 1 1301 0
 2131 0026 0822     		movs	r2, #8
 2132 0028 104B     		ldr	r3, .L197
 2133 002a 5A63     		str	r2, [r3, #52]
 2134              	.L192:
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2135              		.loc 1 1305 0
 2136 002c 0F4B     		ldr	r3, .L197
 2137 002e 5B6B     		ldr	r3, [r3, #52]
 2138 0030 13F0100F 		tst	r3, #16
 2139 0034 04D0     		beq	.L193
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 2140              		.loc 1 1308 0
 2141 0036 FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
 2142              	.LVL146:
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2143              		.loc 1 1311 0
 2144 003a 1022     		movs	r2, #16
 2145 003c 0B4B     		ldr	r3, .L197
 2146 003e 5A63     		str	r2, [r3, #52]
 2147              	.L193:
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 71


 2148              		.loc 1 1314 0
 2149 0040 0A4B     		ldr	r3, .L197
 2150 0042 5B6B     		ldr	r3, [r3, #52]
 2151 0044 13F0200F 		tst	r3, #32
 2152 0048 04D0     		beq	.L194
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 2153              		.loc 1 1317 0
 2154 004a FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
 2155              	.LVL147:
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2156              		.loc 1 1320 0
 2157 004e 2022     		movs	r2, #32
 2158 0050 064B     		ldr	r3, .L197
 2159 0052 5A63     		str	r2, [r3, #52]
 2160              	.L194:
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2161              		.loc 1 1322 0
 2162 0054 054B     		ldr	r3, .L197
 2163 0056 5B6B     		ldr	r3, [r3, #52]
 2164 0058 13F0400F 		tst	r3, #64
 2165 005c 04D0     		beq	.L190
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 2166              		.loc 1 1325 0
 2167 005e FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
 2168              	.LVL148:
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }      
 2169              		.loc 1 1328 0
 2170 0062 4022     		movs	r2, #64
 2171 0064 014B     		ldr	r3, .L197
 2172 0066 5A63     		str	r2, [r3, #52]
 2173              	.L190:
 2174 0068 08BD     		pop	{r3, pc}
 2175              	.L198:
 2176 006a 00BF     		.align	2
 2177              	.L197:
 2178 006c 00040140 		.word	1073808384
 2179              		.cfi_endproc
 2180              	.LFE339:
 2182              		.text
 2183              	.Letext0:
 2184              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/machine/_default_ty
 2185              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/sys/_stdint.h"
 2186              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2187              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2188              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2189              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2190              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2191              		.file 10 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2192              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_pwr_ex.c
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:21     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:26     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:43     .text.HAL_PWREx_GetVoltageRange:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:48     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:53     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:149    .text.HAL_PWREx_ControlVoltageScaling:0000000000000088 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:155    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:160    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:183    .text.HAL_PWREx_EnableBatteryCharging:0000000000000018 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:188    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:193    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:209    .text.HAL_PWREx_DisableBatteryCharging:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:214    .text.HAL_PWREx_EnableVddUSB:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:219    .text.HAL_PWREx_EnableVddUSB:0000000000000000 HAL_PWREx_EnableVddUSB
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:235    .text.HAL_PWREx_EnableVddUSB:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:240    .text.HAL_PWREx_DisableVddUSB:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:245    .text.HAL_PWREx_DisableVddUSB:0000000000000000 HAL_PWREx_DisableVddUSB
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:261    .text.HAL_PWREx_DisableVddUSB:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:266    .text.HAL_PWREx_EnableVddIO2:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:271    .text.HAL_PWREx_EnableVddIO2:0000000000000000 HAL_PWREx_EnableVddIO2
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:287    .text.HAL_PWREx_EnableVddIO2:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:292    .text.HAL_PWREx_DisableVddIO2:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:297    .text.HAL_PWREx_DisableVddIO2:0000000000000000 HAL_PWREx_DisableVddIO2
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:313    .text.HAL_PWREx_DisableVddIO2:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:318    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:323    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:339    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:344    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:349    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:365    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:370    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:375    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:388    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000008 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:396    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000010 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:546    .text.HAL_PWREx_EnableGPIOPullUp:00000000000000c4 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:551    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:556    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:569    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000008 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:577    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000010 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:693    .text.HAL_PWREx_DisableGPIOPullUp:000000000000008c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:698    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:703    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:716    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000008 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:724    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000010 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:874    .text.HAL_PWREx_EnableGPIOPullDown:00000000000000c4 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:879    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:884    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:897    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000008 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:905    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000010 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1022   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000090 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1027   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1032   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1048   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1053   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1058   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 73


/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1074   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1079   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1084   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1100   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1105   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1110   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1126   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1131   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1136   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1152   .text.HAL_PWREx_EnablePVM1:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1157   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1162   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1178   .text.HAL_PWREx_DisablePVM1:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1183   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1188   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1204   .text.HAL_PWREx_EnablePVM2:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1209   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1214   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1230   .text.HAL_PWREx_DisablePVM2:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1235   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1240   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1256   .text.HAL_PWREx_EnablePVM3:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1261   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1266   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1282   .text.HAL_PWREx_DisablePVM3:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1287   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1292   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1308   .text.HAL_PWREx_EnablePVM4:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1313   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1318   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1334   .text.HAL_PWREx_DisablePVM4:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1339   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1344   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1644   .text.HAL_PWREx_ConfigPVM:00000000000001e8 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1649   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1654   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1670   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000000c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1675   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1680   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1736   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000048 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1742   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1747   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1816   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000030 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1822   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1827   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1896   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000034 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1902   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1907   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 HAL_PWREx_EnterSTOP2Mode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1976   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000034 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1982   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:1987   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2016   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000001c $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2024   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2029   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2041   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2046   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2058   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s 			page 74


/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2063   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2075   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2080   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2092   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2097   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccYa1YWG.s:2178   .text.HAL_PWREx_PVD_PVM_IRQHandler:000000000000006c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
