ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_ADC_ConvCpltCallback
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_ConvCpltCallback:
  27              	.LFB308:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32l4xx_hal.h"
  42:Src/main.c    **** #include "adc.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** #include "ADCsrc.h"
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END Includes */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** #define SAMPLE_SIZE 1000
  70:Src/main.c    **** volatile uint32_t adc[SAMPLE_SIZE];
  71:Src/main.c    **** volatile uint32_t buffer[SAMPLE_SIZE];
  72:Src/main.c    **** float vsense = 3.3/4095;
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   *
  78:Src/main.c    ****   * @retval None
  79:Src/main.c    ****   */
  80:Src/main.c    **** int main(void)
  81:Src/main.c    **** {
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
  83:Src/main.c    ****   char Message[40] = "thing\n\r";
  84:Src/main.c    ****   float frequency = 0;
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 3


  88:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Src/main.c    ****   HAL_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Configure the system clock */
  98:Src/main.c    ****   SystemClock_Config();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
 106:Src/main.c    ****   MX_DMA_Init();
 107:Src/main.c    ****   //ADC_Calibration();
 108:Src/main.c    ****   MX_ADC1_Init();
 109:Src/main.c    ****   MX_TIM4_Init();
 110:Src/main.c    ****   MX_USART2_UART_Init();
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END 2 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Infinite loop */
 116:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 117:Src/main.c    **** 
 118:Src/main.c    ****   HAL_TIM_Base_Start(&htim4);
 119:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *) buffer, SAMPLE_SIZE);
 120:Src/main.c    **** 
 121:Src/main.c    ****   /*transmit sring over usart2 */
 122:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t *) &Message, 15, 0xFFF);
 123:Src/main.c    ****   while (1)
 124:Src/main.c    ****   {
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END WHILE */
 127:Src/main.c    **** 
 128:Src/main.c    ****   findFrequency(adc, SAMPLE_SIZE, &frequency);
 129:Src/main.c    **** 
 130:Src/main.c    ****   //gcvt(frequency, 4, Message);
 131:Src/main.c    ****   sprintf(Message, "The Note is %f, adc is %f\n\r", frequency, ((float) adc[10])*vsense);
 132:Src/main.c    ****   /*transmit sring over usart2 */
 133:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t *) &Message, 40, 0xFFF);
 134:Src/main.c    **** 
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE BEGIN 3 */
 137:Src/main.c    **** 
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /* USER CODE END 3 */
 140:Src/main.c    **** 
 141:Src/main.c    **** }
 142:Src/main.c    **** 
 143:Src/main.c    **** /**
 144:Src/main.c    ****   * @brief System Clock Configuration
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 4


 145:Src/main.c    ****   * @retval None
 146:Src/main.c    ****   */
 147:Src/main.c    **** void SystemClock_Config(void)
 148:Src/main.c    **** {
 149:Src/main.c    **** 
 150:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 151:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 152:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 155:Src/main.c    ****     */
 156:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 163:Src/main.c    ****   }
 164:Src/main.c    **** 
 165:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 166:Src/main.c    ****     */
 167:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 173:Src/main.c    **** 
 174:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 177:Src/main.c    ****   }
 178:Src/main.c    **** 
 179:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC;
 180:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 181:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 182:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSI;
 183:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 184:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 185:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 186:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 187:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 188:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 189:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 190:Src/main.c    ****   {
 191:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 192:Src/main.c    ****   }
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the main internal regulator output voltage
 195:Src/main.c    ****     */
 196:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 197:Src/main.c    ****   {
 198:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 199:Src/main.c    ****   }
 200:Src/main.c    **** 
 201:Src/main.c    ****     /**Configure the Systick interrupt time
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 5


 202:Src/main.c    ****     */
 203:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 204:Src/main.c    **** 
 205:Src/main.c    ****     /**Configure the Systick
 206:Src/main.c    ****     */
 207:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 210:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 211:Src/main.c    **** }
 212:Src/main.c    **** 
 213:Src/main.c    **** /* USER CODE BEGIN 4 */
 214:Src/main.c    **** 
 215:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 216:Src/main.c    **** { int i = 0;
  29              		.loc 1 216 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 217:Src/main.c    ****   for(i =0; i<SAMPLE_SIZE; i++){
  35              		.loc 1 217 0
  36 0000 0023     		movs	r3, #0
  37 0002 06E0     		b	.L2
  38              	.LVL1:
  39              	.L3:
 218:Src/main.c    ****       adc[i] = buffer[i];
  40              		.loc 1 218 0 discriminator 3
  41 0004 054A     		ldr	r2, .L4
  42 0006 52F82310 		ldr	r1, [r2, r3, lsl #2]
  43 000a 054A     		ldr	r2, .L4+4
  44 000c 42F82310 		str	r1, [r2, r3, lsl #2]
 217:Src/main.c    ****   for(i =0; i<SAMPLE_SIZE; i++){
  45              		.loc 1 217 0 discriminator 3
  46 0010 0133     		adds	r3, r3, #1
  47              	.LVL2:
  48              	.L2:
 217:Src/main.c    ****   for(i =0; i<SAMPLE_SIZE; i++){
  49              		.loc 1 217 0 is_stmt 0 discriminator 1
  50 0012 B3F57A7F 		cmp	r3, #1000
  51 0016 F5DB     		blt	.L3
 219:Src/main.c    ****   }
 220:Src/main.c    **** }
  52              		.loc 1 220 0 is_stmt 1
  53 0018 7047     		bx	lr
  54              	.L5:
  55 001a 00BF     		.align	2
  56              	.L4:
  57 001c 00000000 		.word	buffer
  58 0020 00000000 		.word	adc
  59              		.cfi_endproc
  60              	.LFE308:
  62              		.section	.text._Error_Handler,"ax",%progbits
  63              		.align	2
  64              		.global	_Error_Handler
  65              		.thumb
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 6


  66              		.thumb_func
  68              	_Error_Handler:
  69              	.LFB309:
 221:Src/main.c    **** 
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE END 4 */
 224:Src/main.c    **** 
 225:Src/main.c    **** /**
 226:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 227:Src/main.c    ****   * @param  file: The file name as string.
 228:Src/main.c    ****   * @param  line: The line in file as a number.
 229:Src/main.c    ****   * @retval None
 230:Src/main.c    ****   */
 231:Src/main.c    **** void _Error_Handler(char *file, int line)
 232:Src/main.c    **** {
  70              		.loc 1 232 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.LVL3:
  77              	.L7:
 233:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 234:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 235:Src/main.c    ****   while(1)
 236:Src/main.c    ****   {
 237:Src/main.c    ****   }
  78              		.loc 1 237 0 discriminator 1
  79 0000 FEE7     		b	.L7
  80              		.cfi_endproc
  81              	.LFE309:
  83 0002 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
  84              		.align	2
  85              		.global	SystemClock_Config
  86              		.thumb
  87              		.thumb_func
  89              	SystemClock_Config:
  90              	.LFB307:
 148:Src/main.c    **** 
  91              		.loc 1 148 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 224
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 00B5     		push	{lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 14, -4
  99 0002 B9B0     		sub	sp, sp, #228
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 232
 156:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 102              		.loc 1 156 0
 103 0004 0223     		movs	r3, #2
 104 0006 2793     		str	r3, [sp, #156]
 157:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 105              		.loc 1 157 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 7


 106 0008 4FF48073 		mov	r3, #256
 107 000c 2A93     		str	r3, [sp, #168]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 108              		.loc 1 158 0
 109 000e 1023     		movs	r3, #16
 110 0010 2B93     		str	r3, [sp, #172]
 159:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 111              		.loc 1 159 0
 112 0012 0023     		movs	r3, #0
 113 0014 3193     		str	r3, [sp, #196]
 160:Src/main.c    ****   {
 114              		.loc 1 160 0
 115 0016 27A8     		add	r0, sp, #156
 116 0018 FFF7FEFF 		bl	HAL_RCC_OscConfig
 117              	.LVL4:
 118 001c 18B1     		cbz	r0, .L9
 162:Src/main.c    ****   }
 119              		.loc 1 162 0
 120 001e 2748     		ldr	r0, .L14
 121 0020 A221     		movs	r1, #162
 122 0022 FFF7FEFF 		bl	_Error_Handler
 123              	.LVL5:
 124              	.L9:
 167:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125              		.loc 1 167 0
 126 0026 0F23     		movs	r3, #15
 127 0028 2293     		str	r3, [sp, #136]
 169:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 128              		.loc 1 169 0
 129 002a 0123     		movs	r3, #1
 130 002c 2393     		str	r3, [sp, #140]
 170:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 131              		.loc 1 170 0
 132 002e 0021     		movs	r1, #0
 133 0030 2491     		str	r1, [sp, #144]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 134              		.loc 1 171 0
 135 0032 2591     		str	r1, [sp, #148]
 172:Src/main.c    **** 
 136              		.loc 1 172 0
 137 0034 2691     		str	r1, [sp, #152]
 174:Src/main.c    ****   {
 138              		.loc 1 174 0
 139 0036 22A8     		add	r0, sp, #136
 140 0038 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 141              	.LVL6:
 142 003c 18B1     		cbz	r0, .L10
 176:Src/main.c    ****   }
 143              		.loc 1 176 0
 144 003e 1F48     		ldr	r0, .L14
 145 0040 B021     		movs	r1, #176
 146 0042 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL7:
 148              	.L10:
 179:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 149              		.loc 1 179 0
 150 0046 44F20203 		movw	r3, #16386
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 8


 151 004a 0093     		str	r3, [sp]
 180:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 152              		.loc 1 180 0
 153 004c 0023     		movs	r3, #0
 154 004e 0F93     		str	r3, [sp, #60]
 181:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSI;
 155              		.loc 1 181 0
 156 0050 4FF08053 		mov	r3, #268435456
 157 0054 1E93     		str	r3, [sp, #120]
 182:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 158              		.loc 1 182 0
 159 0056 0223     		movs	r3, #2
 160 0058 0193     		str	r3, [sp, #4]
 183:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 8;
 161              		.loc 1 183 0
 162 005a 0122     		movs	r2, #1
 163 005c 0292     		str	r2, [sp, #8]
 184:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 164              		.loc 1 184 0
 165 005e 0822     		movs	r2, #8
 166 0060 0392     		str	r2, [sp, #12]
 185:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 167              		.loc 1 185 0
 168 0062 0722     		movs	r2, #7
 169 0064 0492     		str	r2, [sp, #16]
 186:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 170              		.loc 1 186 0
 171 0066 0593     		str	r3, [sp, #20]
 187:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 172              		.loc 1 187 0
 173 0068 0693     		str	r3, [sp, #24]
 188:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 174              		.loc 1 188 0
 175 006a 4FF08073 		mov	r3, #16777216
 176 006e 0793     		str	r3, [sp, #28]
 189:Src/main.c    ****   {
 177              		.loc 1 189 0
 178 0070 6846     		mov	r0, sp
 179 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 180              	.LVL8:
 181 0076 18B1     		cbz	r0, .L11
 191:Src/main.c    ****   }
 182              		.loc 1 191 0
 183 0078 1048     		ldr	r0, .L14
 184 007a BF21     		movs	r1, #191
 185 007c FFF7FEFF 		bl	_Error_Handler
 186              	.LVL9:
 187              	.L11:
 196:Src/main.c    ****   {
 188              		.loc 1 196 0
 189 0080 4FF40070 		mov	r0, #512
 190 0084 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 191              	.LVL10:
 192 0088 18B1     		cbz	r0, .L12
 198:Src/main.c    ****   }
 193              		.loc 1 198 0
 194 008a 0C48     		ldr	r0, .L14
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 9


 195 008c C621     		movs	r1, #198
 196 008e FFF7FEFF 		bl	_Error_Handler
 197              	.LVL11:
 198              	.L12:
 203:Src/main.c    **** 
 199              		.loc 1 203 0
 200 0092 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 201              	.LVL12:
 202 0096 0A4B     		ldr	r3, .L14+4
 203 0098 A3FB0030 		umull	r3, r0, r3, r0
 204 009c 8009     		lsrs	r0, r0, #6
 205 009e FFF7FEFF 		bl	HAL_SYSTICK_Config
 206              	.LVL13:
 207:Src/main.c    **** 
 207              		.loc 1 207 0
 208 00a2 0420     		movs	r0, #4
 209 00a4 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 210              	.LVL14:
 210:Src/main.c    **** }
 211              		.loc 1 210 0
 212 00a8 4FF0FF30 		mov	r0, #-1
 213 00ac 0021     		movs	r1, #0
 214 00ae 0A46     		mov	r2, r1
 215 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 216              	.LVL15:
 211:Src/main.c    **** 
 217              		.loc 1 211 0
 218 00b4 39B0     		add	sp, sp, #228
 219              	.LCFI2:
 220              		.cfi_def_cfa_offset 4
 221              		@ sp needed
 222 00b6 5DF804FB 		ldr	pc, [sp], #4
 223              	.L15:
 224 00ba 00BF     		.align	2
 225              	.L14:
 226 00bc 00000000 		.word	.LC0
 227 00c0 D34D6210 		.word	274877907
 228              		.cfi_endproc
 229              	.LFE307:
 231              		.global	__aeabi_f2d
 232              		.section	.text.main,"ax",%progbits
 233              		.align	2
 234              		.global	main
 235              		.thumb
 236              		.thumb_func
 238              	main:
 239              	.LFB306:
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
 240              		.loc 1 81 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 48
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 30B5     		push	{r4, r5, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 12
 247              		.cfi_offset 4, -12
 248              		.cfi_offset 5, -8
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 10


 249              		.cfi_offset 14, -4
 250 0002 2DED028B 		fstmfdd	sp!, {d8}
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 20
 253              		.cfi_offset 80, -20
 254              		.cfi_offset 81, -16
 255 0006 8FB0     		sub	sp, sp, #60
 256              	.LCFI5:
 257              		.cfi_def_cfa_offset 80
  83:Src/main.c    ****   float frequency = 0;
 258              		.loc 1 83 0
 259 0008 2B4B     		ldr	r3, .L19
 260 000a 04AC     		add	r4, sp, #16
 261 000c 93E80300 		ldmia	r3, {r0, r1}
 262 0010 84E80300 		stmia	r4, {r0, r1}
 263 0014 0023     		movs	r3, #0
 264 0016 0693     		str	r3, [sp, #24]
 265 0018 0793     		str	r3, [sp, #28]
 266 001a 0893     		str	r3, [sp, #32]
 267 001c 0993     		str	r3, [sp, #36]
 268 001e 0A93     		str	r3, [sp, #40]
 269 0020 0B93     		str	r3, [sp, #44]
 270 0022 0C93     		str	r3, [sp, #48]
 271 0024 0D93     		str	r3, [sp, #52]
  84:Src/main.c    **** 
 272              		.loc 1 84 0
 273 0026 0023     		movs	r3, #0
 274 0028 0393     		str	r3, [sp, #12]	@ float
  91:Src/main.c    **** 
 275              		.loc 1 91 0
 276 002a FFF7FEFF 		bl	HAL_Init
 277              	.LVL16:
  98:Src/main.c    **** 
 278              		.loc 1 98 0
 279 002e FFF7FEFF 		bl	SystemClock_Config
 280              	.LVL17:
 105:Src/main.c    ****   MX_DMA_Init();
 281              		.loc 1 105 0
 282 0032 FFF7FEFF 		bl	MX_GPIO_Init
 283              	.LVL18:
 106:Src/main.c    ****   //ADC_Calibration();
 284              		.loc 1 106 0
 285 0036 FFF7FEFF 		bl	MX_DMA_Init
 286              	.LVL19:
 108:Src/main.c    ****   MX_TIM4_Init();
 287              		.loc 1 108 0
 288 003a FFF7FEFF 		bl	MX_ADC1_Init
 289              	.LVL20:
 109:Src/main.c    ****   MX_USART2_UART_Init();
 290              		.loc 1 109 0
 291 003e FFF7FEFF 		bl	MX_TIM4_Init
 292              	.LVL21:
 110:Src/main.c    ****   /* USER CODE BEGIN 2 */
 293              		.loc 1 110 0
 294 0042 FFF7FEFF 		bl	MX_USART2_UART_Init
 295              	.LVL22:
 118:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *) buffer, SAMPLE_SIZE);
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 11


 296              		.loc 1 118 0
 297 0046 1D48     		ldr	r0, .L19+4
 298 0048 FFF7FEFF 		bl	HAL_TIM_Base_Start
 299              	.LVL23:
 119:Src/main.c    **** 
 300              		.loc 1 119 0
 301 004c 1C48     		ldr	r0, .L19+8
 302 004e 1D49     		ldr	r1, .L19+12
 303 0050 4FF47A72 		mov	r2, #1000
 304 0054 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 305              	.LVL24:
 122:Src/main.c    ****   while (1)
 306              		.loc 1 122 0
 307 0058 1B48     		ldr	r0, .L19+16
 308 005a 2146     		mov	r1, r4
 309 005c 0F22     		movs	r2, #15
 310 005e 40F6FF73 		movw	r3, #4095
 311 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 312              	.LVL25:
 313              	.L17:
 128:Src/main.c    **** 
 314              		.loc 1 128 0 discriminator 1
 315 0066 194C     		ldr	r4, .L19+20
 316 0068 2046     		mov	r0, r4
 317 006a 4FF47A71 		mov	r1, #1000
 318 006e 03AA     		add	r2, sp, #12
 319 0070 FFF7FEFF 		bl	findFrequency
 320              	.LVL26:
 131:Src/main.c    ****   /*transmit sring over usart2 */
 321              		.loc 1 131 0 discriminator 1
 322 0074 94ED0A8A 		flds	s16, [r4, #40]	@ int
 323 0078 B8EE488A 		fuitos	s16, s16
 324 007c 144B     		ldr	r3, .L19+24
 325 007e D3ED007A 		flds	s15, [r3]
 326 0082 28EE278A 		fmuls	s16, s16, s15
 327 0086 0398     		ldr	r0, [sp, #12]	@ float
 328 0088 FFF7FEFF 		bl	__aeabi_f2d
 329              	.LVL27:
 330 008c 0446     		mov	r4, r0
 331 008e 0D46     		mov	r5, r1
 332 0090 18EE100A 		fmrs	r0, s16
 333 0094 FFF7FEFF 		bl	__aeabi_f2d
 334              	.LVL28:
 335 0098 CDE90001 		strd	r0, [sp]
 336 009c 04A8     		add	r0, sp, #16
 337 009e 0D49     		ldr	r1, .L19+28
 338 00a0 2246     		mov	r2, r4
 339 00a2 2B46     		mov	r3, r5
 340 00a4 FFF7FEFF 		bl	sprintf
 341              	.LVL29:
 133:Src/main.c    **** 
 342              		.loc 1 133 0 discriminator 1
 343 00a8 0748     		ldr	r0, .L19+16
 344 00aa 04A9     		add	r1, sp, #16
 345 00ac 2822     		movs	r2, #40
 346 00ae 40F6FF73 		movw	r3, #4095
 347 00b2 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 12


 348              	.LVL30:
 138:Src/main.c    ****   /* USER CODE END 3 */
 349              		.loc 1 138 0 discriminator 1
 350 00b6 D6E7     		b	.L17
 351              	.L20:
 352              		.align	2
 353              	.L19:
 354 00b8 00000000 		.word	.LANCHOR0
 355 00bc 00000000 		.word	htim4
 356 00c0 00000000 		.word	hadc1
 357 00c4 00000000 		.word	buffer
 358 00c8 00000000 		.word	huart2
 359 00cc 00000000 		.word	adc
 360 00d0 00000000 		.word	.LANCHOR1
 361 00d4 0C000000 		.word	.LC2
 362              		.cfi_endproc
 363              	.LFE306:
 365              		.global	vsense
 366              		.comm	buffer,4000,4
 367              		.comm	adc,4000,4
 368              		.section	.rodata
 369              		.align	2
 370              		.set	.LANCHOR0,. + 0
 371              	.LC1:
 372 0000 7468696E 		.ascii	"thing\012\015\000"
 372      670A0D00 
 373 0008 00000000 		.space	32
 373      00000000 
 373      00000000 
 373      00000000 
 373      00000000 
 374              		.section	.rodata.str1.4,"aMS",%progbits,1
 375              		.align	2
 376              	.LC0:
 377 0000 5372632F 		.ascii	"Src/main.c\000"
 377      6D61696E 
 377      2E6300
 378 000b 00       		.space	1
 379              	.LC2:
 380 000c 54686520 		.ascii	"The Note is %f, adc is %f\012\015\000"
 380      4E6F7465 
 380      20697320 
 380      25662C20 
 380      61646320 
 381              		.section	.data.vsense,"aw",%progbits
 382              		.align	2
 383              		.set	.LANCHOR1,. + 0
 386              	vsense:
 387 0000 6740533A 		.word	978534503
 388              		.text
 389              	.Letext0:
 390              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 391              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/machine/_default_ty
 392              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/sys/_stdint.h"
 393              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 394              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 395              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 13


 396              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 397              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 398              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 399              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 400              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 401              		.file 13 "Inc/adc.h"
 402              		.file 14 "Inc/tim.h"
 403              		.file 15 "Inc/usart.h"
 404              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 405              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 406              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 407              		.file 19 "Inc/gpio.h"
 408              		.file 20 "Inc/dma.h"
 409              		.file 21 "Inc/ADCsrc.h"
 410              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:21     .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:26     .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:57     .text.HAL_ADC_ConvCpltCallback:000000000000001c $d
                            *COM*:0000000000000fa0 buffer
                            *COM*:0000000000000fa0 adc
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:63     .text._Error_Handler:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:68     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:84     .text.SystemClock_Config:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:89     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:226    .text.SystemClock_Config:00000000000000bc $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:233    .text.main:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:238    .text.main:0000000000000000 main
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:354    .text.main:00000000000000b8 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:386    .data.vsense:0000000000000000 vsense
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:369    .rodata:0000000000000000 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:375    .rodata.str1.4:0000000000000000 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccUxoHfC.s:382    .data.vsense:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_TIM4_Init
MX_USART2_UART_Init
HAL_TIM_Base_Start
HAL_ADC_Start_DMA
HAL_UART_Transmit
findFrequency
sprintf
htim4
hadc1
huart2
