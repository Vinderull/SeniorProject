{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/RoastBeefy/SeniorProject","program":"/Users/RoastBeefy/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":[],"output":"/Users/RoastBeefy/SeniorProject/target/rls/thumbv7em-none-eabihf/debug/examples/libtest_on_host-4f28517129287900.rmeta"},"prelude":{"crate_id":{"name":"test_on_host","disambiguator":[8652240013409119287,8203360924380275437]},"crate_root":"examples","external_crates":[{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":1,"id":{"name":"core","disambiguator":[5082386882606721240,9303216381393791045]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12722775234974152548,7371717284497545203]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11878061073034913680,5568387164294466861]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":4,"id":{"name":"panic_halt","disambiguator":[7913436335180642699,8344295403141822194]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":5,"id":{"name":"cortex_m","disambiguator":[16280655422234509209,578568680647545109]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":6,"id":{"name":"aligned","disambiguator":[1558618071481916185,7544461876808505053]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":7,"id":{"name":"as_slice","disambiguator":[4505380231458364186,16909127560070826623]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":8,"id":{"name":"generic_array","disambiguator":[7777621269286965150,11857060757881868586]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":9,"id":{"name":"typenum","disambiguator":[2559459861432733509,12502439433151949090]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":10,"id":{"name":"generic_array","disambiguator":[2832030419379376214,2408285136038371981]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":11,"id":{"name":"generic_array","disambiguator":[17174071369078314203,3178218352104891882]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":12,"id":{"name":"stable_deref_trait","disambiguator":[9620948087243048024,8452141348337782462]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":13,"id":{"name":"bare_metal","disambiguator":[17853414626951280014,8561127429194108387]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":14,"id":{"name":"volatile_register","disambiguator":[12641011538747202307,1951278839734583158]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":15,"id":{"name":"vcell","disambiguator":[873743106370302837,2014232152418514063]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":16,"id":{"name":"cortex_m_rt","disambiguator":[14340278681419632441,2505697694381420878]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":17,"id":{"name":"cortex_m_rt_macros","disambiguator":[9330096531980555919,1934244872172094625]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/test_on_host.rs","num":18,"id":{"name":"r0","disambiguator":[3655893327728121229,12538509986653303175]}}],"span":{"file_name":"examples/test_on_host.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":57,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"examples/test_on_host.rs","byte_start":967,"byte_end":977,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":13},"span":{"file_name":"examples/test_on_host.rs","byte_start":1270,"byte_end":1273,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"alias_span":null,"name":"asm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":24},"span":{"file_name":"examples/test_on_host.rs","byte_start":1292,"byte_end":1297,"line_start":32,"line_end":32,"column_start":18,"column_end":23},"alias_span":null,"name":"entry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"examples/test_on_host.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":57,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"examples/test_on_host.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":7}],"decl_id":null,"docs":" Conditionally compiling tests with std and our executable with no_std.","sig":null,"attributes":[{"value":"/ Conditionally compiling tests with std and our executable with no_std.","span":{"file_name":"examples/test_on_host.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"examples/test_on_host.rs","byte_start":75,"byte_end":78,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Rust's built in unit testing framework requires the standard library,","span":{"file_name":"examples/test_on_host.rs","byte_start":79,"byte_end":152,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ but we need to build our final executable with no_std.","span":{"file_name":"examples/test_on_host.rs","byte_start":153,"byte_end":211,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ The testing framework also generates a `main` method, so we need to only use the `#[entry]`","span":{"file_name":"examples/test_on_host.rs","byte_start":212,"byte_end":307,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ annotation when building our final image.","span":{"file_name":"examples/test_on_host.rs","byte_start":308,"byte_end":353,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/ For more information on why this example works, see this excellent blog post.","span":{"file_name":"examples/test_on_host.rs","byte_start":354,"byte_end":435,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/ https://os.phil-opp.com/unit-testing/","span":{"file_name":"examples/test_on_host.rs","byte_start":436,"byte_end":477,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"examples/test_on_host.rs","byte_start":478,"byte_end":481,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Running this example:","span":{"file_name":"examples/test_on_host.rs","byte_start":482,"byte_end":507,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"examples/test_on_host.rs","byte_start":508,"byte_end":511,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Ensure there are no targets specified under `[build]` in `.cargo/config`","span":{"file_name":"examples/test_on_host.rs","byte_start":512,"byte_end":588,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ In order to make this work, we lose the convenience of having a default target that isn't the","span":{"file_name":"examples/test_on_host.rs","byte_start":589,"byte_end":686,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ host.","span":{"file_name":"examples/test_on_host.rs","byte_start":687,"byte_end":696,"line_start":14,"line_end":14,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"examples/test_on_host.rs","byte_start":697,"byte_end":700,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ cargo build --example test_on_host --target thumbv7m-none-eabi","span":{"file_name":"examples/test_on_host.rs","byte_start":701,"byte_end":767,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ cargo test --example test_on_host","span":{"file_name":"examples/test_on_host.rs","byte_start":768,"byte_end":805,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"no_std","span":{"file_name":"examples/test_on_host.rs","byte_start":873,"byte_end":879,"line_start":21,"line_end":21,"column_start":24,"column_end":30}},{"value":"no_main","span":{"file_name":"examples/test_on_host.rs","byte_start":905,"byte_end":912,"line_start":22,"line_end":22,"column_start":24,"column_end":31}}]},{"kind":"Local","id":{"krate":0,"index":2147483655},"span":{"file_name":"examples/test_on_host.rs","byte_start":1499,"byte_end":1500,"line_start":44,"line_end":44,"column_start":8,"column_end":9},"name":"a","qualname":"::add::a","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741831},"span":{"file_name":"examples/test_on_host.rs","byte_start":1507,"byte_end":1508,"line_start":44,"line_end":44,"column_start":16,"column_end":17},"name":"b","qualname":"::add::b","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"examples/test_on_host.rs","byte_start":1495,"byte_end":1498,"line_start":44,"line_end":44,"column_start":4,"column_end":7},"name":"add","qualname":"::add","value":"fn add(i32, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"examples/test_on_host.rs","byte_start":1260,"byte_end":1268,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"ref_id":{"krate":5,"index":0}},{"kind":"Mod","span":{"file_name":"examples/test_on_host.rs","byte_start":1279,"byte_end":1290,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"ref_id":{"krate":16,"index":0}},{"kind":"Function","span":{"file_name":"examples/test_on_host.rs","byte_start":1353,"byte_end":1356,"line_start":37,"line_end":37,"column_start":10,"column_end":13},"ref_id":{"krate":5,"index":20}},{"kind":"Mod","span":{"file_name":"examples/test_on_host.rs","byte_start":1348,"byte_end":1351,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"ref_id":{"krate":5,"index":13}},{"kind":"Variable","span":{"file_name":"examples/test_on_host.rs","byte_start":1528,"byte_end":1529,"line_start":45,"line_end":45,"column_start":5,"column_end":6},"ref_id":{"krate":0,"index":2147483655}},{"kind":"Variable","span":{"file_name":"examples/test_on_host.rs","byte_start":1532,"byte_end":1533,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":1073741831}}],"macro_refs":[],"relations":[]}