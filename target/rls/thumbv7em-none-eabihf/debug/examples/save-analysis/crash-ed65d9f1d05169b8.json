{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/RoastBeefy/SeniorProject","program":"/Users/RoastBeefy/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":[],"output":"/Users/RoastBeefy/SeniorProject/target/rls/thumbv7em-none-eabihf/debug/examples/libcrash-ed65d9f1d05169b8.rmeta"},"prelude":{"crate_id":{"name":"crash","disambiguator":[84130123358626778,15278212741771872917]},"crate_root":"examples","external_crates":[{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":1,"id":{"name":"core","disambiguator":[5082386882606721240,9303216381393791045]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12722775234974152548,7371717284497545203]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11878061073034913680,5568387164294466861]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":4,"id":{"name":"panic_halt","disambiguator":[7913436335180642699,8344295403141822194]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":5,"id":{"name":"cortex_m_rt","disambiguator":[14340278681419632441,2505697694381420878]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":6,"id":{"name":"cortex_m_rt_macros","disambiguator":[9330096531980555919,1934244872172094625]}},{"file_name":"/Users/RoastBeefy/SeniorProject/examples/crash.rs","num":7,"id":{"name":"r0","disambiguator":[3655893327728121229,12538509986653303175]}}],"span":{"file_name":"examples/crash.rs","byte_start":0,"byte_end":3438,"line_start":1,"line_end":96,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"examples/crash.rs","byte_start":3177,"byte_end":3187,"line_start":82,"line_end":82,"column_start":5,"column_end":15},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1345},"span":{"file_name":"examples/crash.rs","byte_start":3205,"byte_end":3208,"line_start":84,"line_end":84,"column_start":11,"column_end":14},"alias_span":null,"name":"ptr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":24},"span":{"file_name":"examples/crash.rs","byte_start":3228,"byte_end":3233,"line_start":86,"line_end":86,"column_start":18,"column_end":23},"alias_span":null,"name":"entry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"examples/crash.rs","byte_start":0,"byte_end":3438,"line_start":1,"line_end":96,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"examples/crash.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" Debugging a crash (exception)","sig":null,"attributes":[{"value":"/ Debugging a crash (exception)","span":{"file_name":"examples/crash.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Most crash conditions trigger a hard fault exception, whose handler is defined via","span":{"file_name":"examples/crash.rs","byte_start":38,"byte_end":124,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ `exception!(HardFault, ..)`. The `HardFault` handler has access to the exception frame, a","span":{"file_name":"examples/crash.rs","byte_start":125,"byte_end":218,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ snapshot of the CPU registers at the moment of the exception.","span":{"file_name":"examples/crash.rs","byte_start":219,"byte_end":284,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":285,"byte_end":288,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This program crashes and the `HardFault` handler prints to the console the contents of the","span":{"file_name":"examples/crash.rs","byte_start":289,"byte_end":383,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ `ExceptionFrame` and then triggers a breakpoint. From that breakpoint one can see the backtrace","span":{"file_name":"examples/crash.rs","byte_start":384,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ that led to the exception.","span":{"file_name":"examples/crash.rs","byte_start":484,"byte_end":514,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":515,"byte_end":518,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"examples/crash.rs","byte_start":519,"byte_end":531,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/ (gdb) continue","span":{"file_name":"examples/crash.rs","byte_start":532,"byte_end":550,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ Program received signal SIGTRAP, Trace/breakpoint trap.","span":{"file_name":"examples/crash.rs","byte_start":551,"byte_end":610,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ __bkpt () at asm/bkpt.s:3","span":{"file_name":"examples/crash.rs","byte_start":611,"byte_end":640,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ 3         bkpt","span":{"file_name":"examples/crash.rs","byte_start":641,"byte_end":659,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":660,"byte_end":663,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ (gdb) backtrace","span":{"file_name":"examples/crash.rs","byte_start":664,"byte_end":683,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/ #0  __bkpt () at asm/bkpt.s:3","span":{"file_name":"examples/crash.rs","byte_start":684,"byte_end":717,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ #1  0x080030b4 in cortex_m::asm::bkpt () at $$/cortex-m-0.5.0/src/asm.rs:19","span":{"file_name":"examples/crash.rs","byte_start":718,"byte_end":797,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ #2  rust_begin_unwind (args=..., file=..., line=99, col=5) at $$/panic-semihosting-0.2.0/src/lib.rs:87","span":{"file_name":"examples/crash.rs","byte_start":798,"byte_end":904,"line_start":20,"line_end":20,"column_start":1,"column_end":107}},{"value":"/ #3  0x08001d06 in core::panicking::panic_fmt () at libcore/panicking.rs:71","span":{"file_name":"examples/crash.rs","byte_start":905,"byte_end":983,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ #4  0x080004a6 in crash::hard_fault (ef=0x20004fa0) at examples/crash.rs:99","span":{"file_name":"examples/crash.rs","byte_start":984,"byte_end":1063,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ #5  0x08000548 in UserHardFault (ef=0x20004fa0) at <exception macros>:10","span":{"file_name":"examples/crash.rs","byte_start":1064,"byte_end":1140,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ #6  0x0800093a in HardFault () at asm.s:5","span":{"file_name":"examples/crash.rs","byte_start":1141,"byte_end":1186,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ Backtrace stopped: previous frame identical to this frame (corrupt stack?)","span":{"file_name":"examples/crash.rs","byte_start":1187,"byte_end":1265,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"examples/crash.rs","byte_start":1266,"byte_end":1273,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":1274,"byte_end":1277,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the console output one will find the state of the Program Counter (PC) register at the time","span":{"file_name":"examples/crash.rs","byte_start":1278,"byte_end":1376,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ of the exception.","span":{"file_name":"examples/crash.rs","byte_start":1377,"byte_end":1398,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":1399,"byte_end":1402,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"examples/crash.rs","byte_start":1403,"byte_end":1415,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ panicked at 'HardFault at ExceptionFrame {","span":{"file_name":"examples/crash.rs","byte_start":1416,"byte_end":1462,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/     r0: 0x2fffffff,","span":{"file_name":"examples/crash.rs","byte_start":1463,"byte_end":1486,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/     r1: 0x2fffffff,","span":{"file_name":"examples/crash.rs","byte_start":1487,"byte_end":1510,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/     r2: 0x080051d4,","span":{"file_name":"examples/crash.rs","byte_start":1511,"byte_end":1534,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/     r3: 0x080051d4,","span":{"file_name":"examples/crash.rs","byte_start":1535,"byte_end":1558,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/     r12: 0x20000000,","span":{"file_name":"examples/crash.rs","byte_start":1559,"byte_end":1583,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/     lr: 0x08000435,","span":{"file_name":"examples/crash.rs","byte_start":1584,"byte_end":1607,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     pc: 0x08000ab6,","span":{"file_name":"examples/crash.rs","byte_start":1608,"byte_end":1631,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/     xpsr: 0x61000000","span":{"file_name":"examples/crash.rs","byte_start":1632,"byte_end":1656,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ }', examples/crash.rs:106:5","span":{"file_name":"examples/crash.rs","byte_start":1657,"byte_end":1688,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"examples/crash.rs","byte_start":1689,"byte_end":1696,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":1697,"byte_end":1700,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This register contains the address of the instruction that caused the exception. In GDB one can","span":{"file_name":"examples/crash.rs","byte_start":1701,"byte_end":1800,"line_start":44,"line_end":44,"column_start":1,"column_end":100}},{"value":"/ disassemble the program around this address to observe the instruction that caused the","span":{"file_name":"examples/crash.rs","byte_start":1801,"byte_end":1891,"line_start":45,"line_end":45,"column_start":1,"column_end":91}},{"value":"/ exception.","span":{"file_name":"examples/crash.rs","byte_start":1892,"byte_end":1906,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":1907,"byte_end":1910,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"examples/crash.rs","byte_start":1911,"byte_end":1923,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/ (gdb) disassemble/m 0x08000ab6","span":{"file_name":"examples/crash.rs","byte_start":1924,"byte_end":1958,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/ Dump of assembler code for function core::ptr::read_volatile:","span":{"file_name":"examples/crash.rs","byte_start":1959,"byte_end":2024,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/ 451     pub unsafe fn read_volatile<T>(src: *const T) -> T {","span":{"file_name":"examples/crash.rs","byte_start":2025,"byte_end":2089,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/    0x08000aae <+0>:     sub     sp, #16","span":{"file_name":"examples/crash.rs","byte_start":2090,"byte_end":2133,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/    0x08000ab0 <+2>:     mov     r1, r0","span":{"file_name":"examples/crash.rs","byte_start":2134,"byte_end":2176,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/    0x08000ab2 <+4>:     str     r0, [sp, #8]","span":{"file_name":"examples/crash.rs","byte_start":2177,"byte_end":2225,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":2226,"byte_end":2229,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ 452         intrinsics::volatile_load(src)","span":{"file_name":"examples/crash.rs","byte_start":2230,"byte_end":2276,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/    0x08000ab4 <+6>:     ldr     r0, [sp, #8]","span":{"file_name":"examples/crash.rs","byte_start":2277,"byte_end":2325,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ -> 0x08000ab6 <+8>:     ldr     r0, [r0, #0]","span":{"file_name":"examples/crash.rs","byte_start":2326,"byte_end":2374,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/    0x08000ab8 <+10>:    str     r0, [sp, #12]","span":{"file_name":"examples/crash.rs","byte_start":2375,"byte_end":2424,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/    0x08000aba <+12>:    ldr     r0, [sp, #12]","span":{"file_name":"examples/crash.rs","byte_start":2425,"byte_end":2474,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/    0x08000abc <+14>:    str     r1, [sp, #4]","span":{"file_name":"examples/crash.rs","byte_start":2475,"byte_end":2523,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"/    0x08000abe <+16>:    str     r0, [sp, #0]","span":{"file_name":"examples/crash.rs","byte_start":2524,"byte_end":2572,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/    0x08000ac0 <+18>:    b.n     0x8000ac2 <core::ptr::read_volatile+20>","span":{"file_name":"examples/crash.rs","byte_start":2573,"byte_end":2648,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":2649,"byte_end":2652,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ 453     }","span":{"file_name":"examples/crash.rs","byte_start":2653,"byte_end":2666,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/    0x08000ac2 <+20>:    ldr     r0, [sp, #0]","span":{"file_name":"examples/crash.rs","byte_start":2667,"byte_end":2715,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/    0x08000ac4 <+22>:    add     sp, #16","span":{"file_name":"examples/crash.rs","byte_start":2716,"byte_end":2759,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/    0x08000ac6 <+24>:    bx      lr","span":{"file_name":"examples/crash.rs","byte_start":2760,"byte_end":2798,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":2799,"byte_end":2802,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ End of assembler dump.","span":{"file_name":"examples/crash.rs","byte_start":2803,"byte_end":2829,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"examples/crash.rs","byte_start":2830,"byte_end":2837,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":2838,"byte_end":2841,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `ldr r0, [r0, #0]` caused the exception. This instruction tried to load (read) a 32-bit word","span":{"file_name":"examples/crash.rs","byte_start":2842,"byte_end":2938,"line_start":73,"line_end":73,"column_start":1,"column_end":97}},{"value":"/ from the address stored in the register `r0`. Looking again at the contents of `ExceptionFrame`","span":{"file_name":"examples/crash.rs","byte_start":2939,"byte_end":3038,"line_start":74,"line_end":74,"column_start":1,"column_end":100}},{"value":"/ we see that the `r0` contained the address `0x2FFF_FFFF` when this instruction was executed.","span":{"file_name":"examples/crash.rs","byte_start":3039,"byte_end":3135,"line_start":75,"line_end":75,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"examples/crash.rs","byte_start":3136,"byte_end":3139,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"examples/crash.rs","byte_start":3140,"byte_end":3147,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"no_main","span":{"file_name":"examples/crash.rs","byte_start":3149,"byte_end":3160,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"no_std","span":{"file_name":"examples/crash.rs","byte_start":3161,"byte_end":3171,"line_start":80,"line_end":80,"column_start":1,"column_end":11}}]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"examples/crash.rs","byte_start":3199,"byte_end":3203,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"examples/crash.rs","byte_start":3215,"byte_end":3226,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"ref_id":{"krate":5,"index":0}},{"kind":"Function","span":{"file_name":"examples/crash.rs","byte_start":3376,"byte_end":3389,"line_start":92,"line_end":92,"column_start":14,"column_end":27},"ref_id":{"krate":1,"index":1682}},{"kind":"Mod","span":{"file_name":"examples/crash.rs","byte_start":3371,"byte_end":3374,"line_start":92,"line_end":92,"column_start":9,"column_end":12},"ref_id":{"krate":1,"index":1345}}],"macro_refs":[],"relations":[]}