
   arm_max_f32(output1, nsamp*2, &maxVal, &maxIndex);


/* normalize */
   for(i=0; i<nsamp*2; i++){
     output1[i] /= maxVal;
   }


  /*find std deviation and mean of normalized signal */
   arm_mean_f32(output1, nsamp*2, &avg);
   arm_std_f32(output1, nsamp*2, &dev);


  /* eliminate non dominant peaks */
   for(i=0; i<nsamp*2; i++){
    //if ((output1[i] < avg + dev)) output1[i] = 0;
   }


   /* set origin of autocorre to be max peak */
   for(i=0; i<nsamp; i++){
     output2[i] = output1[maxIndex+i];
}


/* peak detection */
   for(i = 1; i<nsamp-1; i++ ){

      if(((output2[i] - output2[i-1])>0) && ((output2[i+1]-output2[i])<0)){
        n = i;
      }

      else if((output2[i] - output2[i-1])>0) continue;

      else if((output2[i+1] - output2[i]) < 0) continue;
   }

   note = 10000.0/((float) n);
