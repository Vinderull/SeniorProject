ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"system_stm32l4xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	2
  22              		.global	SystemInit
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB306:
  28              		.file 1 "Src/system_stm32l4xx.c"
   1:Src/system_stm32l4xx.c **** /**
   2:Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32l4xx.c ****   *
   7:Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l4xx.c ****   *   user application:
   9:Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Src/system_stm32l4xx.c ****   *
  13:Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l4xx.c ****   *
  17:Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Src/system_stm32l4xx.c ****   *
  21:Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32l4xx.c ****   *
  25:Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32l4xx.c ****   *=============================================================================
  27:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 2


  31:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Src/system_stm32l4xx.c ****   *=============================================================================
  66:Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Src/system_stm32l4xx.c ****   * @attention
  68:Src/system_stm32l4xx.c ****   *
  69:Src/system_stm32l4xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  70:Src/system_stm32l4xx.c ****   *
  71:Src/system_stm32l4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  72:Src/system_stm32l4xx.c ****   * are permitted provided that the following conditions are met:
  73:Src/system_stm32l4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  74:Src/system_stm32l4xx.c ****   *      this list of conditions and the following disclaimer.
  75:Src/system_stm32l4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  76:Src/system_stm32l4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  77:Src/system_stm32l4xx.c ****   *      and/or other materials provided with the distribution.
  78:Src/system_stm32l4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  79:Src/system_stm32l4xx.c ****   *      may be used to endorse or promote products derived from this software
  80:Src/system_stm32l4xx.c ****   *      without specific prior written permission.
  81:Src/system_stm32l4xx.c ****   *
  82:Src/system_stm32l4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  83:Src/system_stm32l4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  84:Src/system_stm32l4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  85:Src/system_stm32l4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  86:Src/system_stm32l4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  87:Src/system_stm32l4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 3


  88:Src/system_stm32l4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  89:Src/system_stm32l4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  90:Src/system_stm32l4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  91:Src/system_stm32l4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  92:Src/system_stm32l4xx.c ****   *
  93:Src/system_stm32l4xx.c ****   ******************************************************************************
  94:Src/system_stm32l4xx.c ****   */
  95:Src/system_stm32l4xx.c **** 
  96:Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  97:Src/system_stm32l4xx.c ****   * @{
  98:Src/system_stm32l4xx.c ****   */
  99:Src/system_stm32l4xx.c **** 
 100:Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
 101:Src/system_stm32l4xx.c ****   * @{
 102:Src/system_stm32l4xx.c ****   */
 103:Src/system_stm32l4xx.c **** 
 104:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
 105:Src/system_stm32l4xx.c ****   * @{
 106:Src/system_stm32l4xx.c ****   */
 107:Src/system_stm32l4xx.c **** 
 108:Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
 109:Src/system_stm32l4xx.c **** 
 110:Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 111:Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 112:Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 113:Src/system_stm32l4xx.c **** 
 114:Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 115:Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 116:Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 117:Src/system_stm32l4xx.c **** 
 118:Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 119:Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 120:Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 121:Src/system_stm32l4xx.c **** 
 122:Src/system_stm32l4xx.c **** /**
 123:Src/system_stm32l4xx.c ****   * @}
 124:Src/system_stm32l4xx.c ****   */
 125:Src/system_stm32l4xx.c **** 
 126:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
 127:Src/system_stm32l4xx.c ****   * @{
 128:Src/system_stm32l4xx.c ****   */
 129:Src/system_stm32l4xx.c **** 
 130:Src/system_stm32l4xx.c **** /**
 131:Src/system_stm32l4xx.c ****   * @}
 132:Src/system_stm32l4xx.c ****   */
 133:Src/system_stm32l4xx.c **** 
 134:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 135:Src/system_stm32l4xx.c ****   * @{
 136:Src/system_stm32l4xx.c ****   */
 137:Src/system_stm32l4xx.c **** 
 138:Src/system_stm32l4xx.c **** /************************* Miscellaneous Configuration ************************/
 139:Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:Src/system_stm32l4xx.c ****      Internal SRAM. */
 141:Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 142:Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field.
 143:Src/system_stm32l4xx.c ****                                    This value must be a multiple of 0x200. */
 144:Src/system_stm32l4xx.c **** /******************************************************************************/
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 4


 145:Src/system_stm32l4xx.c **** /**
 146:Src/system_stm32l4xx.c ****   * @}
 147:Src/system_stm32l4xx.c ****   */
 148:Src/system_stm32l4xx.c **** 
 149:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 150:Src/system_stm32l4xx.c ****   * @{
 151:Src/system_stm32l4xx.c ****   */
 152:Src/system_stm32l4xx.c **** 
 153:Src/system_stm32l4xx.c **** /**
 154:Src/system_stm32l4xx.c ****   * @}
 155:Src/system_stm32l4xx.c ****   */
 156:Src/system_stm32l4xx.c **** 
 157:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 158:Src/system_stm32l4xx.c ****   * @{
 159:Src/system_stm32l4xx.c ****   */
 160:Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 161:Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 162:Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 163:Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 164:Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 165:Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 166:Src/system_stm32l4xx.c ****                variable is updated automatically.
 167:Src/system_stm32l4xx.c ****   */
 168:Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 169:Src/system_stm32l4xx.c **** 
 170:Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 171:Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 172:Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 173:Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 174:Src/system_stm32l4xx.c **** /**
 175:Src/system_stm32l4xx.c ****   * @}
 176:Src/system_stm32l4xx.c ****   */
 177:Src/system_stm32l4xx.c **** 
 178:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 179:Src/system_stm32l4xx.c ****   * @{
 180:Src/system_stm32l4xx.c ****   */
 181:Src/system_stm32l4xx.c **** 
 182:Src/system_stm32l4xx.c **** /**
 183:Src/system_stm32l4xx.c ****   * @}
 184:Src/system_stm32l4xx.c ****   */
 185:Src/system_stm32l4xx.c **** 
 186:Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 187:Src/system_stm32l4xx.c ****   * @{
 188:Src/system_stm32l4xx.c ****   */
 189:Src/system_stm32l4xx.c **** 
 190:Src/system_stm32l4xx.c **** /**
 191:Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 192:Src/system_stm32l4xx.c ****   * @param  None
 193:Src/system_stm32l4xx.c ****   * @retval None
 194:Src/system_stm32l4xx.c ****   */
 195:Src/system_stm32l4xx.c **** 
 196:Src/system_stm32l4xx.c **** void SystemInit(void)
 197:Src/system_stm32l4xx.c **** {
  29              		.loc 1 197 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 5


  33              		@ link register save eliminated.
 198:Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 199:Src/system_stm32l4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 200:Src/system_stm32l4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 200 0
  35 0000 0F49     		ldr	r1, .L2
  36 0002 D1F88830 		ldr	r3, [r1, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C1F88830 		str	r3, [r1, #136]
 201:Src/system_stm32l4xx.c ****   #endif
 202:Src/system_stm32l4xx.c **** 
 203:Src/system_stm32l4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 204:Src/system_stm32l4xx.c ****   /* Set MSION bit */
 205:Src/system_stm32l4xx.c ****   RCC->CR |= RCC_CR_MSION;
  39              		.loc 1 205 0
  40 000e 0D4B     		ldr	r3, .L2+4
  41 0010 1A68     		ldr	r2, [r3]
  42 0012 42F00102 		orr	r2, r2, #1
  43 0016 1A60     		str	r2, [r3]
 206:Src/system_stm32l4xx.c **** 
 207:Src/system_stm32l4xx.c ****   /* Reset CFGR register */
 208:Src/system_stm32l4xx.c ****   RCC->CFGR = 0x00000000U;
  44              		.loc 1 208 0
  45 0018 0020     		movs	r0, #0
  46 001a 9860     		str	r0, [r3, #8]
 209:Src/system_stm32l4xx.c **** 
 210:Src/system_stm32l4xx.c ****   /* Reset HSEON, CSSON , HSION, and PLLON bits */
 211:Src/system_stm32l4xx.c ****   RCC->CR &= 0xEAF6FFFFU;
  47              		.loc 1 211 0
  48 001c 1A68     		ldr	r2, [r3]
  49 001e 22F0A852 		bic	r2, r2, #352321536
  50 0022 22F41022 		bic	r2, r2, #589824
  51 0026 1A60     		str	r2, [r3]
 212:Src/system_stm32l4xx.c **** 
 213:Src/system_stm32l4xx.c ****   /* Reset PLLCFGR register */
 214:Src/system_stm32l4xx.c ****   RCC->PLLCFGR = 0x00001000U;
  52              		.loc 1 214 0
  53 0028 4FF48052 		mov	r2, #4096
  54 002c DA60     		str	r2, [r3, #12]
 215:Src/system_stm32l4xx.c **** 
 216:Src/system_stm32l4xx.c ****   /* Reset HSEBYP bit */
 217:Src/system_stm32l4xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  55              		.loc 1 217 0
  56 002e 1A68     		ldr	r2, [r3]
  57 0030 22F48022 		bic	r2, r2, #262144
  58 0034 1A60     		str	r2, [r3]
 218:Src/system_stm32l4xx.c **** 
 219:Src/system_stm32l4xx.c ****   /* Disable all interrupts */
 220:Src/system_stm32l4xx.c ****   RCC->CIER = 0x00000000U;
  59              		.loc 1 220 0
  60 0036 9861     		str	r0, [r3, #24]
 221:Src/system_stm32l4xx.c **** 
 222:Src/system_stm32l4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 223:Src/system_stm32l4xx.c **** #ifdef VECT_TAB_SRAM
 224:Src/system_stm32l4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 225:Src/system_stm32l4xx.c **** #else
 226:Src/system_stm32l4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 6


  61              		.loc 1 226 0
  62 0038 4FF00063 		mov	r3, #134217728
  63 003c 8B60     		str	r3, [r1, #8]
  64 003e 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0040 00ED00E0 		.word	-536810240
  69 0044 00100240 		.word	1073876992
  70              		.cfi_endproc
  71              	.LFE306:
  73              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  74              		.align	2
  75              		.global	SystemCoreClockUpdate
  76              		.thumb
  77              		.thumb_func
  79              	SystemCoreClockUpdate:
  80              	.LFB307:
 227:Src/system_stm32l4xx.c **** #endif
 228:Src/system_stm32l4xx.c **** }
 229:Src/system_stm32l4xx.c **** 
 230:Src/system_stm32l4xx.c **** /**
 231:Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:Src/system_stm32l4xx.c ****   *         other parameters.
 235:Src/system_stm32l4xx.c ****   *
 236:Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 239:Src/system_stm32l4xx.c ****   *
 240:Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 241:Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 242:Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 243:Src/system_stm32l4xx.c ****   *
 244:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 245:Src/system_stm32l4xx.c ****   *
 246:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 247:Src/system_stm32l4xx.c ****   *
 248:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 249:Src/system_stm32l4xx.c ****   *
 250:Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 251:Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 252:Src/system_stm32l4xx.c ****   *
 253:Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 254:Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 255:Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 256:Src/system_stm32l4xx.c ****   *
 257:Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 258:Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 259:Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 260:Src/system_stm32l4xx.c ****   *
 261:Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 262:Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 263:Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 264:Src/system_stm32l4xx.c ****   *              have wrong result.
 265:Src/system_stm32l4xx.c ****   *
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 7


 266:Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 267:Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 268:Src/system_stm32l4xx.c ****   *
 269:Src/system_stm32l4xx.c ****   * @param  None
 270:Src/system_stm32l4xx.c ****   * @retval None
 271:Src/system_stm32l4xx.c ****   */
 272:Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 273:Src/system_stm32l4xx.c **** {
  81              		.loc 1 273 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL0:
 274:Src/system_stm32l4xx.c ****   uint32_t tmp = 0U, msirange = 0U, pllvco = 0U, pllr = 2U, pllsource = 0U, pllm = 2U;
 275:Src/system_stm32l4xx.c **** 
 276:Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 277:Src/system_stm32l4xx.c ****   if((RCC->CR & RCC_CR_MSIRGSEL) == RESET)
  87              		.loc 1 277 0
  88 0000 2F4B     		ldr	r3, .L19
  89 0002 1B68     		ldr	r3, [r3]
  90 0004 13F0080F 		tst	r3, #8
  91 0008 05D1     		bne	.L5
 278:Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 279:Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  92              		.loc 1 279 0
  93 000a 2D4B     		ldr	r3, .L19
  94 000c D3F89430 		ldr	r3, [r3, #148]
  95 0010 C3F30323 		ubfx	r3, r3, #8, #4
  96              	.LVL1:
  97 0014 03E0     		b	.L6
  98              	.LVL2:
  99              	.L5:
 280:Src/system_stm32l4xx.c ****   }
 281:Src/system_stm32l4xx.c ****   else
 282:Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 283:Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 100              		.loc 1 283 0
 101 0016 2A4B     		ldr	r3, .L19
 102 0018 1B68     		ldr	r3, [r3]
 103 001a C3F30313 		ubfx	r3, r3, #4, #4
 104              	.LVL3:
 105              	.L6:
 284:Src/system_stm32l4xx.c ****   }
 285:Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 286:Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
 106              		.loc 1 286 0
 107 001e 294A     		ldr	r2, .L19+4
 108 0020 52F82320 		ldr	r2, [r2, r3, lsl #2]
 109              	.LVL4:
 287:Src/system_stm32l4xx.c **** 
 288:Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 289:Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 110              		.loc 1 289 0
 111 0024 2648     		ldr	r0, .L19
 112 0026 8368     		ldr	r3, [r0, #8]
 113 0028 03F00C03 		and	r3, r3, #12
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 8


 114 002c 0C2B     		cmp	r3, #12
 115 002e 3AD8     		bhi	.L7
 116 0030 DFE803F0 		tbb	[pc, r3]
 117              	.L9:
 118 0034 07       		.byte	(.L8-.L9)/2
 119 0035 39       		.byte	(.L7-.L9)/2
 120 0036 39       		.byte	(.L7-.L9)/2
 121 0037 39       		.byte	(.L7-.L9)/2
 122 0038 0A       		.byte	(.L10-.L9)/2
 123 0039 39       		.byte	(.L7-.L9)/2
 124 003a 39       		.byte	(.L7-.L9)/2
 125 003b 39       		.byte	(.L7-.L9)/2
 126 003c 0E       		.byte	(.L11-.L9)/2
 127 003d 39       		.byte	(.L7-.L9)/2
 128 003e 39       		.byte	(.L7-.L9)/2
 129 003f 39       		.byte	(.L7-.L9)/2
 130 0040 12       		.byte	(.L12-.L9)/2
 131 0041 00       		.p2align 1
 132              	.L8:
 290:Src/system_stm32l4xx.c ****   {
 291:Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 292:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 133              		.loc 1 292 0
 134 0042 214B     		ldr	r3, .L19+8
 135 0044 1A60     		str	r2, [r3]
 293:Src/system_stm32l4xx.c ****       break;
 136              		.loc 1 293 0
 137 0046 30E0     		b	.L13
 138              	.L10:
 294:Src/system_stm32l4xx.c **** 
 295:Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 296:Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 139              		.loc 1 296 0
 140 0048 204A     		ldr	r2, .L19+12
 141              	.LVL5:
 142 004a 1F4B     		ldr	r3, .L19+8
 143 004c 1A60     		str	r2, [r3]
 297:Src/system_stm32l4xx.c ****       break;
 144              		.loc 1 297 0
 145 004e 2CE0     		b	.L13
 146              	.LVL6:
 147              	.L11:
 298:Src/system_stm32l4xx.c **** 
 299:Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 300:Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 148              		.loc 1 300 0
 149 0050 1F4A     		ldr	r2, .L19+16
 150              	.LVL7:
 151 0052 1D4B     		ldr	r3, .L19+8
 152 0054 1A60     		str	r2, [r3]
 301:Src/system_stm32l4xx.c ****       break;
 153              		.loc 1 301 0
 154 0056 28E0     		b	.L13
 155              	.LVL8:
 156              	.L12:
 302:Src/system_stm32l4xx.c **** 
 303:Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 9


 304:Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 305:Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 306:Src/system_stm32l4xx.c ****          */
 307:Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 157              		.loc 1 307 0
 158 0058 1949     		ldr	r1, .L19
 159 005a CB68     		ldr	r3, [r1, #12]
 160 005c 03F00303 		and	r3, r3, #3
 161              	.LVL9:
 308:Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 162              		.loc 1 308 0
 163 0060 C968     		ldr	r1, [r1, #12]
 164 0062 C1F30211 		ubfx	r1, r1, #4, #3
 165 0066 0131     		adds	r1, r1, #1
 166              	.LVL10:
 309:Src/system_stm32l4xx.c **** 
 310:Src/system_stm32l4xx.c ****       switch (pllsource)
 167              		.loc 1 310 0
 168 0068 022B     		cmp	r3, #2
 169 006a 02D0     		beq	.L15
 170 006c 032B     		cmp	r3, #3
 171 006e 04D0     		beq	.L16
 172 0070 07E0     		b	.L18
 173              	.L15:
 311:Src/system_stm32l4xx.c ****       {
 312:Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 313:Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 174              		.loc 1 313 0
 175 0072 164A     		ldr	r2, .L19+12
 176              	.LVL11:
 177 0074 B2FBF1F1 		udiv	r1, r2, r1
 178              	.LVL12:
 314:Src/system_stm32l4xx.c ****           break;
 179              		.loc 1 314 0
 180 0078 05E0     		b	.L17
 181              	.LVL13:
 182              	.L16:
 315:Src/system_stm32l4xx.c **** 
 316:Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 317:Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 183              		.loc 1 317 0
 184 007a 154A     		ldr	r2, .L19+16
 185              	.LVL14:
 186 007c B2FBF1F1 		udiv	r1, r2, r1
 187              	.LVL15:
 318:Src/system_stm32l4xx.c ****           break;
 188              		.loc 1 318 0
 189 0080 01E0     		b	.L17
 190              	.LVL16:
 191              	.L18:
 319:Src/system_stm32l4xx.c **** 
 320:Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 321:Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 192              		.loc 1 321 0
 193 0082 B2FBF1F1 		udiv	r1, r2, r1
 194              	.LVL17:
 195              	.L17:
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 10


 322:Src/system_stm32l4xx.c ****           break;
 323:Src/system_stm32l4xx.c ****       }
 324:Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 196              		.loc 1 324 0
 197 0086 0E48     		ldr	r0, .L19
 198 0088 C368     		ldr	r3, [r0, #12]
 199              	.LVL18:
 200 008a C3F30623 		ubfx	r3, r3, #8, #7
 201 008e 01FB03F2 		mul	r2, r1, r3
 202              	.LVL19:
 325:Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 203              		.loc 1 325 0
 204 0092 C368     		ldr	r3, [r0, #12]
 205 0094 C3F34163 		ubfx	r3, r3, #25, #2
 206 0098 0133     		adds	r3, r3, #1
 207 009a 5B00     		lsls	r3, r3, #1
 208              	.LVL20:
 326:Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 209              		.loc 1 326 0
 210 009c B2FBF3F3 		udiv	r3, r2, r3
 211              	.LVL21:
 212 00a0 094A     		ldr	r2, .L19+8
 213              	.LVL22:
 214 00a2 1360     		str	r3, [r2]
 327:Src/system_stm32l4xx.c ****       break;
 215              		.loc 1 327 0
 216 00a4 01E0     		b	.L13
 217              	.LVL23:
 218              	.L7:
 328:Src/system_stm32l4xx.c **** 
 329:Src/system_stm32l4xx.c ****     default:
 330:Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 219              		.loc 1 330 0
 220 00a6 084B     		ldr	r3, .L19+8
 221 00a8 1A60     		str	r2, [r3]
 222              	.LVL24:
 223              	.L13:
 331:Src/system_stm32l4xx.c ****       break;
 332:Src/system_stm32l4xx.c ****   }
 333:Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 334:Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 335:Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 224              		.loc 1 335 0
 225 00aa 054B     		ldr	r3, .L19
 226 00ac 9B68     		ldr	r3, [r3, #8]
 227 00ae C3F30313 		ubfx	r3, r3, #4, #4
 228 00b2 084A     		ldr	r2, .L19+20
 229 00b4 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 230              	.LVL25:
 336:Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 337:Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 231              		.loc 1 337 0
 232 00b6 044A     		ldr	r2, .L19+8
 233 00b8 1368     		ldr	r3, [r2]
 234 00ba CB40     		lsrs	r3, r3, r1
 235 00bc 1360     		str	r3, [r2]
 236 00be 7047     		bx	lr
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 11


 237              	.L20:
 238              		.align	2
 239              	.L19:
 240 00c0 00100240 		.word	1073876992
 241 00c4 00000000 		.word	.LANCHOR0
 242 00c8 00000000 		.word	.LANCHOR1
 243 00cc 0024F400 		.word	16000000
 244 00d0 00127A00 		.word	8000000
 245 00d4 00000000 		.word	.LANCHOR2
 246              		.cfi_endproc
 247              	.LFE307:
 249              		.global	MSIRangeTable
 250              		.global	APBPrescTable
 251              		.global	AHBPrescTable
 252              		.global	SystemCoreClock
 253              		.section	.rodata.AHBPrescTable,"a",%progbits
 254              		.align	2
 255              		.set	.LANCHOR2,. + 0
 258              	AHBPrescTable:
 259 0000 00       		.byte	0
 260 0001 00       		.byte	0
 261 0002 00       		.byte	0
 262 0003 00       		.byte	0
 263 0004 00       		.byte	0
 264 0005 00       		.byte	0
 265 0006 00       		.byte	0
 266 0007 00       		.byte	0
 267 0008 01       		.byte	1
 268 0009 02       		.byte	2
 269 000a 03       		.byte	3
 270 000b 04       		.byte	4
 271 000c 06       		.byte	6
 272 000d 07       		.byte	7
 273 000e 08       		.byte	8
 274 000f 09       		.byte	9
 275              		.section	.rodata.APBPrescTable,"a",%progbits
 276              		.align	2
 279              	APBPrescTable:
 280 0000 00       		.byte	0
 281 0001 00       		.byte	0
 282 0002 00       		.byte	0
 283 0003 00       		.byte	0
 284 0004 01       		.byte	1
 285 0005 02       		.byte	2
 286 0006 03       		.byte	3
 287 0007 04       		.byte	4
 288              		.section	.data.SystemCoreClock,"aw",%progbits
 289              		.align	2
 290              		.set	.LANCHOR1,. + 0
 293              	SystemCoreClock:
 294 0000 00093D00 		.word	4000000
 295              		.section	.rodata.MSIRangeTable,"a",%progbits
 296              		.align	2
 297              		.set	.LANCHOR0,. + 0
 300              	MSIRangeTable:
 301 0000 A0860100 		.word	100000
 302 0004 400D0300 		.word	200000
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 12


 303 0008 801A0600 		.word	400000
 304 000c 00350C00 		.word	800000
 305 0010 40420F00 		.word	1000000
 306 0014 80841E00 		.word	2000000
 307 0018 00093D00 		.word	4000000
 308 001c 00127A00 		.word	8000000
 309 0020 0024F400 		.word	16000000
 310 0024 00366E01 		.word	24000000
 311 0028 0048E801 		.word	32000000
 312 002c 006CDC02 		.word	48000000
 313              		.text
 314              	.Letext0:
 315              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/machine/_default_ty
 316              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi-49/20150925/arm-none-eabi/include/sys/_stdint.h"
 317              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 318              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 319              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
ARM GAS  /var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l4xx.c
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:21     .text.SystemInit:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:26     .text.SystemInit:0000000000000000 SystemInit
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:68     .text.SystemInit:0000000000000040 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:74     .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:79     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:118    .text.SystemCoreClockUpdate:0000000000000034 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:240    .text.SystemCoreClockUpdate:00000000000000c0 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:300    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:279    .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:258    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:293    .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:254    .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:276    .rodata.APBPrescTable:0000000000000000 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:289    .data.SystemCoreClock:0000000000000000 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:296    .rodata.MSIRangeTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:131    .text.SystemCoreClockUpdate:0000000000000041 $d
/var/folders/bq/zy6zjhwd1qn4sn8dk3jpjcq80000gn/T//ccsQhA77.s:131    .text.SystemCoreClockUpdate:0000000000000042 $t

NO UNDEFINED SYMBOLS
